{"version":3,"sources":["webpack:///./src/app/_shared/services/claims.service.ts","webpack:///./src/app/claims/claims-routing.module.ts","webpack:///./src/app/claims/claims.module.ts","webpack:///./src/app/claims/index.ts","webpack:///./src/app/claims/index/index.component.html","webpack:///./src/app/claims/index/index.component.scss","webpack:///./src/app/claims/index/index.component.ts"],"names":[],"mappings":"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","file":"claims-claims-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClaimsService {\n\n  constructor() { }\n\n\n\n\n\n\ngetUnsentClaims(): any {\n  return from(JSON.parse(localStorage.getItem('myClaims')));\n\n\n}\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IndexComponent } from './index';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: IndexComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClaimsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// import { AppMaterialModule } from '../app-material/app-material.module';\r\n\r\nimport { ClaimsRoutingModule } from './claims-routing.module';\r\nimport { IndexComponent } from './index/index.component';\r\n// import { SendClaimsComponent } from './send-claims/send-claims.component';\r\n// import { MatButtonModule,  MatButton } from '@angular/material';\r\n// import {MatDialogModule} from '@angular/material';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n// import { ClaimsEditComponent } from './claims-edit/claims-edit.component';\r\n\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\n// import { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport {AgGridModule} from 'ag-grid-angular';\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IndexComponent\r\n    //ClaimsEditComponent, \r\n    // SendClaimsComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    ClaimsRoutingModule,\r\n    DynamicFormsMaterialUIModule,\r\n    // FlexLayoutModule\r\n    // AppMaterialModule,\r\n    // MatButtonModule,\r\n    // MatDialogModule\r\n    AgGridModule.withComponents(\r\n      []\r\n  ),\r\n  AppMaterialModule,\r\n  ],\r\n  entryComponents: [   \r\n  //  SendClaimsComponent\r\n  ]\r\n})\r\nexport class ClaimsModule { }\r\n","\r\nexport * from './index/index.component';\r\n\r\n","module.exports = \"<!-- xx{{listAll$ | json}}xx -->\\r\\n\\r\\n\\r\\n<div class=\\\"table-responsive-lg\\\">\\r\\n  <!-- (rowClicked)=\\\"openDialog($event)\\\" -->\\r\\n  <mat-card>\\r\\n<h2>Claims Out Box</h2>\\r\\n\\r\\n  <ag-grid-angular   #agGrid style=\\\"width: 100%;\\\" class=\\\"ag-theme-material\\\" \\r\\n  [gridOptions]=\\\"gridOptions\\\"\\r\\n    [rowData]=\\\"listAll$\\\" \\r\\n    rowSelection=\\\"multiple\\\"\\r\\n    (cellClicked)=\\\"onCellClicked($event)\\\"\\r\\n    (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n    >\\r\\n\\r\\n\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Recordings\\\">\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Actions\\\" [width]=\\\"100\\\" [pinned]=\\\"true\\\" [cellRenderer]=\\\"editBtnCellRenderer\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"#\\\" [width]=\\\"80\\\" [checkboxSelection]=\\\"true\\\"  [suppressMenu]=\\\"false\\\" [pinned]=\\\"true\\\"\\r\\n       ></ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Name\\\" field=\\\"name\\\" [width]=\\\"175\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        \\r\\n   </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Artist\\\" field=\\\"artist\\\" [width]=\\\"120\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Details\\\">\\r\\n      <ag-grid-column headerName=\\\"ISRC\\\" field=\\\"ISRC\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"ISWC\\\" field=\\\"ISWC\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Owner\\\" field=\\\"owner\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Collective\\\" field=\\\"collective\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Claim Status\\\" field=\\\"status\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"false\\\"\\r\\n        [resizable]=\\\"false\\\" [filter]=\\\"false\\\"></ag-grid-column>\\r\\n\\r\\n    </ag-grid-column>\\r\\n  </ag-grid-angular>\\r\\n\\r\\n  <mat-action-list>  <button mat-raised-button mat-button (click)=\\\"sendToClaim($event)\\\">Delete Selected</button>\\r\\n     </mat-action-list> \\r\\n     <div>Selection: <span id=\\\"selectedRows\\\">...</span></div>\\r\\n\\r\\n</mat-card>\\r\\n     <hr>\\r\\n\\r\\n\\r\\n    <mat-card>\\r\\n     <h2>Claims In Box</h2>\\r\\n     your in box is empty please check back later</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYWltcy9pbmRleC9pbmRleC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatButton } from '@angular/material';\r\nimport { tap, switchMap } from 'rxjs/operators';\r\nimport { delay } from 'q';\r\nimport { ClaimsEditComponent } from '../claims-edit/claims-edit.component';\r\nimport { ClaimsService } from 'src/app/_shared/services/claims.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  gridOptions: GridOptions;\r\n  claimsToSend: Array<any>;\r\n  listAll$;\r\n  showSpinner: boolean;\r\n  allItems: any[];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private claimsService: ClaimsService,\r\n\r\n  ) {\r\n    this.listAll();\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n\r\n  onSelectionChanged(ev) {\r\n    this.gridApi = ev.api;\r\n\r\n    const selectedRows = this.gridApi.getSelectedRows();\r\n    let selectedRowsString = '';\r\n    let theRow;\r\n    selectedRows.forEach(function(selectedRow, index) {\r\n      if (index > 5) {\r\n        return;\r\n      }\r\n      if (index !== 0) {\r\n        selectedRowsString += ', ';\r\n      \r\n      }\r\n      selectedRowsString += selectedRow.Name;\r\n      theRow = selectedRow; \r\n    });\r\n    this.claimsToSend = [];\r\n    selectedRows.forEach(i => { \r\n     \r\n      this.claimsToSend.push(\r\n      {\r\n       'name': i.Name,\r\n       'artist': i.Artist,\r\n       'collective': i.Collective,\r\n       'owner': i.Owner\r\n      });\r\n   });\r\n\r\n\r\n    if (selectedRows.length >= 6) {\r\n      selectedRowsString += ' - and ' + (selectedRows.length - 6) + ' others';\r\n    }\r\n    document.querySelector('#selectedRows').innerHTML = selectedRowsString;\r\n  \r\n  }\r\n\r\n  openDialog(ev: any): void {\r\n    let dialogRef = this.dialog.open(ClaimsEditComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  editBtnCellRenderer(params) {\r\n    const btn = '<button class=\"mat-button mat-raised-button\"><span class=\"mat-button-wrapper\">Edit</span><div class=\"mat-button-ripple mat-ripple\"></div><div class=\"mat-button-focus-overlay\"></div></button>';\r\n    return btn;\r\n  }\r\n\r\n  listAll() {\r\n    this.listAll$ = JSON.parse(localStorage.getItem('myClaims'));\r\n\r\n\r\n\r\n    // this.listAll$ = new Subject<string>().pipe(\r\n    //   switchMap(type => this.claimsService.getUnsentClaims())\r\n    // );\r\n\r\n\r\n\r\n    // this.claimsService.getUnsentClaims().pipe(\r\n    //   tap(() => this.showSpinner = true),\r\n    //   delay(500) // fake loading\r\n    // )\r\n    //   .subscribe(res => {\r\n    //     this.allItems = res;\r\n    //     this.showSpinner = false;\r\n    //   });\r\n\r\n  }\r\n  sendToClaim(ev: any) {\r\n\r\n  }\r\n\r\n  onCellClicked(ev: any) {\r\n    if (ev.colDef.headerName === 'Actions') {\r\n      this.openDialog(ev.data);\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":""}