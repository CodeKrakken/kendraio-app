{"version":3,"sources":["webpack:///./src/app/_shared/services/claims.service.ts","webpack:///./src/app/claims/_shared/forms/edit-send-form/edit-send-form.component.html","webpack:///./src/app/claims/_shared/forms/edit-send-form/edit-send-form.component.scss","webpack:///./src/app/claims/_shared/forms/edit-send-form/edit-send-form.component.ts","webpack:///./src/app/claims/_shared/forms/edit-send-form/form.layout.ts","webpack:///./src/app/claims/claims-edit-send/claims-edit-send.component.html","webpack:///./src/app/claims/claims-edit-send/claims-edit-send.component.scss","webpack:///./src/app/claims/claims-edit-send/claims-edit-send.component.ts","webpack:///./src/app/claims/claims-routing.module.ts","webpack:///./src/app/claims/claims.module.ts","webpack:///./src/app/claims/index.ts","webpack:///./src/app/claims/index/claims.component.html","webpack:///./src/app/claims/index/claims.component.scss","webpack:///./src/app/claims/index/claims.component.ts"],"names":[],"mappings":"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","file":"claims-claims-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClaimsService {\n\n  constructor() { }\n\n\n\n\n\n\ngetUnsentClaims(): any {\n  return from(JSON.parse(localStorage.getItem('myClaims')));\n\n\n}\n}\n","module.exports = \"\\n<section\\nfxLayout=\\\"row wrap\\\"\\nfxLayoutAlign=\\\"start start\\\" \\nfxLayoutGap=\\\"20px\\\"\\n>\\n\\n<mat-card>\\n\\n  <mat-card-header>\\n  <b>Claim Details</b>\\n  </mat-card-header>\\n  <mat-card-content>\\n\\n\\n    <mat-list>\\n        <mat-list-item>Name:   {{data.name}} </mat-list-item>\\n        <mat-list-item>Artist:   {{data.artist}} </mat-list-item>\\n        <mat-list-item>Collective:  {{data.collective}} </mat-list-item>\\n        <mat-list-item>Collective:  {{data.owner}} </mat-list-item>\\n       </mat-list>\\n\\n  </mat-card-content>\\n\\n\\n</mat-card>\\n\\n\\n    <mat-card>\\n        <mat-card-header>\\n            <b>Extra Information</b>\\n            <button mat-button ><mat-icon>file_copy</mat-icon> copy from previous</button>\\n          </mat-card-header>\\n  \\n      <form [formGroup]=\\\"formGroup\\\">\\n\\n\\n        <dynamic-material-form \\n                      [group]=\\\"formGroup\\\" [layout]=\\\"formLayout\\\" [model]=\\\"formModel\\\" (blur)=\\\"onBlur($event)\\\"\\n                      (change)=\\\"onChange($event)\\\" (focus)=\\\"onFocus($event)\\\" (matEvent)=\\\"onMatEvent($event)\\\"                  \\n                           ></dynamic-material-form>\\n  \\n      </form>\\n    </mat-card>\\n  \\n    <div mat-dialog-actions class=\\\"align-right\\\">\\n      <button mat-button mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\n      <button mat-raised-button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Send</button>\\n    </div>\\n     <!-- formdata = <pre>{{ data | json }}</pre> -->\\n     <!-- formGroup = {{formGroup.value | json}} -->\\n  \\n  </section>\\n\\n\\n  \\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYWltcy9fc2hhcmVkL2Zvcm1zL2VkaXQtc2VuZC1mb3JtL2VkaXQtc2VuZC1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { DynamicFormModel, DynamicFormService, DynamicFormLayout } from '@ng-dynamic-forms/core';\n\nimport { FormsModule, FormGroup, FormArray, FormBuilder, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MY_CLAIMS_FORM_MODEL } from '../formModel';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { CLAIMS_FORM_LAYOUT } from './form.layout';\n@Component({\n  selector: 'app-edit-send-form',\n  templateUrl: './edit-send-form.component.html',\n  styleUrls: ['./edit-send-form.component.scss']\n})\nexport class EditSendFormComponent implements OnInit, OnChanges {\n  @Input() \n  data: any;\n  \n  formModel: DynamicFormModel = MY_CLAIMS_FORM_MODEL;\n  formGroup: FormGroup;\n  formLayout: DynamicFormLayout = CLAIMS_FORM_LAYOUT;\n\n  constructor(\n    private formService: DynamicFormService\n  ) { \n\n  }\n\n\n\n  ngOnInit() {\n    this.formGroup = this.formService.createFormGroup(this.formModel);\n    this.formGroup.patchValue(this.data);\n    // this.formGroup.get('comments').patchValue('booly');\n    // this.formGroup.get('claim.details').patchValue(this.data);\n   this.formGroup.addControl('details', new FormControl(''));\n   this.formGroup.get('details').patchValue(this.data);\n    \n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.formGroup) {\n    this.formGroup.get('details').patchValue(this.data);\n  }\n  }\n\n//   ngDoCheck(): void {\n//     //Called every time that the input properties of a component or a directive are checked. Use it to extend change detection by performing a custom check.\n//     //Add 'implements DoCheck' to the class.\n// alert('checks');\n//   }\n\n\n\n  onBlur($event) {\n    console.log(`Material blur event on: ${$event.model.id}: `, $event);\n  }\n\n  onChange($event) {\n    console.log(`Material change event on: ${$event.model.id}: `, $event);\n  }\n\n  onFocus($event) {\n    console.log(`Material focus event on: ${$event.model.id}: `, $event);\n  }\n\n  onMatEvent($event) {\n    console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\n  }\n\n}\n","export const CLAIMS_FORM_LAYOUT = {\r\n\r\n    'stuff': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};","module.exports = \"\\n\\n<h2>Edit and Send Form:</h2>\\n<h5>You are about to send {{data.length}} claims</h5>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title> Claim {{rowCurrent + 1}} of  {{rowCount}}</mat-card-title>\\n    <mat-card-subtitle></mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n  \\n      <!-- {{claim | json}} -->\\n\\n<app-edit-send-form [data]=\\\"claim\\\"></app-edit-send-form>\\n\\n  </mat-card-content>\\n\\n</mat-card>\\n\\n\\n\\n  <mat-card-actions>\\n      <button mat-mini-fab (click)=\\\"goToPrevRow()\\\"><mat-icon>arrow_backward</mat-icon></button>\\n      <button mat-mini-fab (click)=\\\"goToNextRow()\\\"><mat-icon>arrow_forward</mat-icon></button>\\n      <button mat-button  [mat-dialog-close]=\\\"data\\\">Send All</button>\\n  </mat-card-actions>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYWltcy9jbGFpbXMtZWRpdC1zZW5kL2NsYWltcy1lZGl0LXNlbmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject, AfterContentInit } from '@angular/core';\nimport { DynamicFormModel, DynamicFormService, DynamicFormLayout } from '@ng-dynamic-forms/core';\n\nimport { FormsModule, FormGroup, FormArray, FormBuilder, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MY_CLAIMS_FORM_MODEL } from '../_shared/forms/formModel';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { CLAIMS_FORM_LAYOUT } from '../claims-edit/form.layout';\n\n@Component({\n  selector: 'app-claims-edit-send',\n  templateUrl: './claims-edit-send.component.html',\n  styleUrls: ['./claims-edit-send.component.scss']\n})\nexport class ClaimsEditSendComponent implements OnInit, AfterContentInit {\n  formModel: DynamicFormModel = MY_CLAIMS_FORM_MODEL;\n  formGroup: FormGroup;\n  formLayout: DynamicFormLayout = CLAIMS_FORM_LAYOUT;\n  rowCount: number;\n  rowCurrent: number;\n  claim: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private formService: DynamicFormService\n  ) {\n    this.rowCurrent = 0;\n   }\n\n  ngOnInit() {\n    //this.formGroup = this.formService.createFormGroup(this.formModel);\n    this.rowCount = this.data.length;\n    this.claim = this.data;\n   // this.formGroup.patchValue(this.data[0]);\n\n  //  this.formGroup.get('comments').patchValue('boo');\n  }\n  ngAfterContentInit() {\n    this.claim = this.data[0];\n  }\n\n\n  goToNextRow() {\n    if (this.rowCurrent < this.rowCount - 1) {\n      this.claim = this.data[this.rowCurrent + 1];\n      this.rowCurrent++;\n    }\n  }\n\n  goToPrevRow() {\n    if (this.rowCurrent > 0 ) {\n      this.claim = this.data[this.rowCurrent - 1];\n      this.rowCurrent--;\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IndexComponent } from './index';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: IndexComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClaimsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// import { AppMaterialModule } from '../app-material/app-material.module';\r\n\r\nimport { ClaimsRoutingModule } from './claims-routing.module';\r\nimport { IndexComponent } from './index/claims.component';\r\n// import { SendClaimsComponent } from './send-claims/send-claims.component';\r\n// import { MatButtonModule,  MatButton } from '@angular/material';\r\n// import {MatDialogModule} from '@angular/material';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n// import { ClaimsEditComponent } from './claims-edit/claims-edit.component';\r\n\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\n// import { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport {AgGridModule} from 'ag-grid-angular';\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\nimport { ClaimsEditSendComponent } from './claims-edit-send/claims-edit-send.component';\nimport { EditSendFormComponent } from './_shared/forms/edit-send-form/edit-send-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IndexComponent,\r\n    ClaimsEditSendComponent,\r\n    EditSendFormComponent\r\n    //ClaimsEditComponent, \r\n    // SendClaimsComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    ClaimsRoutingModule,\r\n    DynamicFormsMaterialUIModule,\r\n    // FlexLayoutModule\r\n    // AppMaterialModule,\r\n    // MatButtonModule,\r\n    // MatDialogModule\r\n    AgGridModule.withComponents(\r\n      []\r\n  ),\r\n  AppMaterialModule,\r\n  ],\r\n  entryComponents: [   \r\n    ClaimsEditSendComponent\r\n  ]\r\n})\r\nexport class ClaimsModule { }\r\n","\r\nexport * from './index/claims.component';\r\n\r\n","module.exports = \"<!-- xx{{listAll$ | json}}xx -->\\r\\n\\r\\n\\r\\n<div class=\\\"table-responsive-lg\\\">\\r\\n  <!-- (rowClicked)=\\\"openDialog($event)\\\" -->\\r\\n  <mat-card>\\r\\n<h2>Claims Out Box</h2>\\r\\n\\r\\n<mat-progress-bar *ngIf=\\\"showSpinner\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n\\r\\n\\r\\n\\r\\n  <ag-grid-angular   #agGrid style=\\\"width: 100%;\\\" class=\\\"ag-theme-material\\\" \\r\\n  [gridOptions]=\\\"gridOptions\\\"\\r\\n    [rowData]=\\\"listAll$\\\" \\r\\n    rowSelection=\\\"multiple\\\"\\r\\n    (cellClicked)=\\\"onCellClicked($event)\\\"\\r\\n    (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n    >\\r\\n\\r\\n\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Recordings\\\">\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Actions\\\" [width]=\\\"100\\\" [pinned]=\\\"true\\\" [cellRenderer]=\\\"editBtnCellRenderer\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"#\\\" [width]=\\\"80\\\" [checkboxSelection]=\\\"true\\\"  [suppressMenu]=\\\"false\\\" [pinned]=\\\"true\\\"\\r\\n      [headerCheckboxSelection]=\\\"true\\\"\\r\\n\\r\\n       ></ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Name\\\" field=\\\"name\\\" [width]=\\\"175\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        \\r\\n   </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Artist\\\" field=\\\"artist\\\" [width]=\\\"120\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Details\\\">\\r\\n      <ag-grid-column headerName=\\\"ISRC\\\" field=\\\"ISRC\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"ISWC\\\" field=\\\"ISWC\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Owner\\\" field=\\\"owner\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Collective\\\" field=\\\"collective\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Claim Status\\\" field=\\\"status\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"false\\\"\\r\\n        [resizable]=\\\"false\\\" [filter]=\\\"false\\\"></ag-grid-column>\\r\\n\\r\\n    </ag-grid-column>\\r\\n  </ag-grid-angular>\\r\\n\\r\\n  <mat-action-list>  <button mat-raised-button mat-button (click)=\\\"deleteSelectedRows()\\\">Delete Selected</button>\\r\\n    <button mat-raised-button mat-button (click)=\\\"editSendClaims(claimsToSend)\\\">Edit/Send Selected</button>\\r\\n     </mat-action-list> \\r\\n     <div>Selection: <span id=\\\"selectedRows\\\">...</span></div>\\r\\n\\r\\n</mat-card>\\r\\n     <hr>\\r\\n\\r\\n\\r\\n    <mat-card>\\r\\n     <h2>Claims In Box</h2>\\r\\n \\r\\n    \\r\\n     <mat-progress-bar *ngIf=\\\"showSpinner2\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n     <ag-grid-angular   #inBoxGrid style=\\\"width: 100%;\\\" class=\\\"ag-theme-material\\\" \\r\\n     [gridOptions]=\\\"gridOptions\\\"\\r\\n       [rowData]=\\\"listAllInBox\\\" \\r\\n       rowSelection=\\\"multiple\\\"\\r\\n       (cellClicked)=\\\"onCellClicked($event)\\\"\\r\\n       (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n       >\\r\\n   \\r\\n   \\r\\n   \\r\\n       <ag-grid-column headerName=\\\"Recordings\\\">\\r\\n   \\r\\n         <ag-grid-column headerName=\\\"Actions\\\" [width]=\\\"100\\\" [pinned]=\\\"true\\\" [cellRenderer]=\\\"editBtnCellRenderer\\\">\\r\\n         </ag-grid-column>\\r\\n   \\r\\n         <ag-grid-column headerName=\\\"#\\\" [width]=\\\"80\\\" [checkboxSelection]=\\\"true\\\"  [suppressMenu]=\\\"false\\\" [pinned]=\\\"true\\\"\\r\\n         [headerCheckboxSelection]=\\\"true\\\"   \\r\\n          ></ag-grid-column>\\r\\n   \\r\\n         <ag-grid-column headerName=\\\"Name\\\" field=\\\"name\\\" [width]=\\\"175\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n           [filter]=\\\"true\\\"></ag-grid-column>\\r\\n           \\r\\n      </ag-grid-column>\\r\\n         <ag-grid-column headerName=\\\"Artist\\\" field=\\\"artist\\\" [width]=\\\"120\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n           [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n       <ag-grid-column headerName=\\\"Details\\\">\\r\\n         <ag-grid-column headerName=\\\"ISRC\\\" field=\\\"ISRC\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n         </ag-grid-column>\\r\\n         <ag-grid-column headerName=\\\"ISWC\\\" field=\\\"ISWC\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n         </ag-grid-column>\\r\\n   \\r\\n         <ag-grid-column headerName=\\\"Owner\\\" field=\\\"owner\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n           [filter]=\\\"true\\\"></ag-grid-column>\\r\\n         <ag-grid-column headerName=\\\"Collective\\\" field=\\\"collective\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n           [filter]=\\\"true\\\"></ag-grid-column>\\r\\n         <ag-grid-column headerName=\\\"Claim Status\\\" field=\\\"status\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"false\\\"\\r\\n           [resizable]=\\\"false\\\" [filter]=\\\"false\\\"></ag-grid-column>\\r\\n   \\r\\n       </ag-grid-column>\\r\\n     </ag-grid-angular>\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n    </mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYWltcy9pbmRleC9jbGFpbXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatButton } from '@angular/material';\r\nimport { tap, switchMap, delay } from 'rxjs/operators';\r\n// import { delay } from 'q';\r\nimport { ClaimsEditComponent } from '../claims-edit/claims-edit.component';\r\nimport { ClaimsService } from 'src/app/_shared/services/claims.service';\r\nimport { Subject } from 'rxjs';\r\nimport { ClaimsEditSendComponent } from '../claims-edit-send/claims-edit-send.component';\r\nimport { timingSafeEqual } from 'crypto';\r\n\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './claims.component.html',\r\n  styleUrls: ['./claims.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  gridOptions: GridOptions;\r\n  claimsToSend: Array<any>;\r\n  listAll$;\r\n  listAllInBox: Array<any>;\r\n  showSpinner: boolean;\r\n  allItems: any[];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n\r\n  @ViewChild('inBoxGrid') inBoxGrid;\r\n  showSpinner2: boolean;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private claimsService: ClaimsService,\r\n\r\n  ) {\r\n    this.listAll();\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n\r\n  onSelectionChanged(ev) {\r\n    this.gridApi = ev.api;\r\n\r\n    const selectedRows = this.gridApi.getSelectedRows();\r\n    let selectedRowsString = '';\r\n    let theRow;\r\n    selectedRows.forEach(function(selectedRow, index) {\r\n      if (index > 5) {\r\n        return;\r\n      }\r\n      if (index !== 0) {\r\n        selectedRowsString += ', ';\r\n      \r\n      }\r\n      selectedRowsString += selectedRow.name;\r\n      theRow = selectedRow; \r\n    });\r\n    this.claimsToSend = [];\r\n    selectedRows.forEach(i => { \r\n     \r\n      this.claimsToSend.push(\r\n      {\r\n       'name': i.name,\r\n       'artist': i.artist,\r\n       'collective': i.collective,\r\n       'owner': i.owner\r\n      });\r\n   });\r\n\r\n\r\n    if (selectedRows.length >= 6) {\r\n      selectedRowsString += ' - and ' + (selectedRows.length - 6) + ' others';\r\n    }\r\n    document.querySelector('#selectedRows').innerHTML = selectedRowsString;\r\n  \r\n  }\r\n\r\n  openDialog(ev: any): void {\r\n    let dialogRef = this.dialog.open(ClaimsEditComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  openEditSend(ev: any): void {\r\n    let dialogRef = this.dialog.open(ClaimsEditSendComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().pipe(\r\n        tap(() => this.showSpinner = true),\r\n        delay(1000) // fake loading\r\n      )\r\n    .subscribe(result => {\r\n      this.showSpinner = false;\r\n      console.log(result);\r\n      this.listAllInBox = result;\r\n      this.deleteSelectedRows();\r\n      this.showSpinner2 = true;\r\n      setTimeout(() => {\r\n        this.updateInBoxItems();\r\n      }, 2500);\r\n\r\n    \r\n\r\n    });\r\n  }\r\n\r\n\r\n  updateInBoxItems() {\r\n\r\n    const itemsToUpdate = [];\r\n    this.inBoxGrid.api.forEachNodeAfterFilterAndSort(function(rowNode, index) {\r\n      const data = rowNode.data;\r\n      data.status = 'Sent!...';\r\n      itemsToUpdate.push(data);\r\n    \r\n    });\r\n    this.showSpinner2 = false;\r\n    const res = this.inBoxGrid.api.updateRowData({ update: itemsToUpdate });\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  editBtnCellRenderer(params) {\r\n    const btn = '<button class=\"mat-button mat-raised-button\"><span class=\"mat-button-wrapper\">Edit</span><div class=\"mat-button-ripple mat-ripple\"></div><div class=\"mat-button-focus-overlay\"></div></button>';\r\n    return btn;\r\n  }\r\n\r\n  listAll() {\r\n    this.listAll$ = JSON.parse(localStorage.getItem('myClaims'));\r\n\r\n\r\n\r\n    // this.listAll$ = new Subject<string>().pipe(\r\n    //   switchMap(type => this.claimsService.getUnsentClaims())\r\n    // );\r\n\r\n\r\n\r\n    // this.claimsService.getUnsentClaims().pipe(\r\n    //   tap(() => this.showSpinner = true),\r\n    //   delay(500) // fake loading\r\n    // )\r\n    //   .subscribe(res => {\r\n    //     this.allItems = res;\r\n    //     this.showSpinner = false;\r\n    //   });\r\n\r\n  }\r\n  sendToClaim(ev: any) {\r\n\r\n  }\r\n\r\n  onCellClicked(ev: any) {\r\n    if (ev.colDef.headerName === 'Actions') {\r\n      this.openDialog(ev.data);\r\n    }\r\n  }\r\n\r\n  editSendClaims(ev: any) {\r\n    const selectedData = this.gridApi.getSelectedRows();\r\n    this.openEditSend(selectedData);\r\n\r\n\r\n      this.updateClaimsStatus(selectedData)\r\n\r\n\r\n  }\r\n\r\n  deleteSelectedRows() {\r\n    const selectedData = this.gridApi.getSelectedRows();\r\n    const res = this.gridApi.updateRowData({ remove: selectedData });\r\n  }\r\n\r\n\r\n  updateClaimsStatus(itemsToUpdate) {\r\n  //  const itemsToUpdate = [];\r\n  itemsToUpdate.forEach(function(rowNode, index) {\r\n    \r\n      const datax = rowNode;\r\n      datax.status = 'Sending...';\r\n   //  itemsToUpdate.push(datax);\r\n    });\r\n    const res = this.gridApi.updateRowData({ update: itemsToUpdate });\r\n   // this.openEditSend(res);\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":""}