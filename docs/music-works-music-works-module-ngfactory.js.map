{"version":3,"sources":["./src/app/assets/music-works/_shared/forms/formModel.ts","./src/app/assets/music-works/_shared/forms/registerWork.ts","./src/app/assets/music-works/add-new/form.layout.ts","./src/app/assets/music-works/add-new/register.component.html","./src/app/assets/music-works/add-new/register.component.ts","./src/app/assets/music-works/detail/detail.component.html","./src/app/assets/music-works/detail/detail.component.ts","./src/app/assets/music-works/edit/edit.component.html","./src/app/assets/music-works/edit/edit.component.ts","./src/app/assets/music-works/edit/form.layout.ts","./src/app/assets/music-works/index.ts","./src/app/assets/music-works/music-works-routing.module.ts","./src/app/assets/music-works/music-works.module.ts","./src/app/assets/music-works/works.component.html","./src/app/assets/music-works/works.component.ts"],"names":[],"mappings":"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","file":"music-works-music-works-module-ngfactory.js","sourcesContent":["\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const WORKS_FORM_MODEL = [\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Name',\r\n        maxLength: 25,\r\n        placeholder: 'Title of Recording',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Type',\r\n        maxLength: 50,\r\n        placeholder: 'Type',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n \r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'ISWC',\r\n        placeholder: 'ISWC',\r\n        hint: 'Add your ISWC code',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Composer',\r\n        placeholder: 'Composer',\r\n    \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'lyricist',\r\n        placeholder: 'lyricist',\r\n      \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Arranger',\r\n        placeholder: 'Arranger',\r\n      \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n//    new DynamicFormGroupModel({\r\n//\r\n//         id: 'signoff',\r\n//         group: [\r\n//\r\n//     new DynamicSwitchModel({\r\n//\r\n//         id: 'reminder',\r\n//         offLabel: 'Send me a reminder',\r\n//         onLabel: 'Send me a reminder',\r\n//         value: false\r\n//\r\n//     }),\r\n//\r\n//     new DynamicSwitchModel({\r\n//\r\n//         id: 'updates',\r\n//         offLabel: 'Subscribe to Updates',\r\n//         onLabel: 'Subscribe to Updates',\r\n//         value: false\r\n//     }),\r\n//\r\n//     new DynamicCheckboxModel({\r\n//         id: 'confirm',\r\n//         label: 'I confirm the information given above',\r\n//         value: false,\r\n//         validators: {\r\n//             requiredTrue: null\r\n//         },\r\n//         errorMessages: {\r\n//             required: 'You must confirm your data is correct'\r\n//         }\r\n//     })\r\n// ]\r\n// })\r\n];\r\n","\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel,\r\n    DynamicCheckboxGroupModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const WORKS_REGISTER_FORM_MODEL = [\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'title',\r\n        maxLength: 25,\r\n        placeholder: 'Title of work',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'altTitle',\r\n        maxLength: 25,\r\n    \r\n        placeholder: 'Any alternative titles',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Duration',\r\n        maxLength: 50,\r\n        placeholder: 'Duration',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicTextAreaModel ({\r\n\r\n        id: 'instrumentation',\r\n        placeholder: 'instrumentation',\r\n        hint: 'if a classical or dramatic work',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicTextAreaModel ({\r\n        id: 'CAE',\r\n        placeholder: 'CAE/IPI number of any other writers',\r\n        hint: 'CAE/IPI number of any other writers',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n\r\n    new DynamicCheckboxGroupModel(\r\n        {\r\nid: 'cmo',\r\nlabel: 'Please choose all that apply ',\r\ngroup: [\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'prs',\r\n            label: 'PRS',\r\n            value: true\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'mcps',\r\n            label: 'MCPS',\r\n            value: false\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'ppl',\r\n            label: 'PPL',\r\n            value: false\r\n        }\r\n    )\r\n]\r\n\r\n\r\n        }\r\n    ),\r\n\r\n \r\n\r\n\r\n\r\n \r\n//    new DynamicFormGroupModel({\r\n//\r\n//         id: 'signoff',\r\n//         group: [\r\n//\r\n//     new DynamicSwitchModel({\r\n//\r\n//         id: 'reminder',\r\n//         offLabel: 'Send me a reminder',\r\n//         onLabel: 'Send me a reminder',\r\n//         value: false\r\n//\r\n//     }),\r\n//\r\n//     new DynamicSwitchModel({\r\n//\r\n//         id: 'updates',\r\n//         offLabel: 'Subscribe to Updates',\r\n//         onLabel: 'Subscribe to Updates',\r\n//         value: false\r\n//     }),\r\n//\r\n//     new DynamicCheckboxModel({\r\n//         id: 'confirm',\r\n//         label: 'I confirm the information given above',\r\n//         value: false,\r\n//         validators: {\r\n//             requiredTrue: null\r\n//         },\r\n//         errorMessages: {\r\n//             required: 'You must confirm your data is correct'\r\n//         }\r\n//     })\r\n// ]\r\n// })\r\n];\r\n","export const WORKS_FORM_LAYOUT = {\r\n\r\n    'addressStreet': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};\r\n","<div>\r\n\r\n\r\n\r\n\r\n\r\n<p>\r\n    As a writer or composer, you can register your own works and amend the details at any time. \r\n    However, if you have a publisher, they will usually manage any registration and amendments on your behalf.\r\n</p>\r\n\r\n  \r\n\r\n  <mat-card>\r\n\r\n      <form [formGroup]=\"formGroup\">\r\n    \r\n          <dynamic-material-form [group]=\"formGroup\"\r\n                                 [layout]=\"formLayout\"\r\n                                 [model]=\"formModel\"\r\n                                 (blur)=\"onBlur($event)\"\r\n                                 (change)=\"onChange($event)\"\r\n                                 (focus)=\"onFocus($event)\"\r\n                                 (matEvent)=\"onMatEvent($event)\" \r\n                                 fxLayout=\"row wrap\" fxLayoutAlign=\"start start\" fxLayoutGap=\"40px\"\r\n                                 ></dynamic-material-form>\r\n\r\n      </form>  \r\n  </mat-card>\r\n\r\n\r\n  <div mat-dialog-actions class=\"align-right\">\r\n      <button mat-button  mat-dialog-close=\"cancel\">Cancel</button>\r\n      <button mat-button [mat-dialog-close]=\"data.Name\" cdkFocusInitial [disabled]=\"formGroup.invalid\">Save</button>\r\n    </div>\r\n\r\n<p>You’ll be given a reference when you submit your work details, followed by a unique tune code for each work.</p>\r\n\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormLayout, DynamicFormService } from '@ng-dynamic-forms/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { WORKS_REGISTER_FORM_MODEL } from '../_shared/forms/registerWork';\r\nimport { WORKS_FORM_LAYOUT } from './form.layout';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  formModel: DynamicFormModel = WORKS_REGISTER_FORM_MODEL;\r\n  formGroup: FormGroup;\r\n  formLayout: DynamicFormLayout = WORKS_FORM_LAYOUT;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n      this.formGroup = this.formService.createFormGroup(this.formModel);\r\n      this.formGroup.patchValue(this.data); \r\n    }\r\n\r\n    \r\n  \r\n  onBlur($event) {\r\n      console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onChange($event) {\r\n      console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onFocus($event) {\r\n      console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onMatEvent($event) {\r\n      console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n  }\r\n  }\r\n","<p>\r\n  detail works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.scss']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div>\r\n\r\n  <mat-card>\r\n\r\n      <form [formGroup]=\"formGroup\">\r\n    \r\n          <dynamic-material-form [group]=\"formGroup\"\r\n                                 [layout]=\"formLayout\"\r\n                                 [model]=\"formModel\"\r\n                                 (blur)=\"onBlur($event)\"\r\n                                 (change)=\"onChange($event)\"\r\n                                 (focus)=\"onFocus($event)\"\r\n                                 (matEvent)=\"onMatEvent($event)\" \r\n                                 fxLayout=\"row wrap\" fxLayoutAlign=\"start start\" fxLayoutGap=\"40px\"\r\n                                 ></dynamic-material-form>\r\n\r\n      </form>  \r\n  </mat-card>\r\n\r\n\r\n  <div mat-dialog-actions class=\"align-right\">\r\n      <button mat-button  mat-dialog-close=\"cancel\">Cancel</button>\r\n      <button mat-button [mat-dialog-close]=\"data.Name\" cdkFocusInitial [disabled]=\"formGroup.invalid\">Save</button>\r\n    </div>\r\n\r\n\r\n<!--  <pre>{{formGroup.value | json}}</pre>-->\r\n\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormLayout, DynamicFormService } from '@ng-dynamic-forms/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { WORKS_FORM_MODEL } from '../_shared/forms/formModel';\r\nimport { WORKS_FORM_LAYOUT } from './form.layout';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  formModel: DynamicFormModel = WORKS_FORM_MODEL;\r\n  formGroup: FormGroup;\r\n  formLayout: DynamicFormLayout = WORKS_FORM_LAYOUT;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n      this.formGroup = this.formService.createFormGroup(this.formModel);\r\n      this.formGroup.patchValue(this.data); \r\n    }\r\n  \r\n  onBlur($event) {\r\n      console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onChange($event) {\r\n      console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onFocus($event) {\r\n      console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onMatEvent($event) {\r\n      console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n  }\r\n  }\r\n","export const WORKS_FORM_LAYOUT = {\r\n\r\n    'addressStreet': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};\r\n","\r\nexport * from './works.component';\r\nexport * from './detail/detail.component';\r\nexport * from './edit/edit.component';\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport * as Pages from './index';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: Pages.WorksComponent, \r\n  data: {\r\n    breadcrumb: ''\r\n  } },\r\n  { path: 'edit/:id', component: Pages.EditComponent },\r\n  { path: 'detail/:id', component: Pages.DetailComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MusicWorksRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MusicWorksRoutingModule } from './music-works-routing.module';\r\nimport { WorksComponent } from './works.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { AppMaterialModule } from 'src/app/app-material/app-material.module';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RegisterComponent } from './add-new/register.component';\r\nimport { SharedModule } from 'src/app/_shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WorksComponent, \r\n    EditComponent, \r\n    DetailComponent\r\n  , RegisterComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    MusicWorksRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DynamicFormsMaterialUIModule,\r\n    AppMaterialModule,\r\n    AgGridModule.withComponents(\r\n      []\r\n  ),\r\n  FlexLayoutModule\r\n  ],\r\n  entryComponents: [   \r\n    RegisterComponent\r\n   ]\r\n})\r\nexport class MusicWorksModule { }\r\n","\r\n\r\n<mat-toolbar>\r\n    <span>\r\n<button mat-button mat-raised-button (click)=\"openAddNewDialog()\">\r\n{{ 'works.registerNew'  | translate}}\r\n</button>  <span class=\"ml-3\" appHelp=\"help.1\"></span>\r\n</span>\r\n</mat-toolbar>  \r\n\r\n\r\n<h3>Your Works</h3>\r\n\r\n<div class=\"table-responsive-lg\">\r\n\r\n  <ag-grid-angular #agGrid style=\"width: 100%; height: 700px;\" class=\"ag-theme-material\" \r\n  [gridOptions]=\"gridOptions\"\r\n  [rowData]=\"allItems\"\r\n    (cellClicked)=\"onCellClicked($event)\">\r\n\r\n    <ag-grid-column headerName=\"Work\">\r\n\r\n      <ag-grid-column headerName=\"Actions\" [width]=\"100\" [pinned]=\"true\" [cellRenderer]=\"editBtnCellRenderer\">\r\n      </ag-grid-column>\r\n\r\n      <ag-grid-column headerName=\"Name\" field=\"Name\" [width]=\"165\" [pinned]=\"true\" [sortable]=\"true\" [resizable]=\"true\"\r\n        [filter]=\"true\"></ag-grid-column>\r\n\r\n     \r\n    </ag-grid-column>\r\n\r\n    <ag-grid-column headerName=\"Details\">\r\n      <ag-grid-column headerName=\"Type\" field=\"Type\" [width]=\"150\" [sortable]=\"true\" [resizable]=\"true\" [filter]=\"true\">\r\n      </ag-grid-column>\r\n\r\n      <ag-grid-column headerName=\"ISWC\" field=\"ISWC\" [width]=\"100\" [sortable]=\"true\" [resizable]=\"true\" [filter]=\"true\">\r\n      </ag-grid-column>\r\n\r\n      <ag-grid-column headerName=\"Composer\" field=\"Composer\" [width]=\"100\" [sortable]=\"true\" [resizable]=\"true\" [filter]=\"true\">\r\n      </ag-grid-column>\r\n\r\n      <ag-grid-column headerName=\"Lyricist\" field=\"lyricist\" [width]=\"150\"\r\n        [sortable]=\"true\" [resizable]=\"true\" [filter]=\"true\"></ag-grid-column>\r\n\r\n      <ag-grid-column headerName=\"Arranger\" field=\"Arranger\" [width]=\"200\" [sortable]=\"true\" [resizable]=\"true\"\r\n        [filter]=\"true\"></ag-grid-column>\r\n\r\n\r\n\r\n    </ag-grid-column>\r\n  </ag-grid-angular>\r\n</div>\r\n\r\n<p>you can amend the registration details of any works where you are a rightsholder. </p>","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap, tap, delay } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IMusicRelease } from 'src/app/_models/classes/musicRelease';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { PageTitleService } from 'src/app/services/page-title.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport {EditComponent} from './edit/edit.component';\r\n\r\nimport { TestDataService } from 'src/app/services/test-data.service';\r\nimport { RegisterComponent } from './add-new/register.component';\r\nimport { RouteData } from 'src/app/_models/classes/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './works.component.html',\r\n  styles: [`\r\n  dynamic-material-form[fxLayoutAlign] { padding:10px; padding-left: 25px;}\r\n  `],\r\n})\r\nexport class WorksComponent implements OnInit {\r\n  public gridOptions: GridOptions;\r\n  entityTypes$;\r\n  selectedType;\r\n  entityList$;\r\n  selectedEntity$;\r\n  listAll$;\r\n  showSpinner: boolean;\r\n  allItems: IMusicRelease[];\r\n  routeData: RouteData;\r\n\r\n  constructor(\r\n    private readonly testData: TestDataService,\r\n    private readonly pageTitle: PageTitleService,\r\n    public dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.routeData = this.route.snapshot.data;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.pageTitle.setTitle(this.routeData.pageTitle);\r\n    this.entityTypes$ = this.testData.listEntityTypes();\r\n\r\n    this.entityList$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listEntities(type))\r\n    );\r\n    this.selectedEntity$ = new Subject<number>().pipe(\r\n      switchMap(id => this.testData.getEntity(this.selectedType, id))\r\n    );\r\n    this.listAll$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listAll(type))\r\n    );\r\n\r\n    this.listAll();\r\n  }\r\n\r\n  countryCellRenderer(params) {\r\n    const flag = \"<img border='0' width='15' height='10' style='margin-bottom: 2px' src='https://www.ag-grid.com/images/flags/gb.png'>\";\r\n    return flag + \" \" + params.value;\r\n  }\r\n\r\n  editBtnCellRenderer(params) {\r\n    const btn = '<button class=\"mat-button mat-raised-button\"><span class=\"mat-button-wrapper\">Edit</span><div class=\"mat-button-ripple mat-ripple\"></div><div class=\"mat-button-focus-overlay\"></div></button>';\r\n    return btn;\r\n  }\r\n\r\n  changeEntityType(type) {\r\n    this.selectedType = type;\r\n    this.entityList$.next(type);\r\n  }\r\n\r\n  changeEntity(id) {\r\n    this.selectedEntity$.next(id);\r\n  }\r\n  onCellClicked(ev: any) {\r\n    if (ev.colDef.headerName === 'Actions') {\r\n      this.openDialog(ev.data);\r\n    }\r\n  }\r\n\r\n  openDialog(ev: any): void {\r\n    let dialogRef = this.dialog.open(EditComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  openAddNewDialog(ev?: any): void {\r\n    let dialogRef = this.dialog.open(RegisterComponent, {\r\n      data: 'ev',\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n\r\n  listAll() {\r\n\r\n    this.testData.listAll('music-work').pipe(\r\n      tap(() => this.showSpinner = true),\r\n      // delay(500)\r\n    )\r\n      .subscribe(res => {\r\n        this.allItems = res;\r\n        this.showSpinner = false;\r\n      });\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}