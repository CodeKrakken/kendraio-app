{"version":3,"sources":["webpack:///./src/app/music-recordings/_shared/forms/formModel.ts","webpack:///./src/app/music-recordings/_shared/forms/registerRecordings.ts","webpack:///./src/app/music-recordings/index.ts","webpack:///./src/app/music-recordings/music-recordings-detail/music-recordings-detail.component.html","webpack:///./src/app/music-recordings/music-recordings-detail/music-recordings-detail.component.scss","webpack:///./src/app/music-recordings/music-recordings-detail/music-recordings-detail.component.ts","webpack:///./src/app/music-recordings/music-recordings-edit/form.layout.ts","webpack:///./src/app/music-recordings/music-recordings-edit/music-recordings-edit.component.html","webpack:///./src/app/music-recordings/music-recordings-edit/music-recordings-edit.component.scss","webpack:///./src/app/music-recordings/music-recordings-edit/music-recordings-edit.component.ts","webpack:///./src/app/music-recordings/music-recordings-routing.module.ts","webpack:///./src/app/music-recordings/music-recordings.module.ts","webpack:///./src/app/music-recordings/music-recordings/music-recordings-index.component.html","webpack:///./src/app/music-recordings/music-recordings/music-recordings-index.component.ts","webpack:///./src/app/music-recordings/register-new-recording/form.layout.ts","webpack:///./src/app/music-recordings/register-new-recording/register-recording.component.html","webpack:///./src/app/music-recordings/register-new-recording/register-recording.component.scss","webpack:///./src/app/music-recordings/register-new-recording/register-recording.component.ts"],"names":[],"mappings":"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","file":"music-recordings-music-recordings-module.js","sourcesContent":["\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport const STATES_AUTOCOMPLETE_LIST = [\r\n    'Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\r\n    'District of Columbia', 'Federated States of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho',\r\n    'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland',\r\n    'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada',\r\n    'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',\r\n    'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island',\r\n    'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia',\r\n    'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\r\n];\r\n\r\nexport const MY_FORM_MODEL = [\r\n\r\n    // new DynamicFormGroupModel({\r\n\r\n    //     id: 'stay',\r\n    //     group: [\r\n    //         new DynamicDatePickerModel({\r\n\r\n    //             id: 'arrivalDate',\r\n    //             inline: false,\r\n    //             placeholder: 'Date of Arrival'\r\n    //         }),\r\n\r\n    //         new DynamicDatePickerModel({\r\n    //             id: 'departureDate',\r\n    //             inline: false,\r\n    //             placeholder: 'Date of Departure'\r\n    //         })\r\n    //     ],\r\n    //     // validators: {\r\n    //     //     customDateRangeValidator: null\r\n    //     // },\r\n    //     // errorMessages: {\r\n    //     //     customDateRangeValidator: 'Invalid period of time selected'\r\n    //     // }\r\n    // }),\r\n\r\n    // new DynamicFormGroupModel({\r\n\r\n    //     id: 'room',\r\n    //     group: [\r\n    //         new DynamicSelectModel<string>({\r\n\r\n    //             id: 'roomSize',\r\n    //             placeholder: 'Room Size',\r\n    //             hint: 'Choose a room type',\r\n    //             options: [\r\n    //                 {\r\n    //                     label: 'Single Room',\r\n    //                     value: 'single-room'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Double Room',\r\n    //                     value: 'double-room'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Business Suite',\r\n    //                     value: 'business-suite'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Presidential Suite',\r\n    //                     value: 'presidential-suite'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Storeroom',\r\n    //                     value: 'storeroom'\r\n    //                 }\r\n    //             ]\r\n    //         }),\r\n\r\n    //         new DynamicInputModel({\r\n\r\n    //             id: 'roomQuantity',\r\n    //             inputType: 'number',\r\n    //             placeholder: 'Room Quantity',\r\n    //             hint: 'Maximum: 5',\r\n    //             max: 5,\r\n    //             min: 0\r\n    //         })\r\n    //     ]\r\n    // }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Name',\r\n        maxLength: 25,\r\n        placeholder: 'Title of Recording',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Artist',\r\n        maxLength: 50,\r\n        placeholder: 'Name of Artist',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'ISRC',\r\n        placeholder: 'ISRC',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is Required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'ISWC',\r\n        placeholder: 'ISWC',\r\n        hint: 'Add your ISWC code',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Country',\r\n        placeholder: 'Country',\r\n    \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Owner',\r\n        placeholder: 'Owner',\r\n      \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Collective',\r\n        placeholder: 'Collective',\r\n      \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n    new DynamicInputModel({\r\n\r\n        id: 'Submitted to',\r\n        placeholder: 'Submitted to...',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n   new DynamicFormGroupModel({\r\n\r\n        id: 'signoff',\r\n        group: [\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'reminder',\r\n        offLabel: 'Send me a reminder',\r\n        onLabel: 'Send me a reminder',\r\n        value: false\r\n\r\n    }),\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'updates',\r\n        offLabel: 'Subscribe to Updates',\r\n        onLabel: 'Subscribe to Updates',\r\n        value: false\r\n    }),\r\n\r\n    new DynamicCheckboxModel({\r\n        id: 'confirm',\r\n        label: 'I confirm the information given above',\r\n        value: false,\r\n        validators: {\r\n            requiredTrue: null\r\n        },\r\n        errorMessages: {\r\n            required: 'You must confirm your data is correct'\r\n        }\r\n    })\r\n]\r\n})\r\n];\r\n","\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel,\r\n    DynamicCheckboxGroupModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const RECORDING_REGISTER_FORM_MODEL = [\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'title',\r\n        maxLength: 25,\r\n        placeholder: 'Title of work',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'altTitle',\r\n        maxLength: 25,\r\n    \r\n        placeholder: 'Any alternative titles',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Duration',\r\n        maxLength: 50,\r\n        placeholder: 'Duration',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicTextAreaModel ({\r\n\r\n        id: 'instrumentation',\r\n        placeholder: 'instrumentation',\r\n        hint: 'if a classical or dramatic work',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicTextAreaModel ({\r\n        id: 'CAE',\r\n        placeholder: 'CAE/IPI number of any other writers',\r\n        hint: 'CAE/IPI number of any other writers',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n\r\n    new DynamicCheckboxGroupModel(\r\n        {\r\nid: 'cmo',\r\nlabel: 'Please choose all that apply ',\r\ngroup: [\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'prs',\r\n            label: 'PRS',\r\n            value: true\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'mcps',\r\n            label: 'MCPS',\r\n            value: false\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'ppl',\r\n            label: 'PPL',\r\n            value: false\r\n        }\r\n    )\r\n]\r\n\r\n\r\n        }\r\n    ),\r\n\r\n \r\n\r\n\r\n\r\n \r\n   new DynamicFormGroupModel({\r\n\r\n        id: 'signoff',\r\n        group: [\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'reminder',\r\n        offLabel: 'Send me a reminder',\r\n        onLabel: 'Send me a reminder',\r\n        value: false\r\n\r\n    }),\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'updates',\r\n        offLabel: 'Subscribe to Updates',\r\n        onLabel: 'Subscribe to Updates',\r\n        value: false\r\n    }),\r\n\r\n    new DynamicCheckboxModel({\r\n        id: 'confirm',\r\n        label: 'I confirm the information given above',\r\n        value: false,\r\n        validators: {\r\n            requiredTrue: null\r\n        },\r\n        errorMessages: {\r\n            required: 'You must confirm your data is correct'\r\n        }\r\n    })\r\n]\r\n})\r\n];\r\n","\r\nexport * from './music-recordings/music-recordings-index.component';\r\nexport * from './music-recordings-detail/music-recordings-detail.component';\r\nexport * from './music-recordings-edit/music-recordings-edit.component';\r\n\r\n","module.exports = \"<p>\\r\\n  music-recordings-detail works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXJlY29yZGluZ3MvbXVzaWMtcmVjb3JkaW5ncy1kZXRhaWwvbXVzaWMtcmVjb3JkaW5ncy1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-music-recordings-detail',\r\n  templateUrl: './music-recordings-detail.component.html',\r\n  styleUrls: ['./music-recordings-detail.component.scss']\r\n})\r\nexport class MusicRecordingsDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export const FORM_LAYOUT = {\r\n\r\n    'addressStreet': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};","module.exports = \"<div>\\r\\n\\r\\n  <mat-card>\\r\\n\\r\\n    <form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n      <dynamic-material-form [group]=\\\"formGroup\\\" [layout]=\\\"formLayout\\\" [model]=\\\"formModel\\\" (blur)=\\\"onBlur($event)\\\"\\r\\n        (change)=\\\"onChange($event)\\\" (focus)=\\\"onFocus($event)\\\" (matEvent)=\\\"onMatEvent($event)\\\" fxLayout=\\\"row wrap\\\"\\r\\n        fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"40px\\\"></dynamic-material-form>\\r\\n\\r\\n    </form>\\r\\n  </mat-card>\\r\\n\\r\\n  <div mat-dialog-actions class=\\\"align-right\\\">\\r\\n    <button mat-button mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"data.Name\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Save</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <!-- <pre>{{formGroup.value | json}}</pre> -->\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXJlY29yZGluZ3MvbXVzaWMtcmVjb3JkaW5ncy1lZGl0L211c2ljLXJlY29yZGluZ3MtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormService, DynamicFormLayout } from '@ng-dynamic-forms/core';\r\n\r\nimport { FormsModule, FormGroup, FormArray, FormBuilder, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { MY_FORM_MODEL } from '../_shared/forms/formModel';\r\nimport { LabelOptions, MAT_LABEL_GLOBAL_OPTIONS, MatDatepicker, MatInput, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FORM_LAYOUT } from './form.layout';\r\n\r\n@Component({\r\n  selector: 'app-music-recordings-edit',\r\n  templateUrl: './music-recordings-edit.component.html',\r\n  styleUrls: ['./music-recordings-edit.component.scss']\r\n})\r\nexport class MusicRecordingsEditComponent implements OnInit {\r\n  formModel: DynamicFormModel = MY_FORM_MODEL;\r\n  formGroup: FormGroup;\r\n  formLayout: DynamicFormLayout = FORM_LAYOUT;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.formService.createFormGroup(this.formModel);\r\n    this.formGroup.patchValue(this.data);\r\n  }\r\n\r\n  onBlur($event) {\r\n    console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n  }\r\n\r\n  onChange($event) {\r\n    console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n  }\r\n\r\n  onFocus($event) {\r\n    console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n  }\r\n\r\n  onMatEvent($event) {\r\n    console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport * as pages from './index';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: pages.IndexComponent },\r\n  { path: 'edit/:id', component: pages.MusicRecordingsEditComponent },\r\n  { path: 'detail/:id', component: pages.MusicRecordingsDetailComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MusicRecordingsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\n\r\nimport { MatGridListModule, MatCardModule , MatButtonModule } from '@angular/material';\r\n\r\nimport { MusicRecordingsRoutingModule } from './music-recordings-routing.module';\r\nimport { IndexComponent, MusicRecordingsEditComponent, MusicRecordingsDetailComponent} from './';\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\n\r\nimport {AgGridModule} from 'ag-grid-angular';\r\n\r\n// import {DialogDataExampleDialog} from './index/music-recordings-index.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n// import { SendClaimsComponent } from '../claims/send-claims/send-claims.component';\r\n\r\nimport {SharedModule} from '../_shared/shared.module';\r\nimport { RegisterRecordingComponent } from './register-new-recording/register-recording.component';\r\n// import { ButtonRendererComponent } from './button-renderer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IndexComponent, \r\n    MusicRecordingsEditComponent, \r\n    MusicRecordingsDetailComponent,\r\n    RegisterRecordingComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    MusicRecordingsRoutingModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n        ReactiveFormsModule,\r\n        DynamicFormsMaterialUIModule,\r\n        AppMaterialModule,\r\n        AgGridModule.withComponents(\r\n          []\r\n      ),\r\n      FlexLayoutModule\r\n  ],\r\n  entryComponents: [   \r\n    RegisterRecordingComponent\r\n   ]\r\n})\r\nexport class MusicRecordingsModule { }\r\n","module.exports = \"\\r\\n<mat-toolbar>\\r\\n    <span>\\r\\n            <button mat-button mat-raised-button (click)=\\\"openAddNewDialog()\\\">Register New Recording</button>\\r\\n        </span>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"table-responsive-lg\\\" *ngIf=\\\"newRecordings?.length\\\"  @enterAnimateUpDwn>\\r\\n\\r\\n    <table class=\\\"table table-striped table-hover table-sm small\\\" [@enterLeaveInOut-2]=\\\"newRecordings\\\">\\r\\n  \\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th>Your Ref</th>\\r\\n          <th>Title</th>\\r\\n          <th>Alt Title</th>\\r\\n          <th>Duration</th>       \\r\\n          <th >Instrumentation</th>\\r\\n          <th >CAE</th>\\r\\n          <th >CMO</th>\\r\\n          <th >Status</th>\\r\\n          <th >Actions</th> \\r\\n        </tr>\\r\\n      </thead>\\r\\n  \\r\\n      <tbody>\\r\\n \\r\\n        <tr *ngFor=\\\"let item of newRecordings\\\">\\r\\n            <td>ISDN-2345/4321</td>\\r\\n            <td>{{item.title}}</td>\\r\\n            <td>{{item.altTitle}}</td>\\r\\n            <td>{{item.Duration}}</td>     \\r\\n            <td>{{item.instrumentation}}</td>\\r\\n            <td>{{item.CAE}}</td>\\r\\n            <td>{{item.cmo | json}} {{item.cmo[1]}} {{item.cmo[2]}}</td>\\r\\n            <td>Submitted.. pending response</td>\\r\\n    \\r\\n            <td>\\r\\n              <button  [routerLink]=\\\"['edit', item.ISRC]\\\">Edit</button>   \\r\\n              <a mat-stroked-button  [routerLink]=\\\"['detail', item.ISRC]\\\">view</a>\\r\\n            </td>\\r\\n          </tr>\\r\\n     \\r\\n  \\r\\n        </tbody>  \\r\\n        </table>  \\r\\n  \\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<p>Music recordings\\r\\n  This will allow the user to manage rights data and other related metadata about recordings. These recordings could be\\r\\n  unreleased or released.</p>\\r\\n\\r\\n<mat-progress-bar *ngIf=\\\"showSpinner\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n\\r\\n<div class=\\\"table-responsive-lg\\\">\\r\\n  <!-- (rowClicked)=\\\"openDialog($event)\\\" -->\\r\\n  <ag-grid-angular @enterAnimateUpDwn #agGrid style=\\\"width: 100%; height: 700px;\\\" class=\\\"ag-theme-material\\\" \\r\\n  [gridOptions]=\\\"gridOptions\\\"\\r\\n    [rowData]=\\\"allItems\\\" \\r\\n    rowSelection=\\\"multiple\\\"\\r\\n    (cellClicked)=\\\"onCellClicked($event)\\\"\\r\\n    (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n    [frameworkComponents]=\\\"gridOptions.frameworkComponents\\\"\\r\\n    animateRows=\\\"true\\\"\\r\\n    >\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Recordings\\\">\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Actions\\\" [width]=\\\"100\\\" [pinned]=\\\"true\\\" [cellRenderer]=\\\"editBtnCellRenderer\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"#\\\" \\r\\n                    [width]=\\\"80\\\" \\r\\n                    [checkboxSelection]=\\\"true\\\"  \\r\\n                    [suppressMenu]=\\\"false\\\" \\r\\n                    [pinned]=\\\"true\\\"\\r\\n       ></ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Name\\\" field=\\\"Name\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [cellEditorFramework]=\\\"gridOptions.frameworkComponents.inputRenderer\\\"\\r\\n        ></ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Artist\\\" field=\\\"Artist\\\" [width]=\\\"120\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n    </ag-grid-column>\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Details\\\">\\r\\n      <ag-grid-column headerName=\\\"ISRC\\\" field=\\\"ISRC\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"ISWC\\\" field=\\\"ISWC\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Date\\\" field=\\\"Date\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Country\\\" field=\\\"Country\\\"  [cellRenderer]=\\\"countryCellRenderer\\\"\\r\\n        [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Owner\\\" field=\\\"Owner\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Collective\\\" field=\\\"Collective\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Submitted to\\\" field=\\\"Submitted to\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Status\\\" field=\\\"Status\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n    </ag-grid-column>\\r\\n  </ag-grid-angular>\\r\\n\\r\\n  <mat-action-list *ngIf=\\\"claimsToSend.length > 0\\\">  \\r\\n    <button mat-raised-button mat-button (click)=\\\"sendToClaim($event)\\\">Claim Selected</button>\\r\\n     </mat-action-list> \\r\\n     <div>Selection: <span id=\\\"selectedRows\\\">...</span></div>\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <mat-card *ngIf=\\\"allItems\\\">\\r\\n\\r\\n0: \\\"Name\\\"\\r\\n1: \\\"Type\\\"\\r\\n2: \\\"ISWC\\\"\\r\\n3: \\\"Type\\\"\\r\\n4: \\\"Composer\\\"\\r\\n5: \\\"lyricist\\\"\\r\\n6: \\\"Arranger\\\"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"table-responsive-lg\\\">\\r\\n\\r\\n    <table class=\\\"table table-striped table-hover table-sm small\\\">\\r\\n  \\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th>Ref</th>\\r\\n          <th>Title</th>\\r\\n          <th>Artist</th>\\r\\n          <th>ISRC</th>       \\r\\n          <th >ISWC</th>\\r\\n          <th >Date</th>\\r\\n          <th >Country</th>\\r\\n          <th >Owner</th>\\r\\n          <th >Collective</th>\\r\\n          <th>Submitted to</th>\\r\\n          <th >Status</th>\\r\\n          <th>Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n  \\r\\n      <tbody>\\r\\n \\r\\n        <tr *ngFor=\\\"let item of allItems\\\">\\r\\n            <td>ISDN-2345/4321</td>\\r\\n            <td>{{item.Name}}</td>\\r\\n            <td>{{item.Artist}}</td>\\r\\n            <td>{{item.ISRC}}</td>     \\r\\n            <td>{{item.ISWC}}</td>\\r\\n            <td>{{item.Date}}</td>\\r\\n            <td>{{item.Country}}</td>\\r\\n            <td>{{item.Owner}}</td>\\r\\n            <td>{{item.Collective}}</td>\\r\\n            <td>{{item['Submitted to']}}</td>\\r\\n            <th>{{item.Status}}</th>\\r\\n            <td>\\r\\n              <button  [routerLink]=\\\"['edit', item.ISRC]\\\">Edit</button>   \\r\\n              <a mat-stroked-button  [routerLink]=\\\"['detail', item.ISRC]\\\">view</a>\\r\\n            </td>\\r\\n          </tr>\\r\\n     \\r\\n  \\r\\n        </tbody>  \\r\\n        </table>  \\r\\n  \\r\\n  </div>\\r\\n\\r\\n\\r\\n</mat-card> -->\\r\\n\\r\\n<!-- Music recordings\\r\\nTitle\\r\\nthe recording title/name.\\r\\nArtist\\r\\nThe name of the band or artist associated with the recording\\r\\nISRC\\r\\n12 alphanumeric characters, formed from the four code elements - see details. Example: UKNF91800001,  “UKNF9” - is the artist/band code, “18” two digit year, “00001” the first recording in that year.\\r\\nISWC\\r\\n\\r\\n\\r\\nDate\\r\\nThe recording date. We may only need the year (P date) or year/month. \\r\\nCountry\\r\\nthe country of recording, maybe this should be labeled location. \\r\\nOwner\\r\\nThe primary rights owner.\\r\\nCollective\\r\\nCollective Management Organisations. For a single right type this can be a single CMO that is that is tasked with collecting on your behalf or multiple CMOs. I think we should allow for a comma separated list with an expandable “...”\\r\\nSubmitted to\\r\\nOther services like musicbrainz the user has enabled adapters for and submitted the recordings to. Will need expandable “...”\\r\\nStatus\\r\\nAs the user can potentially submit a recording to multiple CMOs and possibly other services like musicbrainz we may have multiple statuses. This should act as a guide for identifying a combined state and actions needed. We may need to keep this simple and rely on a detail page to hold the details. So this may say “not submitted” “processing”, “need more input to complete” and “submitted”. \\r\\nAction\\r\\nCommon actions should be: Edit, View details, Submit, Edit submit list.\\r\\nNotes:\\r\\nThis should be used as an overview as we will have data that can not be easily tabulated. This is especially true if the data is submitted using multiple adapters. \\r\\nEditing and viewing the data is simple up to the point the user submits it. Once it is submitted to multiple services the data and state can diverge. If one of the services reports a title to be to long or containing unrecognised characters the data will need to be edited for that specific service and will diverge. I think we will need an expanded view for this.      -->\\r\\n\"","import { Component, OnInit, Inject, HostBinding } from '@angular/core';\r\nimport { switchMap, tap, delay } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IMusicRecording } from 'src/app/_models/classes/musicRecording';\r\n\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatButton } from '@angular/material';\r\n\r\nimport { PageTitleService } from 'src/app/services/page-title.service';\r\nimport { MusicRecordingsEditComponent } from '../music-recordings-edit/music-recordings-edit.component';\r\nimport { TestDataService } from '../../services/test-data.service';\r\nimport { SendClaimsComponent } from 'src/app/claims/send-claims/send-claims.component';\r\nimport { MatInputComponent, MatButtonComponent } from 'src/app/_shared/components';\r\n\r\nimport { Animations } from '../../_shared/animations';\r\nimport { RegisterRecordingComponent } from '../register-new-recording/register-recording.component';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './music-recordings-index.component.html',\r\n  styles: [` \r\n  dynamic-material-form[fxLayoutAlign] { padding:10px; padding-left: 25px;}\r\n  `],\r\n  animations: [Animations.pageAni]\r\n})\r\n\r\nexport class IndexComponent implements OnInit {\r\n  // @HostBinding('@fadeAnimation')\r\n  // fadeAnimation;\r\n  gridOptions: GridOptions;\r\n  entityTypes$;\r\n  selectedType;\r\n  entityList$;\r\n  selectedEntity$;\r\n  listAll$;\r\n  showSpinner: boolean;\r\n  allItems: IMusicRecording[];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  claimsToSend: Array<any>;\r\n  newRecordings: any[] = [];\r\n\r\n\r\n  constructor(\r\n    private readonly testData: TestDataService,\r\n    public dialog: MatDialog,\r\n    private readonly pageTitle: PageTitleService,\r\n    // private animationService: AnimationService,\r\n    // buttonRenderer: ButtonRendererComponent,\r\n\r\n  ) {\r\n    this.gridOptions = <GridOptions>{\r\n      onGridReady: () => {\r\n       //   this.gridOptions.api.sizeColumnsToFit();\r\n      },\r\n      rowHeight: 48,\r\n      frameworkComponents: {\r\n          inputRenderer: MatInputComponent,\r\n          thing: MatButtonComponent\r\n      }\r\n  };\r\n    this.listAll();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.fadeAnimation = this.animationService.animationDirection();\r\n    // this.animationServiceEventsSubscription = this.animationService.emitCurrentDirection.subscribe((direction: any) => {\r\n    //   this.fadeAnimation = direction;\r\n    // });\r\n\r\n\r\n    this.claimsToSend = [];\r\n    this.pageTitle.setTitle('Recordings');\r\n    this.entityTypes$ = this.testData.listEntityTypes();\r\n\r\n    this.entityList$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listEntities(type))\r\n    );\r\n    this.selectedEntity$ = new Subject<number>().pipe(\r\n      switchMap(id => this.testData.getEntity(this.selectedType, id))\r\n    );\r\n    this.listAll$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listAll(type))\r\n    );\r\n\r\n    //  this.listAll();\r\n  }\r\n\r\n  countryCellRenderer(params) {\r\n    const flag = '<img border=\\'0\\' width=\\'15\\' height=\\'10\\' style=\\'margin-bottom: 2px\\' src=\\'https://www.ag-grid.com/images/flags/gb.png\\'>';\r\n    return flag + ' ' + params.value;\r\n  }\r\n\r\n  editBtnCellRenderer(params) {\r\n    const btn = '<button class=\"mat-button mat-raised-button\"><span class=\"mat-button-wrapper\">Edit</span><div class=\"mat-button-ripple mat-ripple\"></div><div class=\"mat-button-focus-overlay\"></div></button>';\r\n    return btn;\r\n  }\r\n\r\n  editBtnCellRendererParams() {\r\n    const clickMe = {\r\n      onClick: this.openDialog.bind(this),\r\n      label: 'Click 1'\r\n    };\r\n    return clickMe;\r\n  }\r\n\r\n\r\n  changeEntityType(type) {\r\n    this.selectedType = type;\r\n    this.entityList$.next(type);\r\n  }\r\n\r\n  changeEntity(id) {\r\n    this.selectedEntity$.next(id);\r\n  }\r\n\r\n  onCellClicked(ev: any) {\r\n    if (ev.colDef.headerName === 'Actions') {\r\n      this.openDialog(ev.data);\r\n    }\r\n  }\r\n\r\n  openDialog(ev: any): void {\r\n    let dialogRef = this.dialog.open(MusicRecordingsEditComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  openAddNewDialog(ev?: any): void {\r\n    let dialogRef = this.dialog.open(RegisterRecordingComponent, {\r\n      data: 'ev',\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    this.addItemToGrid(result);\r\n    });\r\n  }\r\n  addItemToGrid(result: any): any {\r\nthis.newRecordings.push(result)\r\n  }\r\n\r\n  onSelectionChanged(ev) {\r\n    this.gridApi = ev.api;\r\n\r\n    const selectedRows = this.gridApi.getSelectedRows();\r\n    let selectedRowsString = '';\r\n    let theRow;\r\n    selectedRows.forEach(function(selectedRow, index) {\r\n      if (index > 5) {\r\n        return;\r\n      }\r\n      if (index !== 0) {\r\n        selectedRowsString += ', ';\r\n      \r\n      }\r\n      selectedRowsString += selectedRow.Name;\r\n      theRow = selectedRow; \r\n    });\r\n    this.claimsToSend = [];\r\n    selectedRows.forEach(i=>{ \r\n     \r\n      this.claimsToSend.push(\r\n      {\r\n       'name': i.Name,\r\n       'artist': i.Artist,\r\n       'collective': i.Collective,\r\n       'owner': i.Owner,\r\n       'status': 'Not Sent'\r\n      });\r\n   });\r\n\r\n\r\n    if (selectedRows.length >= 6) {\r\n      selectedRowsString += ' - and ' + (selectedRows.length - 6) + ' others';\r\n    }\r\n    document.querySelector('#selectedRows').innerHTML = selectedRowsString;\r\n  \r\n  }\r\n\r\nsendToClaim(ev: any): void {\r\n  const data = {section: 'recordings', data: this.claimsToSend };\r\n  const dialogRef = this.dialog.open(SendClaimsComponent, {\r\n    data: data,\r\n    width: '80%',\r\n    panelClass: 'formFieldWidth380'\r\n  });\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    console.log('The dialog was closed');\r\n  });\r\n}\r\n\r\n\r\n\r\n  listAll() {\r\n    this.testData.listAll('music-recording').pipe(\r\n      tap(() => this.showSpinner = true),\r\n      // delay(500) // fake loading\r\n    )\r\n      .subscribe(res => {\r\n        this.allItems = res;\r\n        this.showSpinner = false;\r\n      });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n// @Component({\r\n//   selector: 'app-test-import-dialog',\r\n//   template: `\r\n//   <pre> {{ data | json }}</pre> \r\n//   <div mat-dialog-actions class=\"align-right\">\r\n//     <button mat-button mat-dialog-close=\"Edit Cancelled\">Cancel</button>\r\n//     <button mat-button [mat-dialog-close]=\"data.Name\">Send All</button>\r\n//   </div>\r\n//   `\r\n// })\r\n// export class TestSendClaimsComponent implements OnInit {\r\n//   constructor(\r\n//     @Inject(MAT_DIALOG_DATA) public data: any,\r\n//    // private formService: DynamicFormService\r\n//   ) { }\r\n\r\n//   ngOnInit() {\r\n\r\n//   }\r\n\r\n// }\r\n","export const WORKS_FORM_LAYOUT = {\r\n\r\n    'addressStreet': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};\r\n","module.exports = \"<div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<p>\\r\\n    As a writer or composer, you can register your own works and amend the details at any time. \\r\\n    However, if you have a publisher, they will usually manage any registration and amendments on your behalf.\\r\\n</p>\\r\\n\\r\\n  \\r\\n\\r\\n  <mat-card>\\r\\n\\r\\n      <form [formGroup]=\\\"formGroup\\\">\\r\\n    \\r\\n          <dynamic-material-form [group]=\\\"formGroup\\\"\\r\\n                                 [layout]=\\\"formLayout\\\"\\r\\n                                 [model]=\\\"formModel\\\"\\r\\n                                 (blur)=\\\"onBlur($event)\\\"\\r\\n                                 (change)=\\\"onChange($event)\\\"\\r\\n                                 (focus)=\\\"onFocus($event)\\\"\\r\\n                                 (matEvent)=\\\"onMatEvent($event)\\\" \\r\\n                                 fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"40px\\\"\\r\\n                                 ></dynamic-material-form>\\r\\n\\r\\n      </form>  \\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n  <div mat-dialog-actions class=\\\"align-right\\\">\\r\\n      <button mat-button  mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\r\\n      <button mat-button [mat-dialog-close]=\\\"formGroup.value\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Submit</button>\\r\\n    </div>\\r\\n\\r\\n<p>You’ll be given a reference when you submit your work details, followed by a unique tune code for each work.</p>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXJlY29yZGluZ3MvcmVnaXN0ZXItbmV3LXJlY29yZGluZy9yZWdpc3Rlci1yZWNvcmRpbmcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormLayout, DynamicFormService } from '@ng-dynamic-forms/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { RECORDING_REGISTER_FORM_MODEL } from '../_shared/forms/registerRecordings';\r\nimport { WORKS_FORM_LAYOUT } from './form.layout';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register-recording.component.html',\r\n  styleUrls: ['./register-recording.component.scss']\r\n})\r\nexport class RegisterRecordingComponent implements OnInit {\r\n  formModel: DynamicFormModel = RECORDING_REGISTER_FORM_MODEL;\r\n  formGroup: FormGroup;\r\n  formLayout: DynamicFormLayout = WORKS_FORM_LAYOUT;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n      this.formGroup = this.formService.createFormGroup(this.formModel);\r\n      this.formGroup.patchValue(this.data); \r\n    }\r\n\r\n    \r\n  \r\n  onBlur($event) {\r\n      console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onChange($event) {\r\n      console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onFocus($event) {\r\n      console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onMatEvent($event) {\r\n      console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n  }\r\n  }\r\n"],"sourceRoot":""}