{"version":3,"sources":["webpack:///./src/app/music-recordings/_shared/forms/formModel.ts","webpack:///./src/app/music-recordings/index.ts","webpack:///./src/app/music-recordings/index/index.component.html","webpack:///./src/app/music-recordings/index/index.component.scss","webpack:///./src/app/music-recordings/index/index.component.ts","webpack:///./src/app/music-recordings/music-recordings-detail/music-recordings-detail.component.html","webpack:///./src/app/music-recordings/music-recordings-detail/music-recordings-detail.component.scss","webpack:///./src/app/music-recordings/music-recordings-detail/music-recordings-detail.component.ts","webpack:///./src/app/music-recordings/music-recordings-edit/form.layout.ts","webpack:///./src/app/music-recordings/music-recordings-edit/music-recordings-edit.component.html","webpack:///./src/app/music-recordings/music-recordings-edit/music-recordings-edit.component.scss","webpack:///./src/app/music-recordings/music-recordings-edit/music-recordings-edit.component.ts","webpack:///./src/app/music-recordings/music-recordings-routing.module.ts","webpack:///./src/app/music-recordings/music-recordings.module.ts"],"names":[],"mappings":"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","file":"music-recordings-music-recordings-module.js","sourcesContent":["\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport const STATES_AUTOCOMPLETE_LIST = [\r\n    'Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\r\n    'District of Columbia', 'Federated States of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho',\r\n    'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland',\r\n    'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada',\r\n    'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',\r\n    'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island',\r\n    'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia',\r\n    'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\r\n];\r\n\r\nexport const MY_FORM_MODEL = [\r\n\r\n    // new DynamicFormGroupModel({\r\n\r\n    //     id: 'stay',\r\n    //     group: [\r\n    //         new DynamicDatePickerModel({\r\n\r\n    //             id: 'arrivalDate',\r\n    //             inline: false,\r\n    //             placeholder: 'Date of Arrival'\r\n    //         }),\r\n\r\n    //         new DynamicDatePickerModel({\r\n    //             id: 'departureDate',\r\n    //             inline: false,\r\n    //             placeholder: 'Date of Departure'\r\n    //         })\r\n    //     ],\r\n    //     // validators: {\r\n    //     //     customDateRangeValidator: null\r\n    //     // },\r\n    //     // errorMessages: {\r\n    //     //     customDateRangeValidator: 'Invalid period of time selected'\r\n    //     // }\r\n    // }),\r\n\r\n    // new DynamicFormGroupModel({\r\n\r\n    //     id: 'room',\r\n    //     group: [\r\n    //         new DynamicSelectModel<string>({\r\n\r\n    //             id: 'roomSize',\r\n    //             placeholder: 'Room Size',\r\n    //             hint: 'Choose a room type',\r\n    //             options: [\r\n    //                 {\r\n    //                     label: 'Single Room',\r\n    //                     value: 'single-room'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Double Room',\r\n    //                     value: 'double-room'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Business Suite',\r\n    //                     value: 'business-suite'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Presidential Suite',\r\n    //                     value: 'presidential-suite'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Storeroom',\r\n    //                     value: 'storeroom'\r\n    //                 }\r\n    //             ]\r\n    //         }),\r\n\r\n    //         new DynamicInputModel({\r\n\r\n    //             id: 'roomQuantity',\r\n    //             inputType: 'number',\r\n    //             placeholder: 'Room Quantity',\r\n    //             hint: 'Maximum: 5',\r\n    //             max: 5,\r\n    //             min: 0\r\n    //         })\r\n    //     ]\r\n    // }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'title',\r\n        maxLength: 25,\r\n        placeholder: 'Title of Recording',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'artist',\r\n        maxLength: 50,\r\n        placeholder: 'Name of Artist',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'isrc',\r\n        placeholder: 'ISRC',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is Required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'ISWC',\r\n        placeholder: 'ISWC',\r\n        hint: 'Add your ISWC code',\r\n        prefix: '<span>X</span>',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'country',\r\n        placeholder: 'Country',\r\n        prefix: '<span>X</span>',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'owner',\r\n        placeholder: 'Owner',\r\n        prefix: '<span>X</span>',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'collective',\r\n        placeholder: 'Collective',\r\n        prefix: '<span>X</span>',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n    new DynamicInputModel({\r\n\r\n        id: 'submittedTo',\r\n        placeholder: 'Submitted to...',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'reminder',\r\n        offLabel: 'Send me a reminder',\r\n        onLabel: 'Send me a reminder',\r\n        value: false\r\n\r\n    }),\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'updates',\r\n        offLabel: 'Subscribe to Updates',\r\n        onLabel: 'Subscribe to Updates',\r\n        value: false\r\n    }),\r\n\r\n    new DynamicCheckboxModel({\r\n        id: 'confirm',\r\n        label: 'I confirm the information given above',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'You must confirm....'\r\n        }\r\n    })\r\n];\r\n","\r\nexport * from './index/index.component';\r\nexport * from './music-recordings-detail/music-recordings-detail.component';\r\nexport * from './music-recordings-edit/music-recordings-edit.component';\r\n\r\n","module.exports = \"<p>Music recordings\\r\\nThis will allow the user to manage rights data and other related metadata about recordings. These recordings could be unreleased or released.</p>\\r\\n\\r\\n\\r\\n\\r\\n<mat-progress-bar  *ngIf=\\\"showSpinner\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n\\r\\n\\r\\n\\r\\n<div style=\\\"display: none\\\">\\r\\n{{gridOptions.rowData}}\\r\\n</div>\\r\\n\\r\\n<div  class=\\\"table-responsive-lg\\\">\\r\\n    <ag-grid-angular #agGrid style=\\\"width: 100%; height: 700px;\\\" class=\\\"ag-theme-balham\\\"\\r\\n                 [gridOptions]=\\\"gridOptions\\\">\\r\\n\\r\\n                 <ag-grid-column headerName=\\\"Recordings\\\">\\r\\n\\r\\n                 <ag-grid-column headerName=\\\"#\\\" [width]=\\\"30\\\" [checkboxSelection]=\\\"true\\\"\\r\\n                 [suppressMenu]=\\\"true\\\" [pinned]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                 <ag-grid-column \\r\\n                          headerName=\\\"Name\\\" \\r\\n                          field=\\\"Name\\\" [width]=\\\"125\\\" \\r\\n                          [pinned]=\\\"true\\\"  \\r\\n                          [sortable]=\\\"true\\\" \\r\\n                          [resizable]=\\\"true\\\" \\r\\n                          [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                          <ag-grid-column headerName=\\\"Artist\\\"  field=\\\"Artist\\\" [width]=\\\"120\\\"  [pinned]=\\\"true\\\"  [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                        </ag-grid-column>\\r\\n\\r\\n                          <ag-grid-column headerName=\\\"Details\\\">\\r\\n                         \\r\\n                         \\r\\n\\r\\n                          <ag-grid-column headerName=\\\"ISRC\\\"  field=\\\"ISRC\\\" [width]=\\\"100\\\"    [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                          <ag-grid-column headerName=\\\"ISWC\\\"  field=\\\"ISWC\\\" [width]=\\\"100\\\"    [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                          <ag-grid-column headerName=\\\"Date\\\"  field=\\\"Date\\\" [width]=\\\"100\\\"    [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                          <ag-grid-column headerName=\\\"Country\\\"  field=\\\"Country\\\" [width]=\\\"100\\\" [cellRenderer]=\\\"countryCellRenderer\\\"    [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                          <ag-grid-column headerName=\\\"Owner\\\"  field=\\\"Owner\\\" [width]=\\\"150\\\"   [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                          <ag-grid-column headerName=\\\"Collective\\\"  field=\\\"Collective\\\" [width]=\\\"150\\\"    [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                          <ag-grid-column headerName=\\\"Submitted to\\\"  field=\\\"Submitted to\\\" [width]=\\\"150\\\"  [pinned]=\\\"false\\\"  [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n                          <ag-grid-column headerName=\\\"Status\\\"  field=\\\"Status\\\" [width]=\\\"150\\\"  [pinned]=\\\"false\\\"  [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column> \\r\\n                        </ag-grid-column>\\r\\n    </ag-grid-angular>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <mat-card *ngIf=\\\"allItems\\\">\\r\\n<div class=\\\"table-responsive-lg\\\">\\r\\n\\r\\n    <table class=\\\"table table-striped table-hover table-sm small\\\">\\r\\n  \\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th>Ref</th>\\r\\n          <th>Title</th>\\r\\n          <th>Artist</th>\\r\\n          <th>ISRC</th>       \\r\\n          <th >ISWC</th>\\r\\n          <th >Date</th>\\r\\n          <th >Country</th>\\r\\n          <th >Owner</th>\\r\\n          <th >Collective</th>\\r\\n          <th>Submitted to</th>\\r\\n          <th >Status</th>\\r\\n          <th>Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n  \\r\\n      <tbody>\\r\\n \\r\\n        <tr *ngFor=\\\"let item of allItems\\\">\\r\\n            <td>ISDN-2345/4321</td>\\r\\n            <td>{{item.Name}}</td>\\r\\n            <td>{{item.Artist}}</td>\\r\\n            <td>{{item.ISRC}}</td>     \\r\\n            <td>{{item.ISWC}}</td>\\r\\n            <td>{{item.Date}}</td>\\r\\n            <td>{{item.Country}}</td>\\r\\n            <td>{{item.Owner}}</td>\\r\\n            <td>{{item.Collective}}</td>\\r\\n            <td>{{item['Submitted to']}}</td>\\r\\n            <th>{{item.Status}}</th>\\r\\n            <td>\\r\\n              <button  [routerLink]=\\\"['edit', item.ISRC]\\\">Edit</button>   \\r\\n              <a mat-stroked-button  [routerLink]=\\\"['detail', item.ISRC]\\\">view</a>\\r\\n            </td>\\r\\n          </tr>\\r\\n     \\r\\n  \\r\\n        </tbody>  \\r\\n        </table>  \\r\\n  \\r\\n  </div>\\r\\n\\r\\n\\r\\n</mat-card> -->\\r\\n\\r\\n<!-- Music recordings\\r\\nTitle\\r\\nthe recording title/name.\\r\\nArtist\\r\\nThe name of the band or artist associated with the recording\\r\\nISRC\\r\\n12 alphanumeric characters, formed from the four code elements - see details. Example: UKNF91800001,  “UKNF9” - is the artist/band code, “18” two digit year, “00001” the first recording in that year.\\r\\nISWC\\r\\n\\r\\n\\r\\nDate\\r\\nThe recording date. We may only need the year (P date) or year/month. \\r\\nCountry\\r\\nthe country of recording, maybe this should be labeled location. \\r\\nOwner\\r\\nThe primary rights owner.\\r\\nCollective\\r\\nCollective Management Organisations. For a single right type this can be a single CMO that is that is tasked with collecting on your behalf or multiple CMOs. I think we should allow for a comma separated list with an expandable “...”\\r\\nSubmitted to\\r\\nOther services like musicbrainz the user has enabled adapters for and submitted the recordings to. Will need expandable “...”\\r\\nStatus\\r\\nAs the user can potentially submit a recording to multiple CMOs and possibly other services like musicbrainz we may have multiple statuses. This should act as a guide for identifying a combined state and actions needed. We may need to keep this simple and rely on a detail page to hold the details. So this may say “not submitted” “processing”, “need more input to complete” and “submitted”. \\r\\nAction\\r\\nCommon actions should be: Edit, View details, Submit, Edit submit list.\\r\\nNotes:\\r\\nThis should be used as an overview as we will have data that can not be easily tabulated. This is especially true if the data is submitted using multiple adapters. \\r\\nEditing and viewing the data is simple up to the point the user submits it. Once it is submitted to multiple services the data and state can diverge. If one of the services reports a title to be to long or containing unrecognised characters the data will need to be edited for that specific service and will diverge. I think we will need an expanded view for this.      -->\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXJlY29yZGluZ3MvaW5kZXgvaW5kZXguY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TestDataService } from 'src/app/_shared/services/test-api.service';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IMusicRecording } from 'src/app/_models/classes/musicRecording';\r\n\r\nimport { GridOptions } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  gridOptions: GridOptions;\r\n  entityTypes$;\r\n  selectedType;\r\n  entityList$;\r\n  selectedEntity$;\r\n  listAll$;\r\n  showSpinner: boolean;\r\n  allItems: IMusicRecording[];\r\n\r\n\r\n  constructor(\r\n    private readonly testData: TestDataService,\r\n\r\n  ) {\r\n    this.listAll();\r\n\r\n  //   this.gridOptions = <GridOptions>{};\r\n  //   this.gridOptions.columnDefs = [\r\n  //     {\r\n  //         headerName: 'Name',\r\n  //         field: 'Name'\r\n      \r\n  //     },\r\n  //     {\r\n  //         headerName: 'Artist',\r\n  //         field: 'Artist'\r\n  //     },\r\n\r\n  // ];\r\n  // this.gridOptions.rowData = \r\n  //  [\r\n  //   {Name: 'dfg sdfg', Artist: 'dfhg sdfgsdf' },\r\n  //   {Name: 'dfg sdfg', Artist: 'dfhg sdfgsdf' }\r\n  // ];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.entityTypes$ = this.testData.listEntityTypes();\r\n\r\n    this.entityList$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listEntities(type))\r\n    );\r\n    this.selectedEntity$ = new Subject<number>().pipe(\r\n      switchMap(id => this.testData.getEntity(this.selectedType, id))\r\n    );\r\n    this.listAll$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listAll(type))\r\n    );\r\n\r\n  //  this.listAll();\r\n  }\r\n\r\n   countryCellRenderer(params) {\r\n    const flag = \"<img border='0' width='15' height='10' style='margin-bottom: 2px' src='https://www.ag-grid.com/images/flags/gb.png'>\";\r\n    return flag + \" \" + params.value;\r\n}\r\n\r\n  changeEntityType(type) {\r\n    this.selectedType = type;\r\n    this.entityList$.next(type);\r\n  }\r\n\r\n  changeEntity(id) {\r\n    this.selectedEntity$.next(id);\r\n  }\r\n\r\n  listAll() {\r\n\r\n    this.listAll$ = this.testData.listAll('music-recording').pipe(\r\n      tap(() => this.showSpinner = true),\r\n    )\r\n      .subscribe(res => {\r\n       // this.allItems = res;\r\n       this.gridOptions = <GridOptions>{};\r\n       this.gridOptions.columnDefs = [\r\n         {\r\n             headerName: 'Name',\r\n             field: 'Name'        \r\n         },\r\n         {\r\n             headerName: 'Artist',\r\n             field: 'Artist'\r\n         },\r\n         {\r\n          headerName: 'ISRC',\r\n          field: 'ISRC'\r\n      },\r\n      {\r\n        headerName: 'ISWC',\r\n        field: 'ISWC'\r\n    },\r\n    {\r\n      headerName: 'Date',\r\n      field: 'Date'\r\n  },\r\n  {\r\n    headerName: 'Country',\r\n    field: 'Country'\r\n},\r\n{\r\n  headerName: 'Owner',\r\n  field: 'Owner'\r\n},\r\n{\r\n  headerName: 'Collective',\r\n  field: 'Collective'\r\n},\r\n{\r\n  headerName: 'Submitted to',\r\n  field: 'Submitted to'\r\n},\r\n{\r\n  headerName: 'Status',\r\n  field: 'Status'\r\n}\r\n   \r\n     ];\r\n        this.gridOptions.rowData = res;\r\n        this.showSpinner = false;\r\n      })\r\n      ;\r\n \r\n    // this.listAll$.next('music-recording');\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  music-recordings-detail works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXJlY29yZGluZ3MvbXVzaWMtcmVjb3JkaW5ncy1kZXRhaWwvbXVzaWMtcmVjb3JkaW5ncy1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-music-recordings-detail',\r\n  templateUrl: './music-recordings-detail.component.html',\r\n  styleUrls: ['./music-recordings-detail.component.scss']\r\n})\r\nexport class MusicRecordingsDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export const FORM_LAYOUT = {\r\n\r\n    'addressStreet': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};","module.exports = \"<p>\\r\\n  music-recordings-edit works!!!\\r\\n</p>\\r\\n\\r\\n<div class=\\\"content-margin\\\" style=\\\"width: 50%;\\\">\\r\\n\\r\\n  <mat-card>\\r\\n\\r\\n      <form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n          <dynamic-material-form [group]=\\\"formGroup\\\"\\r\\n                                 [layout]=\\\"formLayout\\\"\\r\\n                                 [model]=\\\"formModel\\\"\\r\\n                                 (blur)=\\\"onBlur($event)\\\"\\r\\n                                 (change)=\\\"onChange($event)\\\"\\r\\n                                 (focus)=\\\"onFocus($event)\\\"\\r\\n                                 (matEvent)=\\\"onMatEvent($event)\\\"></dynamic-material-form>\\r\\n\\r\\n      </form>\\r\\n\\r\\n  </mat-card>\\r\\n\\r\\n  <!--button (click)=\\\"test()\\\">Update List</button-->\\r\\n\\r\\n  <pre>{{formGroup.value | json}}</pre>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXJlY29yZGluZ3MvbXVzaWMtcmVjb3JkaW5ncy1lZGl0L211c2ljLXJlY29yZGluZ3MtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormService, DynamicFormLayout } from '@ng-dynamic-forms/core';\r\n\r\nimport { FormsModule, FormGroup, FormArray, FormBuilder, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { MY_FORM_MODEL } from '../_shared/forms/formModel';\r\nimport { LabelOptions, MAT_LABEL_GLOBAL_OPTIONS, MatDatepicker, MatInput } from '@angular/material';\r\nimport { FORM_LAYOUT } from './form.layout';\r\n\r\n@Component({\r\n  selector: 'app-music-recordings-edit',\r\n  templateUrl: './music-recordings-edit.component.html',\r\n  styleUrls: ['./music-recordings-edit.component.scss']\r\n})\r\nexport class MusicRecordingsEditComponent implements OnInit {\r\nformModel: DynamicFormModel = MY_FORM_MODEL;\r\nformGroup: FormGroup;\r\nformLayout: DynamicFormLayout = FORM_LAYOUT;\r\n\r\nconstructor(private formService: DynamicFormService) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.formService.createFormGroup(this.formModel);\r\n  }\r\n\r\nonBlur($event) {\r\n    console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonChange($event) {\r\n    console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonFocus($event) {\r\n    console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonMatEvent($event) {\r\n    console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport * as pages from './index';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: pages.IndexComponent },\r\n  { path: 'edit/:id', component: pages.MusicRecordingsEditComponent },\r\n  { path: 'detail/:id', component: pages.MusicRecordingsDetailComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MusicRecordingsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\n\r\nimport { MatGridListModule, MatCardModule } from '@angular/material';\r\n\r\nimport { MusicRecordingsRoutingModule } from './music-recordings-routing.module';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { MusicRecordingsEditComponent } from './music-recordings-edit/music-recordings-edit.component';\r\nimport { MusicRecordingsDetailComponent } from './music-recordings-detail/music-recordings-detail.component';\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\n\r\nimport {AgGridModule} from 'ag-grid-angular';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IndexComponent, \r\n    MusicRecordingsEditComponent, \r\n    MusicRecordingsDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MusicRecordingsRoutingModule,\r\n    FormsModule,\r\n        ReactiveFormsModule,\r\n        DynamicFormsMaterialUIModule,\r\n        AppMaterialModule,\r\n        AgGridModule.withComponents(\r\n          []\r\n      )\r\n  ]\r\n})\r\nexport class MusicRecordingsModule { }\r\n"],"sourceRoot":""}