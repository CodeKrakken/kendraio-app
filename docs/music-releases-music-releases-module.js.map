{"version":3,"sources":["webpack:///./src/app/assets/music-releases/_shared/forms/form.layout.ts","webpack:///./src/app/assets/music-releases/_shared/forms/formModel.ts","webpack:///./src/app/assets/music-releases/_shared/forms/registerNewRelease.ts","webpack:///./src/app/assets/music-releases/index.ts","webpack:///./src/app/assets/music-releases/list/list.component.html","webpack:///./src/app/assets/music-releases/list/list.component.scss","webpack:///./src/app/assets/music-releases/list/list.component.ts","webpack:///./src/app/assets/music-releases/music-releases-detail/music-releases-detail.component.html","webpack:///./src/app/assets/music-releases/music-releases-detail/music-releases-detail.component.scss","webpack:///./src/app/assets/music-releases/music-releases-detail/music-releases-detail.component.ts","webpack:///./src/app/assets/music-releases/music-releases-edit/music-releases-edit.component.html","webpack:///./src/app/assets/music-releases/music-releases-edit/music-releases-edit.component.ts","webpack:///./src/app/assets/music-releases/music-releases-routing.module.ts","webpack:///./src/app/assets/music-releases/music-releases.component.html","webpack:///./src/app/assets/music-releases/music-releases.component.ts","webpack:///./src/app/assets/music-releases/music-releases.module.ts","webpack:///./src/app/assets/music-releases/publish/publish.component.html","webpack:///./src/app/assets/music-releases/publish/publish.component.scss","webpack:///./src/app/assets/music-releases/publish/publish.component.ts","webpack:///./src/app/assets/music-releases/register-new-release/register-new-release.component.html","webpack:///./src/app/assets/music-releases/register-new-release/register-new-release.component.scss","webpack:///./src/app/assets/music-releases/register-new-release/register-new-release.component.ts","webpack:///./src/app/assets/music-releases/register/register.component.html","webpack:///./src/app/assets/music-releases/register/register.component.scss","webpack:///./src/app/assets/music-releases/register/register.component.ts","webpack:///./src/app/assets/music-releases/tasks/tasks.component.html","webpack:///./src/app/assets/music-releases/tasks/tasks.component.scss","webpack:///./src/app/assets/music-releases/tasks/tasks.component.ts"],"names":[],"mappings":"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","file":"music-releases-music-releases-module.js","sourcesContent":["export const FORM_LAYOUT = {\r\n\r\n    'Ownerx': {\r\n        element: {\r\n            host: 'col-sm-4'\r\n        }\r\n    }\r\n};\r\n","\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const MUSIC_RELEASES_FORM_MODEL = [\r\n\r\n    // new DynamicFormGroupModel({\r\n\r\n    //     id: 'stay',\r\n    //     group: [\r\n    //         new DynamicDatePickerModel({\r\n\r\n    //             id: 'arrivalDate',\r\n    //             inline: false,\r\n    //             placeholder: 'Date of Arrival'\r\n    //         }),\r\n\r\n    //         new DynamicDatePickerModel({\r\n    //             id: 'departureDate',\r\n    //             inline: false,\r\n    //             placeholder: 'Date of Departure'\r\n    //         })\r\n    //     ],\r\n    //     // validators: {\r\n    //     //     customDateRangeValidator: null\r\n    //     // },\r\n    //     // errorMessages: {\r\n    //     //     customDateRangeValidator: 'Invalid period of time selected'\r\n    //     // }\r\n    // }),\r\n\r\n    // new DynamicFormGroupModel({\r\n\r\n    //     id: 'room',\r\n    //     group: [\r\n    //         new DynamicSelectModel<string>({\r\n\r\n    //             id: 'roomSize',\r\n    //             placeholder: 'Room Size',\r\n    //             hint: 'Choose a room type',\r\n    //             options: [\r\n    //                 {\r\n    //                     label: 'Single Room',\r\n    //                     value: 'single-room'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Double Room',\r\n    //                     value: 'double-room'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Business Suite',\r\n    //                     value: 'business-suite'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Presidential Suite',\r\n    //                     value: 'presidential-suite'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Storeroom',\r\n    //                     value: 'storeroom'\r\n    //                 }\r\n    //             ]\r\n    //         }),\r\n\r\n    //         new DynamicInputModel({\r\n\r\n    //             id: 'roomQuantity',\r\n    //             inputType: 'number',\r\n    //             placeholder: 'Room Quantity',\r\n    //             hint: 'Maximum: 5',\r\n    //             max: 5,\r\n    //             min: 0\r\n    //         })\r\n    //     ]\r\n    // }),\r\n\r\n\r\n\r\n\r\n\r\n    new DynamicInputModel({\r\n        id: 'Title',\r\n        maxLength: 25,\r\n        placeholder: 'Title of Recording',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n        id: 'Artist',\r\n        maxLength: 50,\r\n        placeholder: 'Name of Artist',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n    \r\n    new DynamicInputModel({\r\n        id: 'Barcode',\r\n        maxLength: 150,\r\n        placeholder: 'Barcode'\r\n\r\n    }),\r\n    \r\n    new DynamicInputModel({\r\n        id: 'Catalogue Number',\r\n        maxLength: 50,\r\n        placeholder: 'Catalogue Number'\r\n    }),\r\n    \r\n    new DynamicInputModel({\r\n        id: 'Collective',\r\n        maxLength: 50,\r\n        placeholder: 'Collective'\r\n    }),\r\n    \r\n    new DynamicInputModel({\r\n        id: 'Date',\r\n        placeholder: 'Date'\r\n    }),\r\n    \r\n\r\n\r\n    new DynamicInputModel({\r\n        id: 'Distribution',\r\n        maxLength: 50,\r\n        placeholder: 'Distribution'\r\n    }),\r\n    \r\n    \r\n    new DynamicInputModel({\r\n        id: 'Format',\r\n        maxLength: 10,\r\n        placeholder: 'Format'\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n        id: 'Number of tracks',\r\n        maxLength: 3,\r\n        placeholder: 'Number of tracks'\r\n    }),\r\n    new DynamicInputModel({\r\n        id: 'Owner',\r\n        maxLength: 50,\r\n        placeholder: 'Owner',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n    new DynamicInputModel({\r\n        id: 'Territory',\r\n        maxLength: 50,\r\n        placeholder: 'Territory'\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n        id: 'Type',\r\n        maxLength: 50,\r\n        placeholder: 'Type'\r\n    }),\r\n    new DynamicInputModel({\r\n        id: 'Submitted to',\r\n        placeholder: 'Submitted to'\r\n    }),\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // new DynamicSwitchModel({\r\n\r\n    //     id: 'reminder',\r\n    //     offLabel: 'Send me a reminder',\r\n    //     onLabel: 'Send me a reminder',\r\n    //     value: false\r\n\r\n    // }),\r\n\r\n    // new DynamicSwitchModel({\r\n\r\n    //     id: 'updates',\r\n    //     offLabel: 'Subscribe to Updates',\r\n    //     onLabel: 'Subscribe to Updates',\r\n    //     value: false\r\n    // }),\r\n\r\n    // new DynamicCheckboxModel({\r\n    //     id: 'confirm',\r\n    //     label: 'I confirm the information given above',\r\n    //     validators: {\r\n    //         required: null\r\n    //     },\r\n    //     errorMessages: {\r\n    //         required: 'You must confirm....'\r\n    //     }\r\n    // })\r\n];\r\n","\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel,\r\n    DynamicCheckboxGroupModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\n// Band/Artist Name\r\n// Release Type(Single/EP/LP ..)\r\n// (P)Date\r\n// (P)Name\r\n// (C) Line\r\n// Format(Digital/CD/Vinyl/cassette): 1+ values. for each:\r\n// * Title, barcode, catalogue number, release date\r\n\r\nexport const RELEASE_REGISTER_FORM_MODEL = [\r\n\r\n    new DynamicInputModel({\r\n        id: 'ISRC',\r\n        maxLength: 50,\r\n        placeholder: 'ISRC',\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'recordingTitle',\r\n        maxLength: 25,\r\n        placeholder: 'Recording Title',\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n        id: 'bandArtistName',\r\n        maxLength: 50,\r\n        placeholder: 'Band/Artist Name',\r\n    }),\r\n\r\n\r\n    new DynamicInputModel ({\r\n\r\n        id: 'genere',\r\n        placeholder: 'Genere',\r\n        hint: 'if a classical or dramatic work',\r\n    }),\r\n\r\n    new DynamicInputModel ({\r\n        id: 'date',\r\n        placeholder: 'Date',\r\n    }),\r\n    new DynamicInputModel({\r\n        id: 'name',\r\n        maxLength: 50,\r\n        placeholder: 'Name',\r\n    }),\r\n    new DynamicInputModel({\r\n        id: 'line',\r\n        maxLength: 50,\r\n        placeholder: 'Line',\r\n    }),\r\n\r\n\r\n    new DynamicCheckboxGroupModel(\r\n        {\r\nid: 'releaseType',\r\nlabel: 'Release Type',\r\ngroup: [\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'single',\r\n            label: 'single',\r\n            value: true\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'LP',\r\n            label: 'LP',\r\n            value: false\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'EP',\r\n            label: 'EP',\r\n            value: false\r\n        }\r\n    )\r\n]\r\n        }\r\n    ),\r\n\r\n    /// Format(Digital/CD/Vinyl/cassette): 1+ values. for each:\r\n    new DynamicCheckboxGroupModel(\r\n        {\r\nid: 'format',\r\nlabel: 'Format',\r\ngroup: [\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'Digital',\r\n            label: 'Digital',\r\n            value: true\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'cd',\r\n            label: 'CD',\r\n            value: false\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'vinyl',\r\n            label: 'Vinyl',\r\n            value: false\r\n        }\r\n    ),    new DynamicCheckboxModel(\r\n        {\r\n            id: 'cassette',\r\n            label: 'Cassette',\r\n            value: false\r\n        }\r\n    )\r\n]\r\n        }\r\n    ),\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n   new DynamicFormGroupModel({\r\n\r\n        id: 'signoff',\r\n        group: [\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'reminder',\r\n        offLabel: 'Send me a reminder',\r\n        onLabel: 'Send me a reminder',\r\n        value: false\r\n\r\n    }),\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'updates',\r\n        offLabel: 'Subscribe to Updates',\r\n        onLabel: 'Subscribe to Updates',\r\n        value: false\r\n    }),\r\n\r\n    new DynamicCheckboxModel({\r\n        id: 'confirm',\r\n        label: 'I confirm the information given above',\r\n        value: false,\r\n        validators: {\r\n            requiredTrue: null\r\n        },\r\n        errorMessages: {\r\n            required: 'You must confirm your data is correct'\r\n        }\r\n    })\r\n]\r\n})\r\n];\r\n","\r\nexport * from './music-releases.component';\r\nexport * from './music-releases-detail/music-releases-detail.component';\r\nexport * from './music-releases-edit/music-releases-edit.component';\r\nexport * from './tasks/tasks.component';\r\nexport * from './list/list.component';\r\nexport * from  './register-new-release/register-new-release.component';\r\n\r\nexport * from   './publish/publish.component';\r\nexport * from   './register/register.component';\r\n\r\n\r\n","module.exports = \"<mat-toolbar>\\r\\n    <span>\\r\\n      <button mat-button mat-raised-button (click)=\\\"openAddNewDialog()\\\">Create Release</button>\\r\\n    </span>\\r\\n\\r\\n  </mat-toolbar>\\r\\n  <router-outlet></router-outlet>\\r\\n  \\r\\n  <mat-progress-bar *ngIf=\\\"showSpinner\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n  \\r\\n  <!-- <pre> {{ allItems | json }}</pre> -->\\r\\n  \\r\\n  <div class=\\\"table-responsive-lg\\\">\\r\\n    <ag-grid-angular #agGrid style=\\\"width: 100%; height: 700px;\\\" class=\\\"ag-theme-material\\\" [gridOptions]=\\\"gridOptions\\\"\\r\\n      [frameworkComponents]=\\\"gridOptions.frameworkComponents\\\" [rowData]=\\\"allItems\\\" animateRows=\\\"true\\\"\\r\\n      (cellClicked)=\\\"onCellClicked($event)\\\" rowSelection=\\\"multiple\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n      animateRows=\\\"true\\\">\\r\\n  \\r\\n      <ag-grid-column headerName=\\\"Releases\\\">\\r\\n        <ag-grid-column headerName=\\\"#\\\" [width]=\\\"80\\\" [checkboxSelection]=\\\"true\\\" [suppressMenu]=\\\"false\\\" [pinned]=\\\"true\\\"\\r\\n          [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n  \\r\\n        <ag-grid-column headerName=\\\"Actions\\\" [width]=\\\"100\\\" [pinned]=\\\"true\\\" [cellRenderer]=\\\"editBtnCellRenderer\\\">\\r\\n        </ag-grid-column>\\r\\n  \\r\\n        <ag-grid-column headerName=\\\"Title\\\" field=\\\"Title\\\" [width]=\\\"175\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n          [resizable]=\\\"true\\\" [filter]=\\\"true\\\" [cellEditorFramework]=\\\"gridOptions.frameworkComponents.inputRenderer\\\"\\r\\n          [editable]=\\\"true\\\"></ag-grid-column>\\r\\n  \\r\\n        <ag-grid-column headerName=\\\"Artist\\\" field=\\\"Artist\\\" [width]=\\\"120\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n          [resizable]=\\\"true\\\" [filter]=\\\"true\\\" [editable]=\\\"false\\\"></ag-grid-column>\\r\\n      </ag-grid-column>\\r\\n  \\r\\n      <ag-grid-column headerName=\\\"Details\\\">\\r\\n  \\r\\n        <ag-grid-column headerName=\\\"Date\\\" field=\\\"Date\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n        </ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Owner\\\" field=\\\"Owner\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n          [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Date\\\" field=\\\"Date\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n        </ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Territory\\\" field=\\\"Territory\\\" [width]=\\\"100\\\" [cellRenderer]=\\\"countryCellRenderer\\\"\\r\\n          [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Type\\\" field=\\\"Type\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n        </ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Format\\\" field=\\\"Format\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n          [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Catalogue Number\\\" field=\\\"Catalogue Number\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\"\\r\\n          [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Barcode\\\" field=\\\"Barcode\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n          [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"#tracks\\\" field=\\\"Number of tracks\\\" [width]=\\\"50\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n          [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Distribution\\\" field=\\\"Distribution\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n          [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Collective\\\" field=\\\"Collective\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n          [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n        <ag-grid-column headerName=\\\"Submitted to\\\" field=\\\"Submitted to\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n          [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n  \\r\\n      </ag-grid-column>\\r\\n    </ag-grid-angular>\\r\\n  \\r\\n    <mat-action-list *ngIf=\\\"claimsToSend.length > 0\\\">\\r\\n      <button mat-raised-button mat-button (click)=\\\"sendToClaim($event)\\\">Claim Selected</button>\\r\\n      <button mat-raised-button mat-button (click)=\\\"sendToRegister($event)\\\">Register Selected</button>\\r\\n      <button mat-raised-button mat-button (click)=\\\"sendToPublish($event)\\\">Distribute/Publish Selected</button>\\r\\n    </mat-action-list>\\r\\n    <div>Selection: <span id=\\\"selectedRows\\\">...</span></div>\\r\\n  \\r\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0cy9tdXNpYy1yZWxlYXNlcy9saXN0L2xpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap, tap, delay } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IMusicRelease } from 'src/app/_models/classes/musicRelease';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { PageTitleService } from 'src/app/services/page-title.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MusicReleasesEditComponent } from '../music-releases-edit/music-releases-edit.component';\r\nimport { TestDataService } from 'src/app/services/test-data.service';\r\nimport { MatInputComponent, MatButtonComponent } from 'src/app/_shared/components';\r\n// import { Animations } from 'src/app/_shared/animations';\r\n\r\nimport { SendClaimsComponent } from 'src/app/claims/send-claims/send-claims.component';\r\nimport { RegisterNewReleaseComponent } from '../register-new-release/register-new-release.component';\r\nimport { PublishComponent } from '../publish/publish.component';\r\nimport { RegisterComponent } from '../register/register.component';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n  public gridOptions: GridOptions;\r\n  entityTypes$;\r\n  selectedType;\r\n  entityList$;\r\n  selectedEntity$;\r\n  listAll$;\r\n  showSpinner: boolean;\r\n  allItems: IMusicRelease[];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  claimsToSend: Array<any>;\r\n  newReleases: any[] = [];\r\n \r\n\r\n\r\n  constructor(\r\n    private readonly testData: TestDataService,\r\n    private readonly pageTitle: PageTitleService,\r\n    public dialog: MatDialog,\r\n  ) {\r\n    this.gridOptions = <GridOptions>{\r\n      onGridReady: () => {\r\n       //   this.gridOptions.api.sizeColumnsToFit();\r\n      },\r\n      rowHeight: 48,\r\n      frameworkComponents: {\r\n          inputRenderer: MatInputComponent,\r\n          thing: MatButtonComponent\r\n      }\r\n  };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.claimsToSend = [];\r\n    this.pageTitle.setTitle('Releases');\r\n    this.entityTypes$ = this.testData.listEntityTypes();\r\n\r\n    this.entityList$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listEntities(type))\r\n    );\r\n    this.selectedEntity$ = new Subject<number>().pipe(\r\n      switchMap(id => this.testData.getEntity(this.selectedType, id))\r\n    );\r\n    this.listAll$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listAll(type))\r\n    );\r\n\r\n    this.listAll();\r\n  }\r\n\r\n  countryCellRenderer(params) {\r\n    const flag = '<img border=\\'0\\' width=\\'15\\' height=\\'10\\' style=\\'margin-bottom: 2px\\' src=\\'https://www.ag-grid.com/images/flags/gb.png\\'>';\r\n    return flag + ' ' + params.value;\r\n    // return this.thing;\r\n  }\r\n\r\n  editBtnCellRenderer(params) {\r\n    const btn = '<button class=\"mat-button mat-raised-button\"><span class=\"mat-button-wrapper\">Edit</span><div class=\"mat-button-ripple mat-ripple\"></div><div class=\"mat-button-focus-overlay\"></div></button>';\r\n    return btn;\r\n  }\r\n  \r\n\r\n  changeEntityType(type) {\r\n    this.selectedType = type;\r\n    this.entityList$.next(type);\r\n  }\r\n\r\n  changeEntity(id) {\r\n    this.selectedEntity$.next(id);\r\n  }\r\n  onCellClicked(ev: any) {\r\n    if (ev.colDef.headerName === 'Actions') {\r\n      this.openDialog(ev.data);\r\n    }\r\n  }\r\n\r\n  openDialog(ev: any): void {\r\n    const dialogRef = this.dialog.open(MusicReleasesEditComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openAddNewDialog(ev?: any): void {\r\n    const dialogRef = this.dialog.open(RegisterNewReleaseComponent, {\r\n      data: 'ev',\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result !== 'cancel') {\r\n this.addItemToGrid(result);\r\n      }\r\n   \r\n    });\r\n  }\r\n  addItemToGrid(result: any): any {\r\n   const r = {'type': 'music-release',\r\n    'Title': result.recordingTitle,\r\n    'Artist': result.bandArtistName,\r\n    'Date': result.date,\r\n    'Owner': 'owner',\r\n    'Territory': 'Europe',\r\n    'Type': result.genere,\r\n    'Format': result.format,\r\n    'Catalogue Number': '',\r\n    'Barcode': '',\r\n    'Number of tracks': '1',\r\n    'Distribution': '',\r\n    'Collective': '',\r\n    'Submitted to': ''};\r\n\r\n    // this.allItems.push(r);\r\n\r\n    // this.gridOptions.api.updateRowData({add: [r]});\r\n    this.gridOptions.api.updateRowData({add: [r], addIndex: 0});\r\n   // printResult(res);\r\n  }\r\n\r\n  onSelectionChanged(ev) {\r\n    this.gridApi = ev.api;\r\n\r\n    const selectedRows = this.gridApi.getSelectedRows();\r\n    let selectedRowsString = '';\r\n    let theRow;\r\n    selectedRows.forEach(function(selectedRow, index) {\r\n      if (index > 5) {\r\n        return;\r\n      }\r\n      if (index !== 0) {\r\n        selectedRowsString += ', ';      \r\n      }\r\n      selectedRowsString += selectedRow.Title;\r\n      theRow = selectedRow; \r\n    });\r\n    this.claimsToSend = [];\r\n    selectedRows.forEach(i => { \r\n     \r\n      this.claimsToSend.push(\r\n      {\r\n       'name': i.Title,\r\n       'artist': i.Artist,\r\n       'collective': i.Collective,\r\n       'owner': i.Owner,\r\n       'date': i.Date,\r\n       'status': 'Not Sent'\r\n      });\r\n   });\r\n\r\n\r\n    if (selectedRows.length >= 6) {\r\n      selectedRowsString += ' - and ' + (selectedRows.length - 6) + ' others';\r\n    }\r\n    document.querySelector('#selectedRows').innerHTML = selectedRowsString;\r\n  \r\n  }\r\n\r\nsendToClaim(ev: any): void {\r\n  const data = {section: 'releases', data: this.claimsToSend };\r\n  const dialogRef = this.dialog.open(SendClaimsComponent, {\r\n    data: data,\r\n    width: '80%',\r\n    panelClass: 'formFieldWidth380', \r\n    \r\n  });\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    console.log('The dialog was closed');\r\n  });\r\n}\r\n\r\nsendToPublish(ev: any): void {\r\n  const data = {section: 'releases', data: this.claimsToSend };\r\n  const dialogRef = this.dialog.open(PublishComponent, {\r\n    data: data,\r\n    width: '80%',\r\n    panelClass: 'formFieldWidth380', \r\n    \r\n  });\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    console.log('The dialog was closed');\r\n  });\r\n}\r\n\r\nsendToRegister(ev: any): void {\r\n  const data = {section: 'releases', data: this.claimsToSend };\r\n  const dialogRef = this.dialog.open(RegisterComponent, {\r\n    data: data,\r\n    width: '80%',\r\n    panelClass: 'formFieldWidth380', \r\n    \r\n  });\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    console.log('The dialog was closed');\r\n  });\r\n}\r\n\r\n  listAll() {\r\n\r\n    this.testData.listAll('music-release').pipe(\r\n      tap(() => this.showSpinner = true),\r\n      // delay(500)\r\n    )\r\n      .subscribe(res => {\r\n        this.allItems = res;\r\n        this.showSpinner = false;\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  music-releases-detail works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0cy9tdXNpYy1yZWxlYXNlcy9tdXNpYy1yZWxlYXNlcy1kZXRhaWwvbXVzaWMtcmVsZWFzZXMtZGV0YWlsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-music-releases-detail',\r\n  templateUrl: './music-releases-detail.component.html',\r\n  styleUrls: ['./music-releases-detail.component.scss']\r\n})\r\nexport class MusicReleasesDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n <div>\\r\\n\\r\\n  <mat-card>\\r\\n\\r\\n      <form [formGroup]=\\\"formGroup\\\">\\r\\n    \\r\\n          <dynamic-material-form [group]=\\\"formGroup\\\"\\r\\n                                 [layout]=\\\"formLayout\\\"\\r\\n                                 [model]=\\\"formModel\\\"\\r\\n                                 (blur)=\\\"onBlur($event)\\\"\\r\\n                                 (change)=\\\"onChange($event)\\\"\\r\\n                                 (focus)=\\\"onFocus($event)\\\"\\r\\n                                 (matEvent)=\\\"onMatEvent($event)\\\" \\r\\n                                 fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"40px\\\"\\r\\n                                 ></dynamic-material-form>\\r\\n        \\r\\n\\r\\n      </form>\\r\\n\\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div mat-dialog-actions class=\\\"align-right\\\">\\r\\n      <button mat-button  mat-dialog-close=\\\"cancel\\\">Cancel</button>\\r\\n      <button mat-button [mat-dialog-close]=\\\"data.Name\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Save</button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  <pre>{{formGroup.value | json}}</pre>\\r\\n\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormService, DynamicFormLayout } from '@ng-dynamic-forms/core';\r\n\r\nimport { FormsModule, FormGroup, FormArray, FormBuilder, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { MUSIC_RELEASES_FORM_MODEL } from '../_shared/forms/formModel';\r\nimport { LabelOptions, MAT_LABEL_GLOBAL_OPTIONS, MatDatepicker, MatInput } from '@angular/material';\r\nimport { FORM_LAYOUT } from '../_shared/forms/form.layout';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatButton } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-music-releases-edit',\r\n  templateUrl: './music-releases-edit.component.html',\r\n  styles : [` \r\n  dynamic-material-form[fxLayoutAlign] { padding:10px; padding-left: 25px;}\r\n  `],\r\n})\r\nexport class MusicReleasesEditComponent implements OnInit {\r\nformModel: DynamicFormModel = MUSIC_RELEASES_FORM_MODEL;\r\nformGroup: FormGroup;\r\nformLayout: DynamicFormLayout = FORM_LAYOUT;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.formService.createFormGroup(this.formModel);\r\n    this.formGroup.patchValue(this.data);  \r\n  }\r\n\r\nonBlur($event) {\r\n    console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonChange($event) {\r\n    console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonFocus($event) {\r\n    console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonMatEvent($event) {\r\n    console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport * as pages from './index';\r\n\r\nconst routes: Routes = [\r\n  { path: '', \r\n  component: pages.ReleasesComponent,\r\n  data: {\r\n     breadcrumb: ''\r\n  },\r\n  children: [\r\n    { path: 'tasks', component: pages.TasksComponent,\r\n  data: {\r\n    breadcrumb: 'Tasks'\r\n  }\r\n\r\n  \r\n  },\r\n    { path: 'list', component: pages.ListComponent,\r\n    data: {\r\n      breadcrumb: 'List'\r\n    }\r\n  },\r\n  ] \r\n}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MusicReleasesRoutingModule { }\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<section class=\\\"mt-3\\\" fxLayout=\\\"row wrap\\\"\\r\\nfxLayoutAlign=\\\"start start\\\"\\r\\nfxLayoutGap=\\\"40px\\\"\\r\\nfxFlexFill  >\\r\\n\\r\\n        <button mat-button mat-raised-button [routerLink]=\\\"['list']\\\"  routerLinkActive=\\\"active\\\">\\r\\n            <mat-icon>forward</mat-icon> List\\r\\n          </button> \\r\\n\\r\\n          <button mat-button mat-raised-button [routerLink]=\\\"['tasks']\\\"  routerLinkActive=\\\"active\\\">\\r\\n              <mat-icon>forward</mat-icon> Tasks\\r\\n            </button> \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n </section>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap, tap, delay } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IMusicRelease } from 'src/app/_models/classes/musicRelease';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { PageTitleService } from 'src/app/services/page-title.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MusicReleasesEditComponent } from './music-releases-edit/music-releases-edit.component';\r\nimport { TestDataService } from 'src/app/services/test-data.service';\r\nimport { MatInputComponent, MatButtonComponent } from 'src/app/_shared/components';\r\nimport { Animations } from 'src/app/_shared/animations';\r\n\r\nimport { SendClaimsComponent } from 'src/app/claims/send-claims/send-claims.component';\r\nimport { RegisterNewReleaseComponent } from './register-new-release/register-new-release.component';\r\nimport { PublishComponent } from './publish/publish.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { RouteData } from 'src/app/_models/classes/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: 'music-releases.component.html',\r\n  styles: [` \r\n  dynamic-material-form[fxLayoutAlign] { padding:10px; padding-left: 25px;}\r\n  `],\r\n  animations: [Animations.kendraAnimations]\r\n})\r\nexport class ReleasesComponent implements OnInit {\r\n  public gridOptions: GridOptions;\r\n  entityTypes$;\r\n  selectedType;\r\n  entityList$;\r\n  selectedEntity$;\r\n  listAll$;\r\n  showSpinner: boolean;\r\n  allItems: IMusicRelease[];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  claimsToSend: Array<any>;\r\n  newReleases: any[] = [];    // TODO  Type Me\r\n  routeData: RouteData;\r\n\r\n  constructor(\r\n    private readonly testData: TestDataService,\r\n    private readonly pageTitle: PageTitleService,\r\n    public dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.routeData = this.route.snapshot.data;\r\n    this.gridOptions = <GridOptions>{\r\n      onGridReady: () => {\r\n        //   this.gridOptions.api.sizeColumnsToFit();\r\n      },\r\n      rowHeight: 48,\r\n      frameworkComponents: {\r\n        inputRenderer: MatInputComponent,\r\n        thing: MatButtonComponent\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.claimsToSend = [];\r\n    this.pageTitle.setTitle(this.routeData.pageTitle);   \r\n    this.entityTypes$ = this.testData.listEntityTypes();\r\n    this.entityList$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listEntities(type))\r\n    );\r\n    this.selectedEntity$ = new Subject<number>().pipe(\r\n      switchMap(id => this.testData.getEntity(this.selectedType, id))\r\n    );\r\n    this.listAll$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listAll(type))\r\n    );\r\n    this.listAll();\r\n  }\r\n\r\n  countryCellRenderer(params) {\r\n    const flag = '<img border=\\'0\\' width=\\'15\\' height=\\'10\\' style=\\'margin-bottom: 2px\\' src=\\'https://www.ag-grid.com/images/flags/gb.png\\'>';\r\n    return flag + ' ' + params.value;\r\n    // return this.thing;\r\n  }\r\n\r\n  editBtnCellRenderer(params) {\r\n    const btn = '<button class=\"mat-button mat-raised-button\"><span class=\"mat-button-wrapper\">Edit</span><div class=\"mat-button-ripple mat-ripple\"></div><div class=\"mat-button-focus-overlay\"></div></button>';\r\n    return btn;\r\n  }\r\n\r\n\r\n  changeEntityType(type) {\r\n    this.selectedType = type;\r\n    this.entityList$.next(type);\r\n  }\r\n\r\n  changeEntity(id) {\r\n    this.selectedEntity$.next(id);\r\n  }\r\n  onCellClicked(ev: any) {\r\n    if (ev.colDef.headerName === 'Actions') {\r\n      this.openDialog(ev.data);\r\n    }\r\n  }\r\n\r\n  openDialog(ev: any): void {\r\n    let dialogRef = this.dialog.open(MusicReleasesEditComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  openAddNewDialog(ev?: any): void {\r\n    let dialogRef = this.dialog.open(RegisterNewReleaseComponent, {\r\n      data: 'ev',\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result !== 'cancel') {\r\n        this.addItemToGrid(result);\r\n      }\r\n    });\r\n  }\r\n  addItemToGrid(result: any): any {\r\n    const r = {\r\n      'type': 'music-release',\r\n      'Title': result.recordingTitle,\r\n      'Artist': result.bandArtistName,\r\n      'Date': result.date,\r\n      'Owner': 'owner',\r\n      'Territory': 'Europe',\r\n      'Type': result.genere,\r\n      'Format': result.format,\r\n      'Catalogue Number': '',\r\n      'Barcode': '',\r\n      'Number of tracks': '1',\r\n      'Distribution': '',\r\n      'Collective': '',\r\n      'Submitted to': ''\r\n    }\r\n\r\n    // this.allItems.push(r);\r\n\r\n    // this.gridOptions.api.updateRowData({add: [r]});\r\n    this.gridOptions.api.updateRowData({ add: [r], addIndex: 0 });\r\n    // printResult(res);\r\n  }\r\n\r\n  onSelectionChanged(ev) {\r\n    this.gridApi = ev.api;\r\n\r\n    const selectedRows = this.gridApi.getSelectedRows();\r\n    let selectedRowsString = '';\r\n    let theRow;\r\n    selectedRows.forEach(function (selectedRow, index) {\r\n      if (index > 5) {\r\n        return;\r\n      }\r\n      if (index !== 0) {\r\n        selectedRowsString += ', ';\r\n      }\r\n      selectedRowsString += selectedRow.Title;\r\n      theRow = selectedRow;\r\n    });\r\n    this.claimsToSend = [];\r\n    selectedRows.forEach(i => {\r\n\r\n      this.claimsToSend.push(\r\n        {\r\n          'name': i.Title,\r\n          'artist': i.Artist,\r\n          'collective': i.Collective,\r\n          'owner': i.Owner,\r\n          'date': i.Date,\r\n          'status': 'Not Sent'\r\n        });\r\n    });\r\n\r\n\r\n    if (selectedRows.length >= 6) {\r\n      selectedRowsString += ' - and ' + (selectedRows.length - 6) + ' others';\r\n    }\r\n    document.querySelector('#selectedRows').innerHTML = selectedRowsString;\r\n\r\n  }\r\n\r\n  sendToClaim(ev: any): void {\r\n    const data = { section: 'releases', data: this.claimsToSend };\r\n    const dialogRef = this.dialog.open(SendClaimsComponent, {\r\n      data: data,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380',\r\n\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  sendToPublish(ev: any): void {\r\n    const data = { section: 'releases', data: this.claimsToSend };\r\n    const dialogRef = this.dialog.open(PublishComponent, {\r\n      data: data,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380',\r\n\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  sendToRegister(ev: any): void {\r\n    const data = { section: 'releases', data: this.claimsToSend };\r\n    const dialogRef = this.dialog.open(RegisterComponent, {\r\n      data: data,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380',\r\n\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  listAll() {\r\n\r\n    this.testData.listAll('music-release').pipe(\r\n      tap(() => this.showSpinner = true),\r\n      // delay(500)\r\n    )\r\n      .subscribe(res => {\r\n        this.allItems = res;\r\n        this.showSpinner = false;\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\n\r\nimport { AppMaterialModule } from '../../app-material/app-material.module';\r\n\r\nimport { MusicReleasesRoutingModule } from './music-releases-routing.module';\r\nimport { ReleasesComponent, \r\n  MusicReleasesEditComponent,\r\n   MusicReleasesDetailComponent, \r\n   RegisterNewReleaseComponent,\r\n   PublishComponent,\r\n   RegisterComponent,\r\n   TasksComponent,\r\n  ListComponent\r\n  } from './';\r\n\r\nimport {AgGridModule} from 'ag-grid-angular';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SharedModule } from '../../_shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ReleasesComponent, \r\n    MusicReleasesEditComponent, \r\n    MusicReleasesDetailComponent, \r\n    RegisterNewReleaseComponent, \r\n    PublishComponent, RegisterComponent, \r\n    TasksComponent, \r\n    ListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MusicReleasesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DynamicFormsMaterialUIModule,\r\n    AppMaterialModule,\r\n    AgGridModule.withComponents(\r\n      [\r\n        // MatInputComponent\r\n      ]\r\n  ),\r\n  FlexLayoutModule,\r\n\r\n  // .withConfig({\r\n  //   useColumnBasisZero: false,\r\n  //   printWithBreakpoints: ['md', 'lt-lg', 'lt-xl', 'gt-sm', 'gt-xs']\r\n  // }),\r\n  ],\r\n  exports: [\r\n    SharedModule,\r\n    PublishComponent, RegisterComponent\r\n  ],\r\n  \r\n  entryComponents: [   \r\n    RegisterNewReleaseComponent,\r\n    PublishComponent,\r\n    RegisterComponent,\r\n    MusicReleasesEditComponent\r\n    \r\n   ]\r\n})\r\nexport class MusicReleasesModule { }\r\n","module.exports = \"<!-- <pre> {{ data | json }}</pre>  -->\\r\\n\\r\\n\\r\\n<h2>Publish/Distribute Your Release</h2>\\r\\nPlease be sure all info is correct before starting the distribution process.\\r\\n<div *ngIf=\\\"!nextStep\\\" mat-dialog-content >\\r\\n<section>\\r\\n  <div class=\\\"mt-3\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start stretch\\\" mat-dialog-content >\\r\\n\\r\\n    <mat-card *ngFor=\\\"let item of data.data; let i = index;\\\">\\r\\n      <mat-card-header>\\r\\n\\r\\n        <mat-card-title>Release {{i+1}} / {{data.length}}</mat-card-title>\\r\\n        <mat-card-subtitle>{{item.name}}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        Artist: {{item.artist}}<br>\\r\\n        Collective: {{item.collective}}<br>\\r\\n        Owner: {{item.owner}}<br>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions>\\r\\n        <button mat-mini-fab matTooltip=\\\"Remove from Claim\\\" (click)=\\\"removeClaim(i)\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n        <button mat-mini-fab matTooltip=\\\"Edit\\\" (click)=\\\"removeClaim(i)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button mat-dialog-close=\\\"cancel\\\">Cancel</button>\\r\\n    <button mat-button mat-raised-button (click)=\\\"onNextStep()\\\">Distribute</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"nextStep && enabled.length\\\"  fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start end\\\" >\\r\\n\\r\\n<section class=\\\"my-5\\\"  mat-dialog-content  fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n<div>\\r\\n    You are about to post your Releases to the following platforms: \\r\\n    <mat-list>\\r\\n      <mat-list-item  *ngFor=\\\"let item of enabled; let i = index;\\\" ><b>{{item | uppercase}}</b></mat-list-item>\\r\\n    </mat-list>\\r\\n   To add more Platforms please enable more <a [routerLink]=\\\"[ '/adapters' ]\\\">Adapters</a> \\r\\n</div>\\r\\n\\r\\n\\r\\n  <div [@enterLeaveInOut-2]=\\\"data\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start stretch\\\">\\r\\n    <mat-card *ngFor=\\\"let item of data.data; let i = index;\\\">\\r\\n      <mat-icon mat-list-icon>library_music</mat-icon>\\r\\n      <h6 mat-line>{{item.name}}</h6>\\r\\n      <p mat-line> {{item.artist}} </p>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button mat-dialog-close=\\\"cancel\\\">Close</button>\\r\\n    <button mat-button mat-raised-button mat-dialog-close=\\\"next\\\" (click)=\\\"nextClaimStep3(data.section)\\\">Continue</button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"enabled.length === 0\\\">\\r\\n<h2>You need to enable your   <a mat-dialog-close=\\\"true\\\" [routerLink]=\\\"[ '/adapters' ]\\\">Adapters</a> before continuing </h2>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"my-5\\\"  mat-dialog-content > \\r\\n\\r\\n \\r\\n<table class=\\\"table table-sm\\\" [@enterLeaveInOut-3]=\\\"dataSource\\\"> \\r\\n  <tr *ngFor=\\\"let item of dataSource\\\">\\r\\n        <td  style=\\\"width:80px\\\"> <mat-chip>{{item.step}}</mat-chip>  </td> \\r\\n        <td><b>{{item.name}}</b></td>\\r\\n        <td style=\\\"min-width:200px\\\">   <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{item.percentComplete}}\\\">\\r\\n            \\r\\n          </mat-progress-bar></td>\\r\\n        <td><i class=\\\"material-icons\\\" matTooltip=\\\"Awaiting response\\\">\\r\\n            {{item.icon}} \\r\\n            </i> </td>\\r\\n    </tr>\\r\\n  </table>\\r\\n   \\r\\n\\r\\n\\r\\n</div>\"","module.exports = \".mat-chip.mat-standard-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87);\\n  border-radius: 16px;\\n  padding: 2px;\\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\\n  display: inline-flex;\\n  padding: 7px 12px;\\n  border-radius: 16px;\\n  align-items: center;\\n  cursor: default;\\n  min-height: 32px;\\n  height: 1px; }\\n\\n.mat-cell {\\n  padding: 6px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXNzZXRzL211c2ljLXJlbGVhc2VzL3B1Ymxpc2gvQzpcXFVzZXJzXFxUaW1cXGtlbmRyYWlvLWFwcC9zcmNcXGFwcFxcYXNzZXRzXFxtdXNpYy1yZWxlYXNlc1xccHVibGlzaFxccHVibGlzaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBCQUF5QjtFQUN6QiwyQkFBMEI7RUFDMUIsb0JBQW1CO0VBQ25CLGFBQVk7RUFDWiwwREFBb0Q7RUFDcEQscUJBQW9CO0VBQ3BCLGtCQUFpQjtFQUNqQixvQkFBbUI7RUFDbkIsb0JBQW1CO0VBQ25CLGdCQUFlO0VBQ2YsaUJBQWdCO0VBQ2hCLFlBQVcsRUFDZDs7QUFDRDtFQUNBLGFBQVksRUFDWCIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0cy9tdXNpYy1yZWxlYXNlcy9wdWJsaXNoL3B1Ymxpc2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNoaXAubWF0LXN0YW5kYXJkLWNoaXAge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UwZTBlMDtcclxuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTZweDtcclxuICAgIHBhZGRpbmc6IDJweDtcclxuICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMjgwbXMgY3ViaWMtYmV6aWVyKC40LDAsLjIsMSk7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICAgIHBhZGRpbmc6IDdweCAxMnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTZweDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgICBtaW4taGVpZ2h0OiAzMnB4O1xyXG4gICAgaGVpZ2h0OiAxcHg7XHJcbn1cclxuLm1hdC1jZWxsIHtcclxucGFkZGluZzogNnB4O1xyXG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MatButton, MatDialog, MatDialogClose } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { Animations } from 'src/app/_shared/animations';\r\nimport { AdaptersService } from 'src/app/services/adapters.service';\r\n\r\nexport interface DistributionProgress {\r\n  name: string;\r\n  step: number;\r\n  percentComplete: number;\r\n  icon: string;\r\n}\r\n\r\nlet PROGRESS_DATA: DistributionProgress[] = [\r\n  {step: 1, name: 'Releases Selected', percentComplete: 100, icon: 'done'},\r\n  {step: 2, name: 'Data confirmed', percentComplete: 100, icon: 'done'},\r\n\r\n];\r\n\r\n@Component({\r\n  selector: 'app-publish',\r\n  templateUrl: './publish.component.html',\r\n  styleUrls: ['./publish.component.scss'],\r\n  animations: [Animations.kendraAnimations]\r\n})\r\nexport class PublishComponent implements OnInit {  \r\n  nextStep = false;\r\n  displayedColumns: string[] = ['step', 'name', 'percentComplete', 'icon'];\r\n  dataSource = [] ;\r\n  nextDataSource = [] ;\r\n  \r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private readonly router: Router,\r\n    private readonly adapters: AdaptersService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    PROGRESS_DATA = [\r\n      {step: 1, name: 'Releases Selected', percentComplete: 100, icon: 'done'},\r\n      {step: 2, name: 'Data confirmed', percentComplete: 100, icon: 'done'},    \r\n    ];\r\n    this.dataSource = [];\r\n    this.nextDataSource = [];\r\n    this.dataSource = PROGRESS_DATA;  \r\n  }\r\n// Object.keys(adapters);\r\n  get enabled() { return Object.keys(this.adapters.enabledAdapters); }\r\n  \r\n  onNextStep() {\r\n    this.nextDataSource = [];\r\n    this.nextDataSource = PROGRESS_DATA;  \r\n    this.enabled.forEach(input => {\r\n      this.nextDataSource.push(  {\r\n        step: this.nextDataSource.length + 1, \r\n        name: 'Sent to: ' + input, \r\n        percentComplete: this.nextDataSource.length * 3, \r\n        icon: 'schedule'});\r\n    });\r\n    this.nextStep = true;\r\n    this.dataSource = [];\r\n this.dataSource = this.nextDataSource;\r\n  }\r\n\r\n  nextClaimStep3(section: string) {\r\n\r\n  //  localStorage.setItem(section, JSON.stringify(this.data.data));\r\n   // this.router.navigate(['/claims']);\r\n\r\n  }\r\n\r\n  removeClaim(i) {\r\n    this.data.splice(i, 1);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n\\r\\n  <p>\\r\\n introduction about registering a new Release here</p>\\r\\n  \\r\\n    <mat-card>\\r\\n  \\r\\n        <form [formGroup]=\\\"formGroup\\\">\\r\\n      \\r\\n            <dynamic-material-form [group]=\\\"formGroup\\\"\\r\\n                                   [layout]=\\\"formLayout\\\"\\r\\n                                   [model]=\\\"formModel\\\"\\r\\n                                   (blur)=\\\"onBlur($event)\\\"\\r\\n                                   (change)=\\\"onChange($event)\\\"\\r\\n                                   (focus)=\\\"onFocus($event)\\\"\\r\\n                                   (matEvent)=\\\"onMatEvent($event)\\\" \\r\\n                                   fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"40px\\\"\\r\\n                                   ></dynamic-material-form>\\r\\n  \\r\\n        </form>  \\r\\n    </mat-card>\\r\\n  \\r\\n\\r\\n    <div mat-dialog-actions class=\\\"align-right\\\">\\r\\n        <button mat-button  mat-dialog-close=\\\"cancel\\\">Cancel</button>\\r\\n        <button  mat-raised-button [mat-dialog-close]=\\\"formGroup.value\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Register</button>\\r\\n        <button  mat-raised-button [mat-dialog-close]=\\\"formGroup.value\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Distribute</button>\\r\\n        <button  mat-raised-button [mat-dialog-close]=\\\"formGroup.value\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Save</button>\\r\\n      </div>\\r\\n  \\r\\n  <!-- <p>You’ll be given a reference when you submit your work details, followed by a unique tune code for each work.</p> -->\\r\\n  \\r\\n  </div>\\r\\n\\r\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0cy9tdXNpYy1yZWxlYXNlcy9yZWdpc3Rlci1uZXctcmVsZWFzZS9yZWdpc3Rlci1uZXctcmVsZWFzZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormLayout, DynamicFormService } from '@ng-dynamic-forms/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { RELEASE_REGISTER_FORM_MODEL } from '../_shared/forms/registerNewRelease';\r\n\r\n@Component({\r\n  selector: 'app-register-new-release',\r\n  templateUrl: './register-new-release.component.html',\r\n  styleUrls: ['./register-new-release.component.scss']\r\n})\r\nexport class RegisterNewReleaseComponent implements OnInit {\r\n  formModel: DynamicFormModel = RELEASE_REGISTER_FORM_MODEL;\r\n  formGroup: FormGroup;\r\n  //formLayout: DynamicFormLayout = WORKS_FORM_LAYOUT;\r\n  formLayout = {};\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.formService.createFormGroup(this.formModel);\r\n    this.formGroup.patchValue(this.data); \r\n  }\r\n\r\n  onBlur($event) {\r\n    console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonChange($event) {\r\n    console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonFocus($event) {\r\n    console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonMatEvent($event) {\r\n    console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n}\r\n}\r\n","module.exports = \"<!-- <pre> {{ data | json }}</pre>  -->\\r\\n\\r\\n\\r\\n<h1>Register Your Release</h1>\\r\\nPlease be sure all info is correct before starting the distribution process.\\r\\n<div *ngIf=\\\"!nextStep\\\" >\\r\\n<section mat-dialog-content >\\r\\n  <div class=\\\"mt-4\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start stretch\\\" mat-dialog-content >\\r\\n\\r\\n    <mat-card *ngFor=\\\"let item of data.data; let i = index;\\\">\\r\\n      <mat-card-header>\\r\\n\\r\\n        <mat-card-title>Release {{i+1}} / {{data.length}}</mat-card-title>\\r\\n        <mat-card-subtitle>{{item.name}}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        Artist: {{item.artist}}<br>\\r\\n        Collective: {{item.collective}}<br>\\r\\n        Owner: {{item.owner}}<br>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions>\\r\\n        <button mat-mini-fab matTooltip=\\\"Remove from Claim\\\" (click)=\\\"removeClaim(i)\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n        <button mat-mini-fab matTooltip=\\\"Edit\\\" (click)=\\\"removeClaim(i)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button mat-dialog-close=\\\"cancel\\\">Cancel</button>\\r\\n    <button mat-button mat-raised-button (click)=\\\"onNextStep()\\\">Register</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"nextStep && enabled.length\\\"  fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start end\\\" >\\r\\n\\r\\n<section class=\\\"my-5\\\"  mat-dialog-content  fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n<div>\\r\\n    You are about to post your Releases to the following CMOs: \\r\\n    <mat-list>\\r\\n      <mat-list-item><b>PRS</b></mat-list-item>\\r\\n      <mat-list-item><b>PPL</b></mat-list-item>\\r\\n    </mat-list>\\r\\n   To add more CMOs please enable more <a [routerLink]=\\\"[ '/adapters' ]\\\">Adapters</a> \\r\\n</div>\\r\\n\\r\\n\\r\\n  <div [@enterLeaveInOut-2]=\\\"data\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start stretch\\\">\\r\\n    <mat-card *ngFor=\\\"let item of data.data; let i = index;\\\">\\r\\n      <mat-icon mat-list-icon>library_music</mat-icon>\\r\\n      <h6 mat-line>{{item.name}}</h6>\\r\\n      <p mat-line> {{item.artist}} </p>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button mat-dialog-close=\\\"cancel\\\">Close</button>\\r\\n    <button mat-button mat-raised-button mat-dialog-close=\\\"next\\\" (click)=\\\"nextClaimStep3(data.section)\\\">Continue</button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"enabled.length === 0\\\">\\r\\n    <h2>You need to enable your   <a mat-dialog-close=\\\"true\\\" [routerLink]=\\\"[ '/adapters' ]\\\">CMO Adapters</a> before continuing </h2>    \\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0cy9tdXNpYy1yZWxlYXNlcy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MatButton, MatDialog, MatDialogClose } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { Animations } from 'src/app/_shared/animations';\r\nimport { AdaptersService } from 'src/app/services/adapters.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n  animations: [Animations.kendraAnimations]\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  nextStep = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private readonly router: Router,\r\n    private readonly adapters: AdaptersService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n// Object.keys(adapters);\r\n  get enabled() { return Object.keys(this.adapters.enabledAdapters); }\r\n  onNextStep() {\r\n    console.log(this.data);\r\n    this.nextStep = true;\r\n  }\r\n\r\n  nextClaimStep3(section: string) {\r\n\r\n  //  localStorage.setItem(section, JSON.stringify(this.data.data));\r\n   // this.router.navigate(['/claims']);\r\n\r\n  }\r\n\r\n  removeClaim(i) {\r\n    this.data.splice(i, 1);\r\n  }\r\n\r\n}","module.exports = \"\\r\\n\\r\\n\\r\\n<table class=\\\"table table-sm\\\"> \\r\\n    <tr *ngFor=\\\"let item of dataSource\\\">\\r\\n          <td  style=\\\"width:80px\\\"> <mat-chip>{{item.step}}</mat-chip>  </td> \\r\\n          <td><b>{{item.name}}</b></td>\\r\\n          <td style=\\\"min-width:200px\\\">   <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{item.percentComplete}}\\\">\\r\\n              \\r\\n            </mat-progress-bar></td>\\r\\n          <td><i class=\\\"material-icons\\\" matTooltip=\\\"Awaiting response\\\">\\r\\n              {{item.icon}} \\r\\n              </i> </td>\\r\\n      </tr>\\r\\n    </table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0cy9tdXNpYy1yZWxlYXNlcy90YXNrcy90YXNrcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MatButton, MatDialog, MatDialogClose } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { AdaptersService } from 'src/app/services/adapters.service';\r\n\r\n\r\nexport interface RelDistributionProgress {\r\n  name: string;\r\n  step: number;\r\n  percentComplete: number;\r\n  icon: string;\r\n}\r\n\r\nlet PROGRESS_DATA: RelDistributionProgress[] = [\r\n  {step: 1, name: 'Releases Selected', percentComplete: 100, icon: 'done'},\r\n  {step: 2, name: 'Data confirmed', percentComplete: 100, icon: 'done'},\r\n\r\n];\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.scss']\r\n})\r\nexport class TasksComponent implements OnInit {\r\n  nextStep = false;\r\n  displayedColumns: string[] = ['step', 'name', 'percentComplete', 'icon'];\r\n  dataSource = [] ;\r\n  nextDataSource = [] ;\r\n  \r\n\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private readonly router: Router,\r\n    private readonly adapters: AdaptersService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    PROGRESS_DATA = [\r\n      {step: 1, name: 'Releases Selected', percentComplete: 100, icon: 'done'},\r\n      {step: 2, name: 'Data confirmed', percentComplete: 100, icon: 'done'},    \r\n    ];\r\n    this.dataSource = [];\r\n    this.nextDataSource = [];\r\n    this.dataSource = PROGRESS_DATA;  \r\n    this.onNextStep();\r\n  }\r\n\r\n  get enabled() { return Object.keys(this.adapters.enabledAdapters); }\r\n  \r\n  onNextStep() {\r\n    this.nextDataSource = [];\r\n    this.nextDataSource = PROGRESS_DATA;  \r\n    this.enabled.forEach(input => {\r\n      this.nextDataSource.push(  {\r\n        step: this.nextDataSource.length + 1, \r\n        name: 'Sent to: ' + input, \r\n        percentComplete: this.nextDataSource.length * 3, \r\n        icon: 'schedule'});\r\n    });\r\n    this.nextStep = true;\r\n    this.dataSource = [];\r\n this.dataSource = this.nextDataSource;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}