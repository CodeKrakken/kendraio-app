{"version":3,"sources":["webpack:///./src/app/music-releases/_shared/forms/form.layout.ts","webpack:///./src/app/music-releases/_shared/forms/formModel.ts","webpack:///./src/app/music-releases/index.ts","webpack:///./src/app/music-releases/index/index.component.html","webpack:///./src/app/music-releases/index/index.component.ts","webpack:///./src/app/music-releases/music-releases-detail/music-releases-detail.component.html","webpack:///./src/app/music-releases/music-releases-detail/music-releases-detail.component.scss","webpack:///./src/app/music-releases/music-releases-detail/music-releases-detail.component.ts","webpack:///./src/app/music-releases/music-releases-edit/music-releases-edit.component.html","webpack:///./src/app/music-releases/music-releases-edit/music-releases-edit.component.ts","webpack:///./src/app/music-releases/music-releases-routing.module.ts","webpack:///./src/app/music-releases/music-releases.module.ts"],"names":[],"mappings":"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","file":"music-releases-music-releases-module.js","sourcesContent":["export const FORM_LAYOUT = {\r\n\r\n    'Ownerx': {\r\n        element: {\r\n            host: 'col-sm-4'\r\n        }\r\n    }\r\n};\r\n","\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const MUSIC_RELEASES_FORM_MODEL = [\r\n\r\n    // new DynamicFormGroupModel({\r\n\r\n    //     id: 'stay',\r\n    //     group: [\r\n    //         new DynamicDatePickerModel({\r\n\r\n    //             id: 'arrivalDate',\r\n    //             inline: false,\r\n    //             placeholder: 'Date of Arrival'\r\n    //         }),\r\n\r\n    //         new DynamicDatePickerModel({\r\n    //             id: 'departureDate',\r\n    //             inline: false,\r\n    //             placeholder: 'Date of Departure'\r\n    //         })\r\n    //     ],\r\n    //     // validators: {\r\n    //     //     customDateRangeValidator: null\r\n    //     // },\r\n    //     // errorMessages: {\r\n    //     //     customDateRangeValidator: 'Invalid period of time selected'\r\n    //     // }\r\n    // }),\r\n\r\n    // new DynamicFormGroupModel({\r\n\r\n    //     id: 'room',\r\n    //     group: [\r\n    //         new DynamicSelectModel<string>({\r\n\r\n    //             id: 'roomSize',\r\n    //             placeholder: 'Room Size',\r\n    //             hint: 'Choose a room type',\r\n    //             options: [\r\n    //                 {\r\n    //                     label: 'Single Room',\r\n    //                     value: 'single-room'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Double Room',\r\n    //                     value: 'double-room'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Business Suite',\r\n    //                     value: 'business-suite'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Presidential Suite',\r\n    //                     value: 'presidential-suite'\r\n    //                 },\r\n    //                 {\r\n    //                     label: 'Storeroom',\r\n    //                     value: 'storeroom'\r\n    //                 }\r\n    //             ]\r\n    //         }),\r\n\r\n    //         new DynamicInputModel({\r\n\r\n    //             id: 'roomQuantity',\r\n    //             inputType: 'number',\r\n    //             placeholder: 'Room Quantity',\r\n    //             hint: 'Maximum: 5',\r\n    //             max: 5,\r\n    //             min: 0\r\n    //         })\r\n    //     ]\r\n    // }),\r\n\r\n\r\n\r\n\r\n\r\n    new DynamicInputModel({\r\n        id: 'Title',\r\n        maxLength: 25,\r\n        placeholder: 'Title of Recording',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n        id: 'Artist',\r\n        maxLength: 50,\r\n        placeholder: 'Name of Artist',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n    \r\n    new DynamicInputModel({\r\n        id: 'Barcode',\r\n        maxLength: 150,\r\n        placeholder: 'Barcode'\r\n\r\n    }),\r\n    \r\n    new DynamicInputModel({\r\n        id: 'Catalogue Number',\r\n        maxLength: 50,\r\n        placeholder: 'Catalogue Number'\r\n    }),\r\n    \r\n    new DynamicInputModel({\r\n        id: 'Collective',\r\n        maxLength: 50,\r\n        placeholder: 'Collective'\r\n    }),\r\n    \r\n    new DynamicInputModel({\r\n        id: 'Date',\r\n        placeholder: 'Date'\r\n    }),\r\n    \r\n\r\n\r\n    new DynamicInputModel({\r\n        id: 'Distribution',\r\n        maxLength: 50,\r\n        placeholder: 'Distribution'\r\n    }),\r\n    \r\n    \r\n    new DynamicInputModel({\r\n        id: 'Format',\r\n        maxLength: 10,\r\n        placeholder: 'Format'\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n        id: 'Number of tracks',\r\n        maxLength: 3,\r\n        placeholder: 'Number of tracks'\r\n    }),\r\n    new DynamicInputModel({\r\n        id: 'Owner',\r\n        maxLength: 50,\r\n        placeholder: 'Owner',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n    new DynamicInputModel({\r\n        id: 'Territory',\r\n        maxLength: 50,\r\n        placeholder: 'Territory'\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n        id: 'Type',\r\n        maxLength: 50,\r\n        placeholder: 'Type'\r\n    }),\r\n    new DynamicInputModel({\r\n        id: 'Submitted to',\r\n        placeholder: 'Submitted to'\r\n    }),\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // new DynamicSwitchModel({\r\n\r\n    //     id: 'reminder',\r\n    //     offLabel: 'Send me a reminder',\r\n    //     onLabel: 'Send me a reminder',\r\n    //     value: false\r\n\r\n    // }),\r\n\r\n    // new DynamicSwitchModel({\r\n\r\n    //     id: 'updates',\r\n    //     offLabel: 'Subscribe to Updates',\r\n    //     onLabel: 'Subscribe to Updates',\r\n    //     value: false\r\n    // }),\r\n\r\n    // new DynamicCheckboxModel({\r\n    //     id: 'confirm',\r\n    //     label: 'I confirm the information given above',\r\n    //     validators: {\r\n    //         required: null\r\n    //     },\r\n    //     errorMessages: {\r\n    //         required: 'You must confirm....'\r\n    //     }\r\n    // })\r\n];\r\n","\r\nexport * from './index/index.component';\r\nexport * from './music-releases-detail/music-releases-detail.component';\r\nexport * from './music-releases-edit/music-releases-edit.component';\r\n\r\n","module.exports = \"<mat-progress-bar *ngIf=\\\"showSpinner\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"table-responsive-lg\\\" @enterAnimateUpDwn>\\r\\n  <ag-grid-angular #agGrid style=\\\"width: 100%; height: 700px;\\\" class=\\\"ag-theme-material\\\" \\r\\n                  [gridOptions]=\\\"gridOptions\\\"\\r\\n                  [frameworkComponents]=\\\"gridOptions.frameworkComponents\\\"\\r\\n                  [rowData]=\\\"allItems\\\" \\r\\n                  animateRows=\\\"true\\\"  \\r\\n                  (cellClicked)=\\\"onCellClicked($event)\\\" \\r\\n                  rowSelection=\\\"multiple\\\" \\r\\n                  (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n                  animateRows=\\\"true\\\"\\r\\n                  >\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Releases\\\">\\r\\n      <ag-grid-column headerName=\\\"#\\\" [width]=\\\"80\\\" [checkboxSelection]=\\\"true\\\" [suppressMenu]=\\\"false\\\" [pinned]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Actions\\\" [width]=\\\"100\\\" [pinned]=\\\"true\\\" [cellRenderer]=\\\"editBtnCellRenderer\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Title\\\" field=\\\"Title\\\" [width]=\\\"175\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"\\r\\n        [cellEditorFramework]=\\\"gridOptions.frameworkComponents.inputRenderer\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        ></ag-grid-column>\\r\\n        \\r\\n      <ag-grid-column headerName=\\\"Artist\\\" field=\\\"Artist\\\" [width]=\\\"120\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"  [editable]=\\\"false\\\"></ag-grid-column>\\r\\n    </ag-grid-column>\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Details\\\">\\r\\n\\r\\n      <ag-grid-column \\r\\n      headerName=\\\"Date\\\" field=\\\"Date\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Owner\\\" field=\\\"Owner\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Date\\\" field=\\\"Date\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Territory\\\" field=\\\"Territory\\\" [width]=\\\"100\\\" [cellRenderer]=\\\"countryCellRenderer\\\"\\r\\n        [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Type\\\" field=\\\"Type\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Format\\\" field=\\\"Format\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Catalogue Number\\\" field=\\\"Catalogue Number\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\"\\r\\n        [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Barcode\\\" field=\\\"Barcode\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"#tracks\\\" field=\\\"Number of tracks\\\" [width]=\\\"50\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Distribution\\\" field=\\\"Distribution\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Collective\\\" field=\\\"Collective\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n      <ag-grid-column headerName=\\\"Submitted to\\\" field=\\\"Submitted to\\\" [width]=\\\"150\\\" [pinned]=\\\"false\\\" [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n    </ag-grid-column>\\r\\n  </ag-grid-angular>\\r\\n\\r\\n  <mat-action-list *ngIf=\\\"claimsToSend.length > 0\\\">  \\r\\n    <button mat-raised-button mat-button (click)=\\\"sendToClaim($event)\\\">Claim Selected</button>\\r\\n     </mat-action-list> \\r\\n     <div>Selection: <span id=\\\"selectedRows\\\">...</span></div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap, tap, delay } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IMusicRelease } from 'src/app/_models/classes/musicRelease';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { PageTitleService } from 'src/app/services/page-title.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MusicReleasesEditComponent } from '../music-releases-edit/music-releases-edit.component';\r\nimport { TestDataService } from '../../services/test-data.service';\r\nimport { MatInputComponent, MatButtonComponent } from 'src/app/_shared/components';\r\nimport { Animations } from '../../_shared/animations';\r\n\r\nimport { SendClaimsComponent } from 'src/app/claims/send-claims/send-claims.component';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styles: [` \r\n  dynamic-material-form[fxLayoutAlign] { padding:10px; padding-left: 25px;}\r\n  `],\r\n  animations: [Animations.pageAni]\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  public gridOptions: GridOptions;\r\n  entityTypes$;\r\n  selectedType;\r\n  entityList$;\r\n  selectedEntity$;\r\n  listAll$;\r\n  showSpinner: boolean;\r\n  allItems: IMusicRelease[];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  claimsToSend: Array<any>;\r\n \r\n\r\n\r\n  constructor(\r\n    private readonly testData: TestDataService,\r\n    private readonly pageTitle: PageTitleService,\r\n    public dialog: MatDialog,\r\n  ) {\r\n    this.gridOptions = <GridOptions>{\r\n      onGridReady: () => {\r\n       //   this.gridOptions.api.sizeColumnsToFit();\r\n      },\r\n      rowHeight: 48,\r\n      frameworkComponents: {\r\n          inputRenderer: MatInputComponent,\r\n          thing: MatButtonComponent\r\n      }\r\n  };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.claimsToSend = [];\r\n    this.pageTitle.setTitle('Releases');\r\n    this.entityTypes$ = this.testData.listEntityTypes();\r\n\r\n    this.entityList$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listEntities(type))\r\n    );\r\n    this.selectedEntity$ = new Subject<number>().pipe(\r\n      switchMap(id => this.testData.getEntity(this.selectedType, id))\r\n    );\r\n    this.listAll$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listAll(type))\r\n    );\r\n\r\n    this.listAll();\r\n  }\r\n\r\n  countryCellRenderer(params) {\r\n    const flag = \"<img border='0' width='15' height='10' style='margin-bottom: 2px' src='https://www.ag-grid.com/images/flags/gb.png'>\";\r\n    return flag + \" \" + params.value;\r\n    // return this.thing;\r\n  }\r\n\r\n  editBtnCellRenderer(params) {\r\n    const btn = '<button class=\"mat-button mat-raised-button\"><span class=\"mat-button-wrapper\">Edit</span><div class=\"mat-button-ripple mat-ripple\"></div><div class=\"mat-button-focus-overlay\"></div></button>';\r\n    return btn;\r\n  }\r\n  \r\n\r\n  changeEntityType(type) {\r\n    this.selectedType = type;\r\n    this.entityList$.next(type);\r\n  }\r\n\r\n  changeEntity(id) {\r\n    this.selectedEntity$.next(id);\r\n  }\r\n  onCellClicked(ev: any) {\r\n    if (ev.colDef.headerName === 'Actions') {\r\n      this.openDialog(ev.data);\r\n    }\r\n  }\r\n\r\n  openDialog(ev: any): void {\r\n    let dialogRef = this.dialog.open(MusicReleasesEditComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  onSelectionChanged(ev) {\r\n    this.gridApi = ev.api;\r\n\r\n    const selectedRows = this.gridApi.getSelectedRows();\r\n    let selectedRowsString = '';\r\n    let theRow;\r\n    selectedRows.forEach(function(selectedRow, index) {\r\n      if (index > 5) {\r\n        return;\r\n      }\r\n      if (index !== 0) {\r\n        selectedRowsString += ', ';\r\n      \r\n      }\r\n      selectedRowsString += selectedRow.Title;\r\n      theRow = selectedRow; \r\n    });\r\n    this.claimsToSend = [];\r\n    selectedRows.forEach(i=>{ \r\n     \r\n      this.claimsToSend.push(\r\n      {\r\n       'name': i.Title,\r\n       'artist': i.Artist,\r\n       'collective': i.Collective,\r\n       'owner': i.Owner,\r\n       'date': i.Date,\r\n       'status': 'Not Sent'\r\n      });\r\n   });\r\n\r\n\r\n    if (selectedRows.length >= 6) {\r\n      selectedRowsString += ' - and ' + (selectedRows.length - 6) + ' others';\r\n    }\r\n    document.querySelector('#selectedRows').innerHTML = selectedRowsString;\r\n  \r\n  }\r\n\r\nsendToClaim(ev: any): void {\r\n  const data = {section: 'releases', data: this.claimsToSend };\r\n  const dialogRef = this.dialog.open(SendClaimsComponent, {\r\n    data: data,\r\n    width: '80%',\r\n    panelClass: 'formFieldWidth380', \r\n    \r\n  });\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    console.log('The dialog was closed');\r\n  });\r\n}\r\n\r\n  listAll() {\r\n\r\n    this.testData.listAll('music-release').pipe(\r\n      tap(() => this.showSpinner = true),\r\n      // delay(500)\r\n    )\r\n      .subscribe(res => {\r\n        this.allItems = res;\r\n        this.showSpinner = false;\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  music-releases-detail works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXJlbGVhc2VzL211c2ljLXJlbGVhc2VzLWRldGFpbC9tdXNpYy1yZWxlYXNlcy1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-music-releases-detail',\r\n  templateUrl: './music-releases-detail.component.html',\r\n  styleUrls: ['./music-releases-detail.component.scss']\r\n})\r\nexport class MusicReleasesDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n <div>\\r\\n\\r\\n  <mat-card>\\r\\n\\r\\n      <form [formGroup]=\\\"formGroup\\\">\\r\\n    \\r\\n          <dynamic-material-form [group]=\\\"formGroup\\\"\\r\\n                                 [layout]=\\\"formLayout\\\"\\r\\n                                 [model]=\\\"formModel\\\"\\r\\n                                 (blur)=\\\"onBlur($event)\\\"\\r\\n                                 (change)=\\\"onChange($event)\\\"\\r\\n                                 (focus)=\\\"onFocus($event)\\\"\\r\\n                                 (matEvent)=\\\"onMatEvent($event)\\\" \\r\\n                                 fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"40px\\\"\\r\\n                                 ></dynamic-material-form>\\r\\n        \\r\\n\\r\\n      </form>\\r\\n\\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div mat-dialog-actions class=\\\"align-right\\\">\\r\\n      <button mat-button  mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\r\\n      <button mat-button [mat-dialog-close]=\\\"data.Name\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Save</button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  <pre>{{formGroup.value | json}}</pre>\\r\\n\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormService, DynamicFormLayout } from '@ng-dynamic-forms/core';\r\n\r\nimport { FormsModule, FormGroup, FormArray, FormBuilder, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { MUSIC_RELEASES_FORM_MODEL } from '../_shared/forms/formModel';\r\nimport { LabelOptions, MAT_LABEL_GLOBAL_OPTIONS, MatDatepicker, MatInput } from '@angular/material';\r\nimport { FORM_LAYOUT } from '../_shared/forms/form.layout';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatButton } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-music-releases-edit',\r\n  templateUrl: './music-releases-edit.component.html',\r\n  styles : [` \r\n  dynamic-material-form[fxLayoutAlign] { padding:10px; padding-left: 25px;}\r\n  `],\r\n})\r\nexport class MusicReleasesEditComponent implements OnInit {\r\nformModel: DynamicFormModel = MUSIC_RELEASES_FORM_MODEL;\r\nformGroup: FormGroup;\r\nformLayout: DynamicFormLayout = FORM_LAYOUT;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.formService.createFormGroup(this.formModel);\r\n    this.formGroup.patchValue(this.data);  \r\n  }\r\n\r\nonBlur($event) {\r\n    console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonChange($event) {\r\n    console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonFocus($event) {\r\n    console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n}\r\n\r\nonMatEvent($event) {\r\n    console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport * as pages from './index';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: pages.IndexComponent },\r\n  { path: 'edit/:id', component: pages.MusicReleasesEditComponent },\r\n  { path: 'detail/:id', component: pages.MusicReleasesDetailComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MusicReleasesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\n\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\n\r\nimport { MusicReleasesRoutingModule } from './music-releases-routing.module';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { MusicReleasesEditComponent } from './music-releases-edit/music-releases-edit.component';\r\nimport { MusicReleasesDetailComponent } from './music-releases-detail/music-releases-detail.component';\r\n\r\nimport {AgGridModule} from 'ag-grid-angular';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n// import { MatInputComponent } from '../_shared/components';\r\n//  import { MatInputComponent } from \"./mat-input.component\";\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IndexComponent, \r\n    MusicReleasesEditComponent, \r\n    MusicReleasesDetailComponent\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MusicReleasesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DynamicFormsMaterialUIModule,\r\n    AppMaterialModule,\r\n    AgGridModule.withComponents(\r\n      [\r\n        // MatInputComponent\r\n      ]\r\n  ),\r\n  FlexLayoutModule,\r\n\r\n  // .withConfig({\r\n  //   useColumnBasisZero: false,\r\n  //   printWithBreakpoints: ['md', 'lt-lg', 'lt-xl', 'gt-sm', 'gt-xs']\r\n  // }),\r\n  ],\r\n  exports: [\r\n    SharedModule\r\n  ]\r\n})\r\nexport class MusicReleasesModule { }\r\n"],"sourceRoot":""}