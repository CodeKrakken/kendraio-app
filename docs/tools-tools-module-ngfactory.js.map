{"version":3,"sources":["./src/app/_shared/directives/editable-content.ts","./src/app/tools/form-generator/form-generator.component.html","./src/app/tools/form-generator/form-generator.component.ts","./src/app/tools/index.ts","./src/app/tools/tools-routing.module.ts","./src/app/tools/tools.module.ts","./src/app/tools/toolsindex/toolsindex.component.html","./src/app/tools/toolsindex/toolsindex.component.ts"],"names":[],"mappings":"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","file":"tools-tools-module-ngfactory.js","sourcesContent":["import {\r\n    Directive,\r\n    ElementRef,\r\n    Renderer2,\r\n    HostListener,\r\n    forwardRef,\r\n    Input,\r\n    OnInit,\r\n    HostBinding\r\n  } from '@angular/core';\r\n\r\n  import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n  @Directive({\r\n    selector: '[contenteditable]',\r\n    providers:\r\n    [\r\n      { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ContentEditableFormDirective), multi: true }\r\n    ]\r\n  })\r\n  export class ContentEditableFormDirective implements ControlValueAccessor {\r\n    @HostBinding('attr.contenteditable') enabled = true;\r\n\r\n    private onChange: (value: string) => void;\r\n    private onTouched: () => void;\r\n    private removeDisabledState: () => void;\r\n\r\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\r\n\r\n    @HostListener('input') onInput(): void {\r\n        console.log(this.elementRef.nativeElement.innerText)\r\n      this.onChange(this.elementRef.nativeElement.innerText);\r\n    }\r\n\r\n    @HostListener('blur') onBlur(): void {\r\n      this.onTouched();\r\n    }\r\n\r\n    writeValue(value: string): void {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'innerText', value || '');\r\n    }\r\n\r\n    registerOnChange(onChange: (value: string) => void): void {\r\n      this.onChange = onChange;\r\n    }\r\n\r\n    registerOnTouched(onTouched: () => void): void {\r\n      this.onTouched = onTouched;\r\n    }\r\n\r\n    setDisabledState(disabled: boolean): void {\r\n      this.enabled = !disabled;\r\n    }\r\n  }","<div style=\"float: left; width:45%; margin-right: 28px\">\r\n\r\n  <form [formGroup]=\"schemaform\" novalidate>\r\n\r\n    <label for=\"\">JSON Schema - (paste as plain-text!)</label>\r\n    <pre contenteditable=\"true\" formControlName=\"JSONSchema\">\r\n\r\n\r\n</pre>\r\n\r\n\r\n\r\n\r\n    <!-- <label for=\"\"> JSON Schema</label>\r\n    <textarea style=\"width:100%; height:600px\"   name=\"JSONSchema\"  autofocus>\r\n    </textarea> -->\r\n\r\n    <label for=\"\">UI Schema (not working 100%) - (paste as plain-text!)</label>\r\n\r\n    <mat-accordion>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Example UI Schema:\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Copy and Paste the code below\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <pre>\r\n{{uiSchemaDefault | json}}\r\n</pre>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  <pre contenteditable=\"true\" style=\"width:100%; height:400px\" formControlName=\"UISchema\" name=\"UISchema\">\r\n      </pre>\r\n\r\n\r\n    <label for=\"\">Model - (paste as plain-text!)</label>\r\n\r\n    <mat-accordion>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Example Model:\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Copy and Paste the code below\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <pre>\r\n{{egModel | json}}\r\n</pre>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <pre contenteditable=\"true\" style=\"width:100%; height:300px\" formControlName=\"model\" name=\"model\">\r\n        </pre>\r\n\r\n  </form>\r\n</div>\r\n<!-- {{schemaform.value | json}} -->\r\n<div style=\"float: left; width:50%\">\r\n\r\n  <h3>{{formDescription}}</h3>\r\n  <h4>{{formLabel}}</h4>\r\n\r\n  <form [formGroup]=\"form\"  (ngSubmit)=\"submit()\">\r\n    <formly-form [fields]=\"fields\" [options]=\"options\" [model]=\"model\" [form]=\"form\"></formly-form>\r\n    <div *ngIf=\"isValid\">\r\n    <p>Hint: Try changing 'type' to password, date, datepicker, tags etc etc</p>\r\n\r\n    <button type=\"submit\" mat-raised-button color=\"primary\" *ngIf=\"form.valid\">Submit</button>\r\n\r\n\r\n  </div>\r\n    <p></p>\r\n    <div *ngIf=\"!isValid\">\r\n      <h3>JSON not valid!!!</h3>\r\n    </div>\r\n\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap, distinctUntilChanged, debounce, debounceTime } from 'rxjs/operators';\r\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormlyJsonschema } from '@ngx-formly/core/json-schema';\r\nimport { KendraioFormService } from 'src/app/_shared/ui-form/services/kendraio.form.service'\r\n\r\n@Component({\r\n  selector: 'app-form-generator',\r\n  templateUrl: './form-generator.component.html',\r\n  styleUrls: ['./form-generator.component.scss']\r\n})\r\nexport class FormGeneratorComponent implements OnInit {\r\n  isLoading = false;\r\n  schemaform: FormGroup;\r\n  formChanges$: Observable<any>;\r\n  private subscription: Subscription;\r\n  model: any = {\r\n    bandArtist: 'The Forest',\r\n    recordingTitle: 'Born in the morning',\r\n    isrc: 'YA9N4nsAxZo'\r\n  };\r\n  egModel: any = this.model;\r\n\r\n  uiSchemaDefault: any = {\r\n    \"isrc\": {\r\n      \"ui:disabled\": true,\r\n      \"ui:placeholder\": \"Enter your ISRC\"\r\n    },\r\n    \"bandArtist\": {\r\n      \"ui:disabled\": false,\r\n      \"ui:placeholder\": \"Enter  Version Type\",\r\n      \"ui:type\": \"datepicker\",\r\n      \"ui:required\": true\r\n    },\r\n    \"recordingTitle\": {\r\n      \"ui:type\": \"videoviewer\"\r\n    },\r\n    \"pDate\": {\r\n      \"ui:type\": \"percentage\"\r\n    }\r\n  };\r\n\r\n  formConfig: any;\r\n  options: FormlyFormOptions = {};\r\n  jsonSchema: any;\r\n  uiSchema: any;\r\n  fields: FormlyFieldConfig[];\r\n  isValid: boolean;\r\n  formDescription: string;\r\n  formLabel: string;\r\n  form = new FormGroup({});\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private formService: KendraioFormService,\r\n    private formlyJsonschema: FormlyJsonschema,\r\n  ) {\r\n    this.createForm();\r\n    this.formChanges$ = this.schemaform.valueChanges;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.subscription = this.formChanges$.pipe(\r\n      distinctUntilChanged(),\r\n      debounceTime(500),\r\n      tap(() => {\r\n        this.isLoading = true;\r\n      })\r\n    )\r\n      // .debounceTime(2000)\r\n      .subscribe(newVal => {\r\n        this.generateForm();\r\n        this.isLoading = false;\r\n      });\r\n\r\n  }\r\n\r\n  generateForm() {\r\n    let uiSchema: any = {};\r\n    let jsonSchema: any = {};\r\n    this.isValid = true;\r\n    jsonSchema = this.isValidJsonSchema(jsonSchema);\r\n    if (this.schemaform.get('model').value) {\r\n    this.model = JSON.parse(this.schemaform.get('model').value);\r\n  }\r\n    uiSchema = this.isValidJson(uiSchema);\r\n\r\n    if (this.isValid) {\r\n      let i = 0;\r\n      i = this.uiTypeMapper(uiSchema, jsonSchema, i);\r\n\r\n      this.formConfig = this.formlyJsonschema.toFieldConfig(jsonSchema);\r\n      this.fields = [this.formService.uiMapper(this.formConfig, jsonSchema, uiSchema)];\r\n      this.formDescription = this.formConfig.templateOptions.description;\r\n      this.formLabel = this.formConfig.templateOptions.label;\r\n    }\r\n\r\n  }\r\n\r\n  private uiTypeMapper(uiSchema: any, jsonSchema: any, i: number) {\r\n    try {\r\n      Object.keys(uiSchema).forEach(function (uiKey) {\r\n        Object.keys(jsonSchema.properties).forEach(function (schemaKey) {\r\n          if ((uiKey === schemaKey) && uiSchema[uiKey]['ui:type']) {\r\n            jsonSchema.properties[schemaKey].type = uiSchema[uiKey]['ui:type'];\r\n          } else {\r\n            jsonSchema.properties[schemaKey].type = jsonSchema.properties[schemaKey].type;\r\n          }\r\n        });\r\n        i++;\r\n      });\r\n    }\r\n    catch (e) {\r\n    }\r\n    return i;\r\n  }\r\n\r\n  private isValidJson(uiSchema: {}) {\r\n    try {\r\n      if(this.schemaform.get('UISchema').value){\r\n      uiSchema = JSON.parse(this.schemaform.get('UISchema').value);\r\n    }\r\n    } catch (e) {\r\n      // this.isValid = false;\r\n      if (Object.keys(uiSchema).length === 0) {\r\n        // return;\r\n      } else {\r\n        this.isValid = false;\r\n      }\r\n    }\r\n    return uiSchema;\r\n  }\r\n\r\n\r\n  private isValidJsonSchema(jsonSchema: {}) {\r\n    try {\r\n      this.isValid = true;\r\n      jsonSchema = JSON.parse(this.schemaform.get('JSONSchema').value);\r\n    } catch (e) {\r\n      this.isValid = false;\r\n      if (Object.keys(jsonSchema).length === 0) {\r\n      } else {\r\n        this.isValid = false;\r\n      }\r\n    }\r\n    return jsonSchema;\r\n  }\r\n\r\n  createForm() {\r\n    this.schemaform = this.fb.group({\r\n      JSONSchema: [''],\r\n      UISchema: [],\r\n      model: [],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    alert(JSON.stringify(this.model));\r\n  }\r\n\r\n}\r\n\r\n","\r\nexport * from './form-generator/form-generator.component';\r\nexport * from './toolsindex/toolsindex.component';\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport * as pages from './';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: pages.ToolsindexComponent,\n    data: {\n      breadcrumb: '',\n      menuLabel: 'Tool-Box'\n    },\n    children: [\n      { path: 'form-generator', component: pages.FormGeneratorComponent,\n      data: {\n        breadcrumb: {'en-US': 'contacts.people'},\n        menuLabel: 'Contacts/People'\n      } },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ToolsRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '../_shared/shared.module'\r\n\r\nimport { ToolsRoutingModule } from './tools-routing.module';\r\nimport { ToolsindexComponent } from './toolsindex/toolsindex.component';\r\nimport { FormGeneratorComponent } from './form-generator/form-generator.component';\r\nimport { ContentEditableFormDirective } from '../_shared/directives/editable-content';\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\n\r\n@NgModule({\r\n  declarations: [ToolsindexComponent, FormGeneratorComponent,  ContentEditableFormDirective],\r\n  imports: [\r\n    CommonModule,\r\n    ToolsRoutingModule,\r\n    SharedModule,\r\n    AppMaterialModule\r\n  ]\r\n})\r\nexport class ToolsModule { }\r\n","<div style=\"width:30%; margin-right: 28px\">\n<button  mat-flat-button color=\"primary\" routerLinkActive=\"active\"  [routerLink]=\"['form-generator']\"  >Form Generator</button>\n</div>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolsindex',\n  templateUrl: './toolsindex.component.html',\n  styleUrls: ['./toolsindex.component.scss']\n})\nexport class ToolsindexComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}