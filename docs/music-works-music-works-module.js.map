{"version":3,"sources":["webpack:///./src/app/music-works/_shared/forms/formModel.ts","webpack:///./src/app/music-works/_shared/forms/registerWork.ts","webpack:///./src/app/music-works/add-new/form.layout.ts","webpack:///./src/app/music-works/add-new/register.component.html","webpack:///./src/app/music-works/add-new/register.component.scss","webpack:///./src/app/music-works/add-new/register.component.ts","webpack:///./src/app/music-works/detail/detail.component.html","webpack:///./src/app/music-works/detail/detail.component.scss","webpack:///./src/app/music-works/detail/detail.component.ts","webpack:///./src/app/music-works/edit/edit.component.html","webpack:///./src/app/music-works/edit/edit.component.scss","webpack:///./src/app/music-works/edit/edit.component.ts","webpack:///./src/app/music-works/edit/form.layout.ts","webpack:///./src/app/music-works/index.ts","webpack:///./src/app/music-works/index/index.component.html","webpack:///./src/app/music-works/index/index.component.ts","webpack:///./src/app/music-works/music-works-routing.module.ts","webpack:///./src/app/music-works/music-works.module.ts"],"names":[],"mappings":"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","file":"music-works-music-works-module.js","sourcesContent":["\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const WORKS_FORM_MODEL = [\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Name',\r\n        maxLength: 25,\r\n        placeholder: 'Title of Recording',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Type',\r\n        maxLength: 50,\r\n        placeholder: 'Type',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n \r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'ISWC',\r\n        placeholder: 'ISWC',\r\n        hint: 'Add your ISWC code',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Composer',\r\n        placeholder: 'Composer',\r\n    \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'lyricist',\r\n        placeholder: 'lyricist',\r\n      \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Arranger',\r\n        placeholder: 'Arranger',\r\n      \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n   new DynamicFormGroupModel({\r\n\r\n        id: 'signoff',\r\n        group: [\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'reminder',\r\n        offLabel: 'Send me a reminder',\r\n        onLabel: 'Send me a reminder',\r\n        value: false\r\n\r\n    }),\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'updates',\r\n        offLabel: 'Subscribe to Updates',\r\n        onLabel: 'Subscribe to Updates',\r\n        value: false\r\n    }),\r\n\r\n    new DynamicCheckboxModel({\r\n        id: 'confirm',\r\n        label: 'I confirm the information given above',\r\n        value: false,\r\n        validators: {\r\n            requiredTrue: null\r\n        },\r\n        errorMessages: {\r\n            required: 'You must confirm your data is correct'\r\n        }\r\n    })\r\n]\r\n})\r\n];\r\n","\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel,\r\n    DynamicCheckboxGroupModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const WORKS_REGISTER_FORM_MODEL = [\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'title',\r\n        maxLength: 25,\r\n        placeholder: 'Title of work',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'altTitle',\r\n        maxLength: 25,\r\n    \r\n        placeholder: 'Any alternative titles',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicInputModel({\r\n\r\n        id: 'Duration',\r\n        maxLength: 50,\r\n        placeholder: 'Duration',\r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        },\r\n        additional: {\r\n            color: 'accent'\r\n        }\r\n    }),\r\n\r\n\r\n    new DynamicTextAreaModel ({\r\n\r\n        id: 'instrumentation',\r\n        placeholder: 'instrumentation',\r\n        hint: 'if a classical or dramatic work',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n    new DynamicTextAreaModel ({\r\n        id: 'CAE',\r\n        placeholder: 'CAE/IPI number of any other writers',\r\n        hint: 'CAE/IPI number of any other writers',\r\n     \r\n        validators: {\r\n            required: null\r\n        },\r\n        errorMessages: {\r\n            required: 'Field is required'\r\n        }\r\n    }),\r\n\r\n\r\n\r\n    new DynamicCheckboxGroupModel(\r\n        {\r\nid: 'cmo',\r\nlabel: 'Please choose all that apply ',\r\ngroup: [\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'prs',\r\n            label: 'PRS',\r\n            value: true\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'mcps',\r\n            label: 'MCPS',\r\n            value: false\r\n        }\r\n    ),\r\n    new DynamicCheckboxModel(\r\n        {\r\n            id: 'ppl',\r\n            label: 'PPL',\r\n            value: false\r\n        }\r\n    )\r\n]\r\n\r\n\r\n        }\r\n    ),\r\n\r\n \r\n\r\n\r\n\r\n \r\n   new DynamicFormGroupModel({\r\n\r\n        id: 'signoff',\r\n        group: [\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'reminder',\r\n        offLabel: 'Send me a reminder',\r\n        onLabel: 'Send me a reminder',\r\n        value: false\r\n\r\n    }),\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'updates',\r\n        offLabel: 'Subscribe to Updates',\r\n        onLabel: 'Subscribe to Updates',\r\n        value: false\r\n    }),\r\n\r\n    new DynamicCheckboxModel({\r\n        id: 'confirm',\r\n        label: 'I confirm the information given above',\r\n        value: false,\r\n        validators: {\r\n            requiredTrue: null\r\n        },\r\n        errorMessages: {\r\n            required: 'You must confirm your data is correct'\r\n        }\r\n    })\r\n]\r\n})\r\n];\r\n","export const WORKS_FORM_LAYOUT = {\r\n\r\n    'addressStreet': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};\r\n","module.exports = \"<div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<p>\\r\\n    As a writer or composer, you can register your own works and amend the details at any time. \\r\\n    However, if you have a publisher, they will usually manage any registration and amendments on your behalf.\\r\\n</p>\\r\\n\\r\\n  \\r\\n\\r\\n  <mat-card>\\r\\n\\r\\n      <form [formGroup]=\\\"formGroup\\\">\\r\\n    \\r\\n          <dynamic-material-form [group]=\\\"formGroup\\\"\\r\\n                                 [layout]=\\\"formLayout\\\"\\r\\n                                 [model]=\\\"formModel\\\"\\r\\n                                 (blur)=\\\"onBlur($event)\\\"\\r\\n                                 (change)=\\\"onChange($event)\\\"\\r\\n                                 (focus)=\\\"onFocus($event)\\\"\\r\\n                                 (matEvent)=\\\"onMatEvent($event)\\\" \\r\\n                                 fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"40px\\\"\\r\\n                                 ></dynamic-material-form>\\r\\n\\r\\n      </form>  \\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n  <div mat-dialog-actions class=\\\"align-right\\\">\\r\\n      <button mat-button  mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\r\\n      <button mat-button [mat-dialog-close]=\\\"data.Name\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Save</button>\\r\\n    </div>\\r\\n\\r\\n<p>You’ll be given a reference when you submit your work details, followed by a unique tune code for each work.</p>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXdvcmtzL2FkZC1uZXcvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormLayout, DynamicFormService } from '@ng-dynamic-forms/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { WORKS_REGISTER_FORM_MODEL } from '../_shared/forms/registerWork';\r\nimport { WORKS_FORM_LAYOUT } from './form.layout';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  formModel: DynamicFormModel = WORKS_REGISTER_FORM_MODEL;\r\n  formGroup: FormGroup;\r\n  formLayout: DynamicFormLayout = WORKS_FORM_LAYOUT;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n      this.formGroup = this.formService.createFormGroup(this.formModel);\r\n      this.formGroup.patchValue(this.data); \r\n    }\r\n\r\n    \r\n  \r\n  onBlur($event) {\r\n      console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onChange($event) {\r\n      console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onFocus($event) {\r\n      console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onMatEvent($event) {\r\n      console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n  }\r\n  }\r\n","module.exports = \"<p>\\n  detail works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXdvcmtzL2RldGFpbC9kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\r\\n\\r\\n  <mat-card>\\r\\n\\r\\n      <form [formGroup]=\\\"formGroup\\\">\\r\\n    \\r\\n          <dynamic-material-form [group]=\\\"formGroup\\\"\\r\\n                                 [layout]=\\\"formLayout\\\"\\r\\n                                 [model]=\\\"formModel\\\"\\r\\n                                 (blur)=\\\"onBlur($event)\\\"\\r\\n                                 (change)=\\\"onChange($event)\\\"\\r\\n                                 (focus)=\\\"onFocus($event)\\\"\\r\\n                                 (matEvent)=\\\"onMatEvent($event)\\\" \\r\\n                                 fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"40px\\\"\\r\\n                                 ></dynamic-material-form>\\r\\n\\r\\n      </form>  \\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n  <div mat-dialog-actions class=\\\"align-right\\\">\\r\\n      <button mat-button  mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\r\\n      <button mat-button [mat-dialog-close]=\\\"data.Name\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Save</button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  <pre>{{formGroup.value | json}}</pre>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL211c2ljLXdvcmtzL2VkaXQvZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DynamicFormModel, DynamicFormLayout, DynamicFormService } from '@ng-dynamic-forms/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { WORKS_FORM_MODEL } from '../_shared/forms/formModel';\r\nimport { WORKS_FORM_LAYOUT } from './form.layout';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  formModel: DynamicFormModel = WORKS_FORM_MODEL;\r\n  formGroup: FormGroup;\r\n  formLayout: DynamicFormLayout = WORKS_FORM_LAYOUT;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formService: DynamicFormService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n      this.formGroup = this.formService.createFormGroup(this.formModel);\r\n      this.formGroup.patchValue(this.data); \r\n    }\r\n  \r\n  onBlur($event) {\r\n      console.log(`Material blur event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onChange($event) {\r\n      console.log(`Material change event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onFocus($event) {\r\n      console.log(`Material focus event on: ${$event.model.id}: `, $event);\r\n  }\r\n  \r\n  onMatEvent($event) {\r\n      console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\r\n  }\r\n  }\r\n","export const WORKS_FORM_LAYOUT = {\r\n\r\n    'addressStreet': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};\r\n","\r\nexport * from './index/index.component';\r\nexport * from './detail/detail.component';\r\nexport * from './edit/edit.component';\r\n\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n<button mat-button mat-raised-button (click)=\\\"openAddNewDialog()\\\">Register New Work</button>\\r\\n\\r\\n\\r\\n\\r\\n<h2>Your Works</h2>\\r\\n\\r\\n<div class=\\\"table-responsive-lg\\\">\\r\\n\\r\\n  <ag-grid-angular #agGrid style=\\\"width: 100%; height: 700px;\\\" class=\\\"ag-theme-material\\\" \\r\\n  [gridOptions]=\\\"gridOptions\\\"\\r\\n  [rowData]=\\\"allItems\\\"\\r\\n    (cellClicked)=\\\"onCellClicked($event)\\\">\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Work\\\">\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Actions\\\" [width]=\\\"100\\\" [pinned]=\\\"true\\\" [cellRenderer]=\\\"editBtnCellRenderer\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Name\\\" field=\\\"Name\\\" [width]=\\\"165\\\" [pinned]=\\\"true\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n     \\r\\n    </ag-grid-column>\\r\\n\\r\\n    <ag-grid-column headerName=\\\"Details\\\">\\r\\n      <ag-grid-column headerName=\\\"Type\\\" field=\\\"Type\\\" [width]=\\\"150\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"ISWC\\\" field=\\\"ISWC\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Composer\\\" field=\\\"Composer\\\" [width]=\\\"100\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n      </ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Lyricist\\\" field=\\\"lyricist\\\" [width]=\\\"150\\\"\\r\\n        [sortable]=\\\"true\\\" [resizable]=\\\"true\\\" [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n      <ag-grid-column headerName=\\\"Arranger\\\" field=\\\"Arranger\\\" [width]=\\\"200\\\" [sortable]=\\\"true\\\" [resizable]=\\\"true\\\"\\r\\n        [filter]=\\\"true\\\"></ag-grid-column>\\r\\n\\r\\n\\r\\n\\r\\n    </ag-grid-column>\\r\\n  </ag-grid-angular>\\r\\n</div>\\r\\n\\r\\n<p>you can amend the registration details of any works where you are a rightsholder. </p>\"","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap, tap, delay } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { IMusicRelease } from 'src/app/_models/classes/musicRelease';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { PageTitleService } from 'src/app/services/page-title.service';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport {EditComponent} from '../edit/edit.component';\r\n\r\nimport { TestDataService } from '../../services/test-data.service';\r\nimport { RegisterComponent } from '../add-new/register.component';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styles: [` \r\n  dynamic-material-form[fxLayoutAlign] { padding:10px; padding-left: 25px;}\r\n  `],\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  public gridOptions: GridOptions;\r\n  entityTypes$;\r\n  selectedType;\r\n  entityList$;\r\n  selectedEntity$;\r\n  listAll$;\r\n  showSpinner: boolean;\r\n  allItems: IMusicRelease[];\r\n\r\n  constructor(\r\n    private readonly testData: TestDataService,\r\n    private readonly pageTitle: PageTitleService,\r\n    public dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.pageTitle.setTitle('Works');\r\n    this.entityTypes$ = this.testData.listEntityTypes();\r\n\r\n    this.entityList$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listEntities(type))\r\n    );\r\n    this.selectedEntity$ = new Subject<number>().pipe(\r\n      switchMap(id => this.testData.getEntity(this.selectedType, id))\r\n    );\r\n    this.listAll$ = new Subject<string>().pipe(\r\n      switchMap(type => this.testData.listAll(type))\r\n    );\r\n\r\n    this.listAll();\r\n  }\r\n\r\n  countryCellRenderer(params) {\r\n    const flag = \"<img border='0' width='15' height='10' style='margin-bottom: 2px' src='https://www.ag-grid.com/images/flags/gb.png'>\";\r\n    return flag + \" \" + params.value;\r\n  }\r\n  editBtnCellRenderer(params) {\r\n    const btn = '<button type=\"button\" class=\"btn btn-primary btn-sm\">Amend</button>';\r\n    return btn;\r\n  }\r\n\r\n  changeEntityType(type) {\r\n    this.selectedType = type;\r\n    this.entityList$.next(type);\r\n  }\r\n\r\n  changeEntity(id) {\r\n    this.selectedEntity$.next(id);\r\n  }\r\n  onCellClicked(ev: any) {\r\n    if (ev.colDef.headerName === 'Actions') {\r\n      this.openDialog(ev.data);\r\n    }\r\n  }\r\n\r\n  openDialog(ev: any): void {\r\n    let dialogRef = this.dialog.open(EditComponent, {\r\n      data: ev,\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  openAddNewDialog(ev?: any): void {\r\n    let dialogRef = this.dialog.open(RegisterComponent, {\r\n      data: 'ev',\r\n      width: '80%',\r\n      panelClass: 'formFieldWidth380'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n\r\n  listAll() {\r\n\r\n    this.testData.listAll('music-work').pipe(\r\n      tap(() => this.showSpinner = true),\r\n      // delay(500)\r\n    )\r\n      .subscribe(res => {\r\n        this.allItems = res;\r\n        this.showSpinner = false;\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport * as Pages from './index';\n\nconst routes: Routes = [\n  { path: '', component: Pages.IndexComponent },\n  { path: 'edit/:id', component: Pages.EditComponent },\n  { path: 'detail/:id', component: Pages.DetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MusicWorksRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MusicWorksRoutingModule } from './music-works-routing.module';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\nimport { MatGridListModule, MatCardModule } from '@angular/material';\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RegisterComponent } from './add-new/register.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IndexComponent, \r\n    EditComponent, \r\n    DetailComponent\r\n  , RegisterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MusicWorksRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DynamicFormsMaterialUIModule,\r\n    AppMaterialModule,\r\n    AgGridModule.withComponents(\r\n      []\r\n  ),\r\n  FlexLayoutModule\r\n  ],\r\n  entryComponents: [   \r\n    RegisterComponent\r\n   ]\r\n})\r\nexport class MusicWorksModule { }\r\n"],"sourceRoot":""}