{"version":3,"sources":["webpack:///./src/app/_shared/components/index.ts","webpack:///./src/app/_shared/components/material/mat-button.component.ts","webpack:///./src/app/_shared/components/material/mat-input.component.ts","webpack:///./src/app/_shared/shared.module.ts","webpack:///./src/app/claims/send-claims/send-claims.component.html","webpack:///./src/app/claims/send-claims/send-claims.component.scss","webpack:///./src/app/claims/send-claims/send-claims.component.ts"],"names":[],"mappings":"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","file":"default~claims-claims-module~music-recordings-music-recordings-module~music-releases-music-releases-~1b7a70b3.js","sourcesContent":["export * from '../components/material/mat-input.component';\r\nexport * from './material/mat-button.component';\r\n","import {Component} from '@angular/core';\r\nimport {IHeaderAngularComp, ICellRendererAngularComp} from 'ag-grid-angular/main';\r\n\r\n\r\n@Component({\r\n    selector: 'button-component',\r\n    template: `\r\n        <div class=\"container\">\r\n        <button mat-raised-button mat-button>Edit</button>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .container {\r\n            width: 100%;\r\n        }\r\n\r\n        /deep/\r\n        .ag-header-cell {\r\n            text-align: left;\r\n        }\r\n    `]\r\n})\r\nexport class MatButtonComponent implements ICellRendererAngularComp {\r\n    params: any;\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n    }\r\n\r\n\r\n    refresh(params: any): boolean {\r\n        this.params = params;\r\n        return true;\r\n    }\r\n\r\n    constructor(\r\n     //   private columnAlignmentService: ColumnAlignmentService\r\n        ) {\r\n    }\r\n\r\n    groupChanged($event) {\r\n      //  this.columnAlignmentService.changeColumnAlignment($event.value);\r\n    }\r\n}","import { Component, QueryList, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\r\n\r\n\r\n@Component({\r\n    selector: \"input-cell\",\r\n    template: `\r\n        <mat-card>\r\n        <form class=\"container\" tabindex=\"0\" (keydown)=\"onKeyDown($event)\">\r\n            <mat-form-field class=\"example-full-width\">            \r\n                <input #input matInput [(ngModel)]=\"Title\" placeholder=\"Title\"\r\n                       [ngModelOptions]=\"{standalone: true}\">\r\n            </mat-form-field>\r\n        </form>\r\n        </mat-card>\r\n    `,\r\n    styles: [\r\n        `\r\n            .container {\r\n                width: 350px;\r\n            }\r\n        `\r\n    ]\r\n})\r\nexport class MatInputComponent implements ICellEditorAngularComp {\r\n    private params: any;\r\n\r\n     Title: string;\r\n    // private lastName: string;\r\n\r\n    @ViewChildren('input', { read: ViewContainerRef })\r\n    public inputs: QueryList<any>;\r\n    private focusedInput = 0;\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n        this.Title = this.params.value;\r\n        // .split(\" \")[0];\r\n        // this.lastName = this.params.value.split(\" \")[1];\r\n    }\r\n\r\n    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\r\n    ngAfterViewInit() {\r\n        this.focusOnInputNextTick(this.inputs.first);\r\n    }\r\n\r\n    private focusOnInputNextTick(input: ViewContainerRef) {\r\n        window.setTimeout(() => {\r\n            input.element.nativeElement.focus();\r\n        }, 0);\r\n    }\r\n\r\n    getValue() {\r\n        return `${this.Title}`;\r\n    }\r\n\r\n    isPopup(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /*\r\n     * A little over complicated for what it is, but the idea is to illustrate how you might tab between multiple inputs\r\n     * say for example in full row editing\r\n     */\r\n    onKeyDown(event): void {\r\n        let key = event.which || event.keyCode;\r\n        if (key == 9) {\r\n            // tab\r\n            this.preventDefaultAndPropagation(event);\r\n\r\n            // either move one input along, or cycle back to 0\r\n            this.focusedInput = this.focusedInput === this.inputs.length - 1 ? 0 : this.focusedInput + 1;\r\n\r\n            let focusedInput = this.focusedInput;\r\n            let inputToFocusOn = this.inputs.find((item: any, index: number) => {\r\n                return index === focusedInput;\r\n            });\r\n\r\n            this.focusOnInputNextTick(inputToFocusOn);\r\n        } else if (key == 13) {\r\n            // enter\r\n            // perform some validation on enter - in this example we assume all inputs are mandatory\r\n            // in a proper application you'd probably want to inform the user that an input is blank\r\n            this.inputs.forEach(input => {\r\n                if (!input.element.nativeElement.value) {\r\n                    this.preventDefaultAndPropagation(event);\r\n                    this.focusOnInputNextTick(input);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private preventDefaultAndPropagation(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule, LowerCasePipe, DatePipe } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  MatCardModule,\r\n  MatButtonToggleModule,\r\n  MatCheckboxModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatButtonModule,\r\n  MatMenuModule, MatDialogModule, MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport * as matComponents from '../_shared/components';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { SendClaimsComponent } from 'src/app/claims/send-claims/send-claims.component';\r\nimport { FlexModule } from '@angular/flex-layout';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    AgGridModule.withComponents(\r\n      [\r\n        matComponents.MatInputComponent,\r\n        matComponents.MatButtonComponent\r\n      ]\r\n    ),\r\n    FlexModule\r\n  ],\r\n  declarations: [\r\n    matComponents.MatInputComponent,\r\n    matComponents.MatButtonComponent,\r\n    SendClaimsComponent\r\n  ],\r\n  exports: [\r\n  //  matComponents.MatInputComponent,\r\n  MatMenuModule,\r\n  SendClaimsComponent\r\n\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    LowerCasePipe,\r\n  ],\r\n  entryComponents: [   \r\n    SendClaimsComponent\r\n   ]\r\n})\r\nexport class SharedModule {}\r\n","module.exports = \"<!-- <pre> {{ data | json }}</pre>  -->\\n\\n\\n<h1>Claim Sheet</h1>\\nLorem ipsum dolor sit amet consectetur adipisicing elit. Placeat consectetur incidunt facere esse vero minus, voluptates voluptatem autem at ratione non! Alias hic temporibus rerum nisi odit quisquam dolorum fugiat!\\n\\n<section *ngIf=\\\"!nextStep\\\">\\n<div class=\\\"mt-4\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\"   fxLayoutAlign=\\\"start stretch\\\">\\n\\n<mat-card *ngFor=\\\"let item of data; let i = index;\\\"  >\\n    <mat-card-header>\\n      \\n        <mat-card-title>Claim {{i+1}} / {{data.length}}</mat-card-title>\\n        <mat-card-subtitle>{{item.name}}</mat-card-subtitle>\\n      </mat-card-header>\\n\\n    <mat-card-content>\\n\\n Artist: {{item.artist}}<br>\\n Collective: {{item.collective}}<br>\\n Owner: {{item.owner}}<br>\\n</mat-card-content>\\n\\n      <mat-card-actions>\\n        <button mat-mini-fab matTooltip=\\\"Remove from Claim\\\" (click)=\\\"removeClaim(i)\\\"><mat-icon>delete</mat-icon></button> \\n        <button mat-mini-fab matTooltip=\\\"Edit\\\" (click)=\\\"removeClaim(i)\\\"><mat-icon>edit</mat-icon></button>\\n      </mat-card-actions>\\n\\n</mat-card>\\n\\n</div>\\n\\n<div mat-dialog-actions>\\n  <button mat-button mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\n  <button mat-button mat-raised-button (click)=\\\"nextClaimStep()\\\">Send to my Claims Organiser</button>\\n</div>\\n\\n</section>\\n\\n<section *ngIf=\\\"nextStep\\\" class=\\\"mt-4\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\"   fxLayoutAlign=\\\"start stretch\\\">\\n\\nThe folowing claims have been sent to your Claims Folder.\\n\\n{{data | json}}\\n\\n<div mat-dialog-actions>\\n    <button mat-button mat-dialog-close=\\\"Edit Cancelled\\\">Close</button>\\n    <button mat-button mat-raised-button (click)=\\\"nextClaimStep3()\\\">View my Claims Organiser</button>\\n  </div>\\n\\n  </section>  \"","module.exports = \"mat-card {\\n  padding: 30px;\\n  margin-bottom: 20px; }\\n\\n.mat-dialog-actions {\\n  place-content: flex-end;\\n  padding: 100px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xhaW1zL3NlbmQtY2xhaW1zL0M6XFxVc2Vyc1xcVGltXFxrZW5kcmFpby1hcHAvc3JjXFxhcHBcXGNsYWltc1xcc2VuZC1jbGFpbXNcXHNlbmQtY2xhaW1zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQVcsY0FBWTtFQUFFLG9CQUFtQixFQUFFOztBQUM5QztFQUNJLHdCQUF1QjtFQUN2QixlQUFhLEVBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY2xhaW1zL3NlbmQtY2xhaW1zL3NlbmQtY2xhaW1zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQgeyBwYWRkaW5nOjMwcHg7IG1hcmdpbi1ib3R0b206IDIwcHh9XHJcbi5tYXQtZGlhbG9nLWFjdGlvbnMge1xyXG4gICAgcGxhY2UtY29udGVudDogZmxleC1lbmQ7XHJcbiAgICBwYWRkaW5nOjEwMHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MatButton , MatDialog, MatDialogClose } from '@angular/material';\n\n@Component({\n  selector: 'app-send-claims',\n  templateUrl: './send-claims.component.html',\n  styleUrls: ['./send-claims.component.scss']\n})\nexport class SendClaimsComponent implements OnInit {\n  nextStep = false;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n   // private formService: DynamicFormService\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  nextClaimStep(){\n    console.log(this.data)\n    this.nextStep = true;\n\n  }\n\n  nextClaimStep3() {\n    // todo\n  }\n\n  removeClaim(i){\n    this.data.splice(i, 1);\n  }\n\n\n}\n"],"sourceRoot":""}