{"version":3,"sources":["webpack:///./src/app/_shared/components/index.ts","webpack:///./src/app/_shared/components/material/mat-button.component.ts","webpack:///./src/app/_shared/components/material/mat-input.component.ts","webpack:///./src/app/_shared/shared.module.ts","webpack:///./src/app/claims/_shared/forms/formModel.ts","webpack:///./src/app/claims/claims-edit/claims-edit.component.html","webpack:///./src/app/claims/claims-edit/claims-edit.component.scss","webpack:///./src/app/claims/claims-edit/claims-edit.component.ts","webpack:///./src/app/claims/claims-edit/form.layout.ts","webpack:///./src/app/claims/send-claims/send-claims.component.html","webpack:///./src/app/claims/send-claims/send-claims.component.scss","webpack:///./src/app/claims/send-claims/send-claims.component.ts"],"names":[],"mappings":"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","file":"default~claims-claims-module~music-recordings-music-recordings-module~music-releases-music-releases-~1b7a70b3.js","sourcesContent":["export * from '../components/material/mat-input.component';\r\nexport * from './material/mat-button.component';\r\n","import {Component} from '@angular/core';\r\nimport {IHeaderAngularComp, ICellRendererAngularComp} from 'ag-grid-angular/main';\r\n\r\n\r\n@Component({\r\n    selector: 'button-component',\r\n    template: `\r\n        <div class=\"container\">\r\n        <button mat-raised-button mat-button>Edit</button>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .container {\r\n            width: 100%;\r\n        }\r\n\r\n        /deep/\r\n        .ag-header-cell {\r\n            text-align: left;\r\n        }\r\n    `]\r\n})\r\nexport class MatButtonComponent implements ICellRendererAngularComp {\r\n    params: any;\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n    }\r\n\r\n\r\n    refresh(params: any): boolean {\r\n        this.params = params;\r\n        return true;\r\n    }\r\n\r\n    constructor(\r\n     //   private columnAlignmentService: ColumnAlignmentService\r\n        ) {\r\n    }\r\n\r\n    groupChanged($event) {\r\n      //  this.columnAlignmentService.changeColumnAlignment($event.value);\r\n    }\r\n}","import { Component, QueryList, ViewChildren, ViewContainerRef } from '@angular/core';\r\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\r\n\r\n\r\n@Component({\r\n    selector: \"input-cell\",\r\n    template: `\r\n        <mat-card>\r\n        <form class=\"container\" tabindex=\"0\" (keydown)=\"onKeyDown($event)\">\r\n            <mat-form-field class=\"example-full-width\">            \r\n                <input #input matInput [(ngModel)]=\"Title\" placeholder=\"Title\"\r\n                       [ngModelOptions]=\"{standalone: true}\">\r\n            </mat-form-field>\r\n        </form>\r\n        </mat-card>\r\n    `,\r\n    styles: [\r\n        `\r\n            .container {\r\n                width: 350px;\r\n            }\r\n        `\r\n    ]\r\n})\r\nexport class MatInputComponent implements ICellEditorAngularComp {\r\n    private params: any;\r\n\r\n     Title: string;\r\n    // private lastName: string;\r\n\r\n    @ViewChildren('input', { read: ViewContainerRef })\r\n    public inputs: QueryList<any>;\r\n    private focusedInput = 0;\r\n\r\n    agInit(params: any): void {\r\n        this.params = params;\r\n        this.Title = this.params.value;\r\n        // .split(\" \")[0];\r\n        // this.lastName = this.params.value.split(\" \")[1];\r\n    }\r\n\r\n    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\r\n    ngAfterViewInit() {\r\n        this.focusOnInputNextTick(this.inputs.first);\r\n    }\r\n\r\n    private focusOnInputNextTick(input: ViewContainerRef) {\r\n        window.setTimeout(() => {\r\n            input.element.nativeElement.focus();\r\n        }, 0);\r\n    }\r\n\r\n    getValue() {\r\n        return `${this.Title}`;\r\n    }\r\n\r\n    isPopup(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /*\r\n     * A little over complicated for what it is, but the idea is to illustrate how you might tab between multiple inputs\r\n     * say for example in full row editing\r\n     */\r\n    onKeyDown(event): void {\r\n        let key = event.which || event.keyCode;\r\n        if (key == 9) {\r\n            // tab\r\n            this.preventDefaultAndPropagation(event);\r\n\r\n            // either move one input along, or cycle back to 0\r\n            this.focusedInput = this.focusedInput === this.inputs.length - 1 ? 0 : this.focusedInput + 1;\r\n\r\n            let focusedInput = this.focusedInput;\r\n            let inputToFocusOn = this.inputs.find((item: any, index: number) => {\r\n                return index === focusedInput;\r\n            });\r\n\r\n            this.focusOnInputNextTick(inputToFocusOn);\r\n        } else if (key == 13) {\r\n            // enter\r\n            // perform some validation on enter - in this example we assume all inputs are mandatory\r\n            // in a proper application you'd probably want to inform the user that an input is blank\r\n            this.inputs.forEach(input => {\r\n                if (!input.element.nativeElement.value) {\r\n                    this.preventDefaultAndPropagation(event);\r\n                    this.focusOnInputNextTick(input);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private preventDefaultAndPropagation(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule, LowerCasePipe, DatePipe } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  MatCardModule,\r\n  MatButtonToggleModule,\r\n  MatCheckboxModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatButtonModule,\r\n  MatMenuModule, MatDialogModule, MatTooltipModule, MatListModule\r\n} from '@angular/material';\r\n\r\nimport * as matComponents from '../_shared/components';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { SendClaimsComponent } from 'src/app/claims/send-claims/send-claims.component';\r\nimport { FlexModule, FlexLayoutModule } from '@angular/flex-layout';\r\nimport { DynamicFormsMaterialUIModule } from '@ng-dynamic-forms/ui-material';\r\nimport { ClaimsEditComponent } from '../claims/claims-edit/claims-edit.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatListModule,\r\n    AgGridModule.withComponents(\r\n      [\r\n        matComponents.MatInputComponent,\r\n        matComponents.MatButtonComponent\r\n      ]\r\n    ),\r\n    FlexModule, FlexLayoutModule,\r\n    DynamicFormsMaterialUIModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    matComponents.MatInputComponent,\r\n    matComponents.MatButtonComponent,\r\n    SendClaimsComponent,\r\n    ClaimsEditComponent\r\n  ],\r\n  exports: [\r\n  //  matComponents.MatInputComponent,\r\n  MatMenuModule,\r\n  SendClaimsComponent,\r\n  DynamicFormsMaterialUIModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  FlexModule,\r\n  FlexLayoutModule,\r\n  ClaimsEditComponent,\r\n  MatListModule,\r\n\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    LowerCasePipe,\r\n  ],\r\n  entryComponents: [   \r\n    SendClaimsComponent,\r\n    ClaimsEditComponent //may move this to claims module\r\n   ]\r\n})\r\nexport class SharedModule {}\r\n","\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicDatePickerModel,\r\n    DynamicFormGroupModel,\r\n    DynamicInputModel,\r\n    DynamicRadioGroupModel,\r\n    DynamicSelectModel,\r\n    DynamicSwitchModel,\r\n    DynamicTextAreaModel\r\n} from '@ng-dynamic-forms/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const MY_CLAIMS_FORM_MODEL = [\r\n\r\n\r\n    new DynamicTextAreaModel({\r\n\r\n        id: 'comments',\r\n        placeholder: 'Notes and Comments',\r\n\r\n    }),\r\n\r\n    new DynamicTextAreaModel({\r\n        id: 'corroborators',\r\n        placeholder: 'Names of Corroborators'\r\n    }),\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   new DynamicFormGroupModel({\r\n\r\n        id: 'signoff',\r\n        group: [\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'reminder',\r\n        offLabel: 'Send me a reminder',\r\n        onLabel: 'Send me a reminder',\r\n        value: false\r\n\r\n    }),\r\n\r\n    new DynamicSwitchModel({\r\n\r\n        id: 'updates',\r\n        offLabel: 'Subscribe to Updates',\r\n        onLabel: 'Subscribe to Updates',\r\n        value: false\r\n    }),\r\n\r\n    new DynamicCheckboxModel({\r\n        id: 'confirm',\r\n        label: 'I confirm the information given above',\r\n        value: false,\r\n        validators: {\r\n            requiredTrue: null\r\n        },\r\n        errorMessages: {\r\n            required: 'You must confirm your data is correct'\r\n        }\r\n    })\r\n]\r\n})\r\n];\r\n","module.exports = \"\\n<section\\nfxLayout=\\\"row wrap\\\"\\nfxLayoutAlign=\\\"start start\\\" \\nfxLayoutGap=\\\"20px\\\"\\n>\\n\\n<mat-card>\\n\\n  <mat-card-header>\\n    <b>Claim Details</b>\\n  </mat-card-header>\\n  <mat-card-content>\\n\\n\\n    <mat-list>\\n        <mat-list-item>   Name:   {{data.name}} </mat-list-item>\\n        <mat-list-item> Artist:   {{data.artist}} </mat-list-item>\\n        <mat-list-item>  Collective:  {{data.collective}} </mat-list-item>\\n        <mat-list-item>  Collective:  {{data.owner}} </mat-list-item>\\n       </mat-list>\\n\\n  </mat-card-content>\\n\\n\\n</mat-card>\\n\\n\\n\\n\\n    <mat-card>\\n        <mat-card-header>\\n            <b>Extra Information</b>\\n            <button mat-button ><mat-icon>file_copy</mat-icon> copy from previous</button>\\n          </mat-card-header>\\n  \\n      <form [formGroup]=\\\"formGroup\\\">\\n\\n        <dynamic-material-form \\n                      [group]=\\\"formGroup\\\" [layout]=\\\"formLayout\\\" [model]=\\\"formModel\\\" (blur)=\\\"onBlur($event)\\\"\\n                      (change)=\\\"onChange($event)\\\" (focus)=\\\"onFocus($event)\\\" (matEvent)=\\\"onMatEvent($event)\\\" \\n                 \\n                           ></dynamic-material-form>\\n  \\n      </form>\\n    </mat-card>\\n  \\n    <div mat-dialog-actions class=\\\"align-right\\\">\\n      <button mat-button mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\n      <button mat-raised-button mat-button [mat-dialog-close]=\\\"data.Name\\\" cdkFocusInitial [disabled]=\\\"formGroup.invalid\\\">Send</button>\\n    </div>\\n  \\n  </section>\\n\\n\\n  \\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYWltcy9jbGFpbXMtZWRpdC9jbGFpbXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { DynamicFormModel, DynamicFormService, DynamicFormLayout } from '@ng-dynamic-forms/core';\n\nimport { FormsModule, FormGroup, FormArray, FormBuilder, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MY_CLAIMS_FORM_MODEL } from '../_shared/forms/formModel';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { CLAIMS_FORM_LAYOUT } from './form.layout';\n\n@Component({\n  selector: 'app-claims-edit',\n  templateUrl: './claims-edit.component.html',\n  styleUrls: ['./claims-edit.component.scss']\n})\nexport class ClaimsEditComponent implements OnInit {\n  formModel: DynamicFormModel = MY_CLAIMS_FORM_MODEL;\n  formGroup: FormGroup;\n  formLayout: DynamicFormLayout = CLAIMS_FORM_LAYOUT;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private formService: DynamicFormService\n  ) { }\n\n  ngOnInit() {\n    this.formGroup = this.formService.createFormGroup(this.formModel);\n    this.formGroup.patchValue(this.data);\n  }\n\n  onBlur($event) {\n    console.log(`Material blur event on: ${$event.model.id}: `, $event);\n  }\n\n  onChange($event) {\n    console.log(`Material change event on: ${$event.model.id}: `, $event);\n  }\n\n  onFocus($event) {\n    console.log(`Material focus event on: ${$event.model.id}: `, $event);\n  }\n\n  onMatEvent($event) {\n    console.log(`Material ${$event.type} event on: ${$event.model.id}: `, $event);\n  }\n}\n","export const CLAIMS_FORM_LAYOUT = {\r\n\r\n    'stuff': {\r\n        element: {\r\n            host: 'material-form-group'\r\n        }\r\n    }\r\n};","module.exports = \"<!-- <pre> {{ data | json }}</pre>  -->\\n\\n\\n<h1>Claim Sheet</h1>\\nLorem ipsum dolor sit amet consectetur adipisicing elit. Placeat consectetur incidunt facere esse vero minus, voluptates voluptatem autem at ratione non! Alias hic temporibus rerum nisi odit quisquam dolorum fugiat!\\n\\n<section *ngIf=\\\"!nextStep\\\">\\n<div class=\\\"mt-4\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\"   fxLayoutAlign=\\\"start stretch\\\">\\n\\n<mat-card *ngFor=\\\"let item of data; let i = index;\\\"  >\\n    <mat-card-header>\\n      \\n        <mat-card-title>Claim {{i+1}} / {{data.length}}</mat-card-title>\\n        <mat-card-subtitle>{{item.name}}</mat-card-subtitle>\\n      </mat-card-header>\\n\\n    <mat-card-content>\\n\\n Artist: {{item.artist}}<br>\\n Collective: {{item.collective}}<br>\\n Owner: {{item.owner}}<br>\\n</mat-card-content>\\n\\n      <mat-card-actions>\\n        <button mat-mini-fab matTooltip=\\\"Remove from Claim\\\" (click)=\\\"removeClaim(i)\\\"><mat-icon>delete</mat-icon></button> \\n        <button mat-mini-fab matTooltip=\\\"Edit\\\" (click)=\\\"removeClaim(i)\\\"><mat-icon>edit</mat-icon></button>\\n      </mat-card-actions>\\n\\n</mat-card>\\n\\n</div>\\n\\n<div mat-dialog-actions>\\n  <button mat-button mat-dialog-close=\\\"Edit Cancelled\\\">Cancel</button>\\n  <button mat-button mat-raised-button (click)=\\\"nextClaimStep()\\\">Send to my Claims Organiser</button>\\n</div>\\n\\n</section>\\n\\n<section *ngIf=\\\"nextStep\\\" class=\\\"mt-4\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\"   fxLayoutAlign=\\\"start stretch\\\">\\n\\nThe folowing claims have been sent to your Claims Folder.\\n\\n{{data | json}}\\n\\n<div mat-dialog-actions>\\n    <button mat-button mat-dialog-close=\\\"Edit Cancelled\\\">Close</button>\\n    <button mat-button mat-raised-button mat-dialog-close=\\\"next\\\" (click)=\\\"nextClaimStep3()\\\">View my Claims Organiser</button>\\n  </div>\\n\\n  </section>  \"","module.exports = \"mat-card {\\n  padding: 30px;\\n  margin-bottom: 20px; }\\n\\n.mat-dialog-actions {\\n  place-content: flex-end; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xhaW1zL3NlbmQtY2xhaW1zL0M6XFxVc2Vyc1xcVGltXFxrZW5kcmFpby1hcHAvc3JjXFxhcHBcXGNsYWltc1xcc2VuZC1jbGFpbXNcXHNlbmQtY2xhaW1zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQVcsY0FBWTtFQUFFLG9CQUFtQixFQUFFOztBQUM5QztFQUNJLHdCQUF1QixFQUMxQiIsImZpbGUiOiJzcmMvYXBwL2NsYWltcy9zZW5kLWNsYWltcy9zZW5kLWNsYWltcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHsgcGFkZGluZzozMHB4OyBtYXJnaW4tYm90dG9tOiAyMHB4fVxyXG4ubWF0LWRpYWxvZy1hY3Rpb25zIHtcclxuICAgIHBsYWNlLWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MatButton , MatDialog, MatDialogClose } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-send-claims',\n  templateUrl: './send-claims.component.html',\n  styleUrls: ['./send-claims.component.scss']\n})\nexport class SendClaimsComponent implements OnInit {\n  nextStep = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private readonly router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  nextClaimStep(){\n    console.log(this.data);\n    this.nextStep = true;\n  }\n\n  nextClaimStep3() {\n\n    localStorage.setItem('myClaims', JSON.stringify(this.data));\n\n      this.router.navigate(['/claims']);\n    // sidenav.open();\n \n\n\n  }\n\n  removeClaim(i){\n    this.data.splice(i, 1);\n  }\n\n\n}\n"],"sourceRoot":""}