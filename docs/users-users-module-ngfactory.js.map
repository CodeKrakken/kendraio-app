{"version":3,"sources":["./node_modules/@angular/material/table/typings/index.d.ts.MatTable.html","./node_modules/@angular/material/table/typings/index.d.ts.MatHeaderRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatFooterRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatTextColumn.html","./src/app/_shared/ui-form/api-config.ts","./src/app/_shared/ui-form/services/kendraio.form.service.ts","./src/app/bloomen/_shared/bloomen-users.service.ts","./src/app/bloomen/users/_shared/account-form.component.html","./src/app/bloomen/users/_shared/account-form.component.ts","./src/app/bloomen/users/list/list.component.html","./src/app/bloomen/users/list/list.component.ts","./src/app/bloomen/users/register-user/register-user.component.html","./src/app/bloomen/users/register-user/register-user.component.ts","./src/app/bloomen/users/users-routing.module.ts","./src/app/bloomen/users/users.module.ts","./src/app/services/bloomen-api.service.ts"],"names":[],"mappings":"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","file":"users-users-module-ngfactory.js","sourcesContent":["\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  ","export const FORM_APIS = {\r\n\r\n    youtube: {\r\n        basic:\r\n        {\r\n            jsonSchema: 'assets/YouTube/youtube-edit-video-basic.json',\r\n            uiSchema: 'assets/YouTube/youtube-edit-video-basic-ui.json',\r\n        },\r\n        advanced:     {\r\n            jsonSchema: 'assets/YouTube/youtube-edit-video-advanced.schema.json',\r\n            uiSchema: 'assets/YouTube/youtube-edit-video-advanced.ui.json',\r\n        },\r\n        arrays:     {\r\n            jsonSchema: 'assets/YouTube/arrays.json',\r\n            uiSchema: 'assets/YouTube/youtube-edit-video-advanced.ui.json',\r\n        }\r\n      },\r\n\r\n  };\r\n","import { Injectable } from '@angular/core';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\n// import { Field } from '../helpers/fields';\r\n// import { DEFAULT_FORM } from '../schemas/default.form';\r\n// import { LOGIN_FORM } from '../schemas/login.form';\r\n// import { FORMS_VALUES } from '../schemas';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { FULLNAME, EMAIL, TYPEAHEAD } from '../schemas/form-elements';\r\nimport { Observable, from, forkJoin, throwError } from 'rxjs';\r\nimport { FORM_APIS } from '../api-config';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KendraioFormService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getFormData(formId): Observable<any> {\r\n    return forkJoin([this.getUI(formId), this.getSchema(formId)]);\r\n  }\r\n\r\n  getUI(formId: string): Observable<any> {\r\n    const url = FORM_APIS.youtube[formId].uiSchema;\r\n\r\n    return this.http.get(url)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  getSchema(formId: string): Observable<any> {\r\n    const url = FORM_APIS.youtube[formId].jsonSchema;\r\n    return this.http.get<FormlyFieldConfig[]>(url);\r\n  }\r\n\r\n  uiMapper(formlyConfig, jsonSchema, uiSchema) {\r\n    console.log(jsonSchema);\r\n    let i = 0;\r\n    try {\r\n      if (Object.keys(uiSchema).length) {\r\n        Object.keys(jsonSchema.properties).forEach(function (key) {\r\n          Object.keys(uiSchema).forEach(function (uiKey) {\r\n            if (uiKey === key) {\r\n              //  jsonSchema.properties.bandArtist.type = uiSchema.bandArtist['ui:type'];\r\n              formlyConfig['fieldGroup'][i]['templateOptions']['disabled'] = uiSchema[key]['ui:disabled'];\r\n              formlyConfig['fieldGroup'][i]['templateOptions']['placeholder'] = uiSchema[key]['ui:placeholder'];\r\n              formlyConfig['fieldGroup'][i]['templateOptions']['required'] = uiSchema[key]['ui:required'];\r\n            }\r\n          });\r\n          i++;\r\n        });\r\n      }\r\n\r\n      return formlyConfig;\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  jsonMapper(jsonSchema, uiSchema) {\r\n    let i = 0;\r\n    try {\r\n\r\n      Object.keys(uiSchema).forEach(function (key) {\r\n        Object.keys(jsonSchema.properties).forEach(function (uiKey) {\r\n          // jsonSchema.properties.bandArtist.type = 'datepicker';\r\n          if (uiKey === key) {\r\n            jsonSchema.properties[i].type = uiSchema.bandArtist['ui:type'];\r\n\r\n          }\r\n        });\r\n        i++;\r\n      });\r\n      return jsonSchema;\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) { // added HttpInterceptor so maybe dont need this\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Backend http returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    return throwError(\r\n      'Something naughty happened; please try again later.');\r\n\r\n  }\r\n\r\n  // public getFormById(id: string, disabled = false, data?: object) {\r\n  //   const ob = FORMS_VALUES(disabled, data)[id];\r\n  //   console.log(ob)\r\n  //   return ob;\r\n  // }\r\n\r\n  // public getJSONFormById(id: string, disabled = false, data: any = {}) {\r\n  //   const frm = this.generateCleanJsonConfiguration(FORMS_VALUES(disabled, data)[id]);\r\n  //   return  frm;\r\n  // }\r\n\r\n  // private generateCleanJsonConfiguration(clone: object[]) {  // use this to create JSON config ??? maybe??\r\n  //   return JSON.parse(JSON.stringify(clone));\r\n  // }\r\n\r\n  // getYoutubeData() {\r\n  //   return this.http.get<FormlyFieldConfig[]>('assets/fake-data/you-tube-api.json');\r\n  // }\r\n\r\n  // getYoutubeFields() {\r\n\r\n  //   const mappedFields = [\r\n  //     { 'field': 'FULLNAME', 'enabled': false },\r\n  //     { 'field': 'EMAIL', 'enabled': false },\r\n  //   ];\r\n\r\n  //   const myFields = [\r\n  //     // FULLNAME(false, data['fullname']),\r\n  //     // EMAIL(false, data['email']),\r\n  //   ];\r\n\r\n  //   mappedFields.forEach(v => {\r\n  //     const fname = v.field;\r\n\r\n\r\n  //     //  myFields.push(\r\n\r\n  //         console.log(v[fname](false, {\r\n  //           'id': 'YOUTUBE',\r\n  //           'fullname': 'Bernie Winters',\r\n  //           'email': 'bernie@heaven.com'\r\n  //       }));\r\n\r\n  //       //  [fname](false, data['fullname'])\r\n\r\n\r\n  //    //   );\r\n\r\n\r\n  //   });\r\n\r\n  // }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IUser } from 'src/app/_models/classes';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BloomenUsersService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  // {\r\n  //   \"username\": \"string\",\r\n  //   \"password\": \"string\",\r\n  //   \"email\": \"string\",\r\n  //   \"invitation\": \"string\"\r\n  // }\r\n\r\n\r\n  create(bloomenUser: any): any {\r\n    bloomenUser = this.userMapper(bloomenUser)\r\n    localStorage.setItem('currentuser', JSON.stringify(bloomenUser));\r\n    //  return this.http.post<IUser>(`${environment.appApi.baseUrl}/accounts/register`, contact)\r\n    return this.http.post<any>('https://bloomen.herokuapp.com/auth/register', bloomenUser);\r\n  }\r\n\r\n\r\n  userMapper(user: any) {\r\n    const mappedUser = {\r\n      'username': user.logonDetails.username,\r\n      'password': user.logonDetails.password,\r\n      'email': user.accountDetails.email,\r\n      'invitation': 'tim@test.com'\r\n    };\r\n\r\n    return mappedUser;\r\n\r\n  }\r\n  //   update(contact: IUser): Observable<any> {\r\n  //     const user = <IUser>JSON.parse(localStorage.getItem('currentUser'))\r\n  //     contact.id = user.id;\r\n  //     return user;\r\n  //  //   return this.http.put<any>(`${environment.appApi.baseUrl}/accounts`, contact)\r\n  //   }\r\n\r\n\r\n}\r\n","<div class=\"row mb-4\">\r\n  <div class=\"col-3\">\r\n    <button  mat-flat-button color=\"primary\" routerLinkActive=\"active\"  (click)=\"switchForm('DEFAULT')\" type=\"show\" class=\"btn btn-primary\">Default Form</button>\r\n  </div>\r\n  <div class=\"col-3\">\r\n    <button mat-flat-button color=\"primary\" routerLinkActive=\"active\"  (click)=\"switchForm('LOGIN')\" type=\"show\" class=\"btn btn-primary\">Login Form</button>\r\n  </div>\r\n  <div class=\"col-3\">\r\n    <button mat-flat-button color=\"primary\" routerLinkActive=\"active\"  (click)=\"switchForm('YOUTUBE')\" type=\"button\" class=\"btn btn-secondary\">Test Form</button>\r\n  </div>\r\n</div>\r\n\r\n\r\n<form [formGroup]=\"userForm\" (ngSubmit)=\"submit()\">\r\n  <formly-form\r\n      [model]=\"model\"\r\n      [fields]=\"fields\"\r\n      [form]=\"userForm\"\r\n      (modelChange)=\"modelChange($event)\">\r\n                                         </formly-form>\r\n</form>\r\n\r\n\r\n\r\n\r\n\r\n<section class=\"form-container\" fxLayout=\"row\" fxLayoutGap=\"40px\" fxFlexFill>\r\n</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"form-group clear\">\r\n    <button type=\"submit\" [disabled]=\"!userForm.valid\" class=\"button button--action button--lg float-right\">\r\n      Submit\r\n    </button>\r\n    <div *ngIf=\"(iAccept.value === '' || iAccept.value === false) && userForm.valid\" class=\"float-right small \"\r\n      style=\"clear: both\">\r\n      <p><i class=\"fa fa-exclamation-triangle \" aria-hidden=\"true\" style=\"color:orange\"> </i> You must accept the\r\n        <b>Personal Data Statement</b> to continue</p>\r\n    </div>\r\n  </div> -->\r\n","import { distinctUntilChanged, debounceTime, map, filter, tap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport {\r\n  Component,\r\n  HostBinding,\r\n  OnChanges,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\n// import { AnimationService } from '../../_shared/animations/animation.service';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\n// import { ValidationService } from 'src/app/_shared/services/validation.service';\r\nimport { IUser } from 'src/app/_models/classes';\r\nimport { KendraioFormService } from 'src/app/_shared/ui-form/services/kendraio.form.service';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\n\r\nimport { FULLNAME, EMAIL, MESSAGE, TYPEAHEAD } from '../../../_shared/ui-form/schemas/form-elements';\r\n\r\n// import { environment } from 'environments/environment';\r\n@Component({\r\n  selector: 'app-account-form',\r\n  templateUrl: './account-form.component.html'\r\n})\r\nexport class AccountFormComponent implements OnInit, OnDestroy, OnChanges {\r\n  // @Input()\r\n  // currentUser: IUser;\r\n  @Input()\r\n  pageTitle: string;\r\n  @Input()\r\n  mode: string;\r\n  @Input()\r\n  data: any;\r\n  @Output()\r\n  formData: EventEmitter<Object> = new EventEmitter<Object>();\r\n\r\n  // @Output()\r\n  onSubmit = new EventEmitter<IUser>();\r\n  // @HostBinding('@routing')\r\n  // routing;\r\n  @HostBinding('style.display')\r\n  display = 'block';\r\n  emailChanges$: Observable<string>;\r\n\r\n  email: FormControl;\r\n  plantGroup: string;\r\n  subTitle: string;\r\n  showNamer = false;\r\n  // user: IUser;\r\n  // userForm: FormGroup;\r\n  public userForm = new FormGroup({});\r\n  public fields: FormlyFieldConfig[] = [\r\n    // ...this.formService.getDefaultForm()\r\n  ];\r\n\r\n\r\n\r\n  crumb: string;\r\n  // private userFormChanges: any;\r\n  private emailSub: Subscription;\r\n  isLoading = false;\r\n  isUnique = false;\r\n  msg: any = '';\r\n  errorMessage: string;\r\n  originalEmail: string;\r\n  // EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n  EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  TEL_REGEX = /^[\\d\\s]+$/i;\r\n  now: string;\r\n  firstname: FormControl;\r\n  lastname: FormControl;\r\n  telephone: FormControl;\r\n  sub: Subscription;\r\n  model: {};\r\n  dataFromFakeData: {};\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private formService: KendraioFormService,\r\n    // private fullnamex = FULLNAME,\r\n    // private validationService: ValidationService\r\n  ) {\r\n\r\n  }\r\n  // updateOn: 'blur' USE THIS TODO:\r\n\r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n      this.email.hasError('pattern') ? 'Not a valid email' :\r\n        '';\r\n  }\r\n\r\n\r\n  get address(): any {\r\n    return this.userForm.get('address');\r\n  }\r\n  get iAccept(): any {\r\n    return this.userForm.get('iAccept');\r\n  }\r\n  ngOnInit() {\r\n    this.now = (Math.floor(Math.random() * 9999) + 1).toString(); // Date().toString();\r\n\r\n    // this.emailChanges$ = this.email.valueChanges;\r\n    // this.currentUser$ = this.currentUser;\r\n    this.subTitle = this.route.snapshot.data['subTitle'];\r\n    this.crumb = this.route.snapshot.data['crumbs'];\r\n\r\n\r\n\r\n    this.sub = this.userForm.valueChanges\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(600)\r\n      )\r\n      .subscribe(newValue => {\r\n\r\n        this.formData.emit(this.userForm);\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n  ngOnChanges() {\r\n    console.log('ive changed')\r\n  }\r\n\r\n\r\n     makePropSetter<T>(prop: string): (val: T) => T {\r\n      return function(val) {\r\n        this.props[prop] = val;\r\n        return val;\r\n      }\r\n    }\r\n\r\n\r\n  public switchForm(id) {\r\n\r\n    const mappedFields = [\r\n      { 'field': 'FULLNAME', 'enabled': false },\r\n      { 'field': 'EMAIL', 'enabled': false },\r\n    ];\r\n\r\n    const myFields = [\r\n      // FULLNAME(false, data['fullname']),\r\n      // EMAIL(false, data['email']),\r\n    ];\r\n\r\n\r\n//     this.formService.getYoutubeData()\r\n//       .subscribe(newValue => {\r\n//         this.dataFromFakeData = newValue;\r\n//         this.fields = this.formService.getJSONFormById(id, false);\r\n//         this.model = {};\r\n//         mappedFields.forEach(v => {\r\n//           // const fname: any = ;\r\n// // console.log(this.fullnamex)\r\n//               // v['field'](false, this.dataFromFakeData['fullname']);\r\n//               // this[v.field.toLowerCase()]();\r\n//         });\r\n//         this.fields = this.formService.getFormById(id, false, this.dataFromFakeData);\r\n//       });\r\n\r\n  }\r\n\r\n  public FULLNAME() {\r\n    console.log('gggg');\r\n  }\r\n\r\n\r\n  public modelChange(e) {\r\n  }\r\n\r\n  public detailsModelChange(e) {\r\n  }\r\n  // checkEmailName(val: string): void {\r\n  //   if (this.email.valid && this.email.value !== this.originalEmail) {\r\n  //     const sub = this.validationService\r\n  //       .checkForDupEmail(val)\r\n  //       .subscribe((res: string) => this.onEmailChecked(res), (error: any) => (this.errorMessage = <any>error));\r\n  //     this.emailSub.add(sub);\r\n  //   }\r\n  // }\r\n\r\n  onEmailChecked(res: any): void {\r\n    this.isUnique = !res.result.value;\r\n    if (this.isUnique) {\r\n      this.msg = { msg: null, isValid: true };\r\n    } else {\r\n      this.msg = { msg: 'This Email is Already in use! Please try another', isValid: false };\r\n    }\r\n    this.email.setValidators([\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n      // isValid(this.isUnique),\r\n      Validators.pattern(this.EMAIL_REGEXP)\r\n    ]);\r\n    this.email.updateValueAndValidity();\r\n    this.isLoading = false;\r\n  }\r\n  onEmailChange() { }\r\n\r\n  submit() {\r\n    if (this.userForm.valid) {\r\n      this.onSubmit.emit(this.userForm.value);\r\n      // this.originalEmail = this.userForm.value.contactDetails.email;\r\n    }\r\n  }\r\n\r\n  prepareSaveUser(): IUser {\r\n    const formModel = this.userForm.value;\r\n    const saveUser: IUser = {\r\n      id: '',\r\n      fName: '',\r\n      lName: ''\r\n    };\r\n    return saveUser;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.userFormChanges.unsubscribe() // TODO!!\r\n    // this.emailSub.unsubscribe();\r\n  }\r\n\r\n  toggleLogin() {\r\n    // this.loginService.isDisplayed = !this.loginService.isDisplayed;\r\n    // if (this.loginService.isDisplayed) {\r\n    this.router.navigate([{ outlets: { popup: ['login'] } }]);\r\n    // } else {\r\n    //   this._router.navigate([{ outlets: { popup: null } }]);\r\n    // }\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"mat-typography mb-3\">\r\n  <h2>Current Users</h2>\r\n</div>\r\n\r\n<label>Custom tags</label>\r\n\r\n<p>\r\n  Selected user IDs: {{selectedUserIds}}\r\n</p>\r\n<hr />\r\n\r\n\r\n<ng-select [items]=\"users$ | async\"\r\n[addTag]=\"addCustomUser\"\r\nplaceholder=\"Select a User\"\r\n[multiple]=\"true\"\r\nbindLabel=\"username\"\r\nbindValue=\"id\"\r\n  [(ngModel)]=\"selectedUserIds\">\r\n\r\n  <ng-template ng-header-tmp>\r\n    Custom header\r\n  </ng-template>\r\n  <ng-template ng-label-tmp let-item=\"item\">\r\n\r\n     <b> {{item.username}}</b> is cool  -----\r\n  </ng-template>\r\n  <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\r\n    <img height=\"15\" width=\"15\" [src]=\"item.avatar\" />\r\n    <b>{{item.username}}</b> ( {{item.role}})\r\n  </ng-template>\r\n  <ng-template ng-footer-tmp>\r\n    Custom footer\r\n  </ng-template>\r\n</ng-select>\r\n\r\n<hr>\r\n\r\n\r\nLIST COMPONENT\r\n\r\n\r\n<ng-container *ngIf=\"users$ | async as users\">\r\n  <table mat-table [dataSource]=\"users\" class=\"user-table mat-elevation-z8\">\r\n\r\n    <ng-container matColumnDef=\"role\">\r\n      <th mat-header-cell *matHeaderCellDef> Role </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.role}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"username\">\r\n      <th mat-header-cell *matHeaderCellDef> Username </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"hash\">\r\n      <th mat-header-cell *matHeaderCellDef> Hash </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.hash}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"organisation\">\r\n      <th mat-header-cell *matHeaderCellDef> Organisation </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.organisation}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"createdAtUTC\">\r\n      <th mat-header-cell *matHeaderCellDef> Created </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.createdAtUTC}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <!--  <pre>{{ users | json }}</pre>-->\r\n</ng-container>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {BloomenApiService} from '../../../services/bloomen-api.service';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n  selectedUserIds: number[];\r\n  users$;\r\n  displayedColumns: string[] = ['role', 'username', 'hash', 'organisation', 'createdAtUTC'];\r\n\r\n  constructor(\r\n    private readonly bloomenApi: BloomenApiService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.users$ = this.bloomenApi.getUsers();\r\n  }\r\n\r\n  addCustomUser = (term) => ({id: term, name: term});\r\n\r\n}\r\n","<div class=\"mat-typography mb-3\">\r\n  <h2>Register New User</h2>\r\n</div>\r\n\r\n<mat-progress-bar *ngIf=\"isLoading\" mode=\"buffer\"></mat-progress-bar>\r\n\r\n\r\n<form [formGroup]=\"registerUser\" autocomplete=\"off\">\r\n  <mat-card class=\"mb-3\">\r\n    <mat-card-header>\r\n      <mat-card-title>User Details</mat-card-title>\r\n      <mat-card-subtitle></mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content formGroupName=\"accountDetails\">\r\n      <app-account-form (formData)=\"eventHandler($event, 'accountDetails')\"></app-account-form>\r\n    </mat-card-content>\r\n  </mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { BloomenUsersService } from '../../_shared/bloomen-users.service';\r\nimport { HelpTextService } from 'src/app/_shared/services/help-text.service';\r\nimport { helpers } from 'chart.js';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register-user',\r\n  templateUrl: './register-user.component.html',\r\n  styleUrls: ['./register-user.component.scss']\r\n})\r\nexport class RegisterUserComponent implements OnInit {\r\n  regFormIsVaild = false;\r\n  logonFormIsVaild = false;\r\n  allFormsVaild = false;\r\n  registerUser: FormGroup;\r\n  isLoading: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: BloomenUsersService,\r\n    private help: HelpTextService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm()\r\n  }\r\n\r\n  get accountDetails() {\r\n    return this.registerUser.get('accountDetails');\r\n  }\r\n  get logonDetails() {\r\n    return this.registerUser.get('logonDetails');\r\n  }\r\n  createForm() {\r\n    this.registerUser = this.fb.group({\r\n      accountDetails: [''],\r\n      logonDetails: ['']\r\n    });\r\n  }\r\n\r\n  eventHandler(event: any, form: string) {\r\n\r\n    switch (form) {\r\n      case 'accountDetails':\r\n      this.regFormIsVaild = event.valid && event.dirty;\r\n        break;\r\n\r\n      case 'logonDetails':\r\n      this.logonFormIsVaild = event.valid && event.dirty;\r\n      console.log(event);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\nthis.allFormsVaild = this.logonFormIsVaild && this.regFormIsVaild;\r\n    // setTimeout(() => {\r\n\r\n    // if (event.valid) {\r\n    //   this[form].patchValue(event.value);\r\n    // }\r\n    // this.name.setErrors({ invalid: true, valid: false, badword: true })\r\n    // this[form].setErrors({ invalid: false});\r\n    console.log(this.accountDetails.valid);\r\n    console.log(this.logonDetails.valid);\r\n    console.log(event);\r\n    // });\r\n  }\r\n\r\n  submit() {\r\n    this.isLoading = true;\r\n    this.handleResponse('val');\r\n    // this.userService.create(this.registerUser.value)\r\n    //   .subscribe(val => {\r\n    //     this.handleResponse(val);\r\n    //   },\r\n    //     error => {\r\n    //    //   console.log(error.error.error);\r\n    //   //    alert(error.error.error);\r\n    //       // this.isValid = false;\r\n    //       // this.showForm = true\r\n    //       this.help.askHelp('', 'bloomen.registerFail' );\r\n    //    //    this.msgHeader = 'Oops a Daisy! ' + this.handleError(error.error.errorMessage) + ' Please check and try again';\r\n    //     });\r\n\r\n  }\r\n\r\n  handleResponse(str: string) {\r\n\r\n    setTimeout(() => {\r\n      this.help.askHelp('', 'bloomen.registerSuccess');\r\n      this.isLoading = false;\r\n\r\n      this.router.navigate([{ outlets: { primary: 'bloomen/users', popup: ['messages'] } }]);\r\n\r\n      // this.name.setErrors({ invalid: true, valid: false, badword: true })\r\n      // this[form].setErrors({ invalid: false});\r\n    }, 3000);\r\n\r\n    //   setTimeout(() => {\r\n    //  this.router.navigate(['bloomen/users', { outlets: { popup: ['messages']} }]);\r\n    //   }, 5000);\r\n    //   setTimeout(() => {\r\n    //   //  this.router.navigate([{ outlets: { popup: null } }]);\r\n    //   }, 7000);\r\n\r\n  }\r\n\r\n\r\n  handleError(str: string) {\r\n    const errMsg = str || 'The info you sent is not valid.'\r\n    if (errMsg.indexOf('expired') > -1) {\r\n      // this.showForm = false;\r\n\r\n    } else {\r\n      // this.showForm = true;\r\n    }\r\n    return errMsg;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterUserComponent } from './register-user/register-user.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n{\r\n        path: '',\r\n        component: ListComponent,\r\n        data: {\r\n          pageTitle: {'de': 'Dateien' , 'fr': '', 'en-US': 'List User'},\r\n          breadcrumb: {'de': 'Dateien' , 'fr': '', 'en-US': 'list.title'},\r\n          menuLabel: 'List'  \r\n        }\r\n      },\r\n      {\r\n        path: 'list',\r\n        component: ListComponent,\r\n        data: {\r\n          pageTitle: {'de': 'Dateien' , 'fr': '', 'en-US': 'List User'},\r\n          breadcrumb: {'de': 'Dateien' , 'fr': '', 'en-US': 'list.title'},\r\n          menuLabel: 'List'  \r\n        }\r\n      },\r\n\r\n      {\r\n        path: 'register',\r\n        component: RegisterUserComponent,\r\n        data: {\r\n          pageTitle: {'de': 'Dateien' , 'fr': '', 'en-US': 'Register'},\r\n          breadcrumb: {'de': 'Dateien' , 'fr': '', 'en-US': 'register.title'},\r\n          menuLabel: 'Register'\r\n  \r\n        }\r\n      },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { RegisterUserComponent } from './register-user/register-user.component';\r\n// import { ValidationService } from 'src/app/_shared/services/validation.service';\r\nimport { AccountFormComponent, AccountLoginFormComponent } from './_shared';\r\nimport { SharedModule, minlengthValidationMessage } from 'src/app/_shared/shared.module';\r\nimport { AppMaterialModule } from 'src/app/app-material/app-material.module';\r\nimport { ListComponent } from './list/list.component';\r\nimport { PasswordStrength } from 'src/app/_shared/directives/passwordValidation';\r\nimport { NG_VALIDATORS } from '@angular/forms';\r\n// import { FormlyMaterialModule } from '@ngx-formly/material';\r\nimport { FormlyModule } from '@ngx-formly/core';\r\nimport { UsersComponent } from './users.component';\r\nimport { UiFormModule } from '../../_shared/ui-form/ui-form.module';\r\n// import { UsersComponent } from './users.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RegisterUserComponent, AccountFormComponent, AccountLoginFormComponent, ListComponent\r\n    ],\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    SharedModule,\r\n    AppMaterialModule,\r\n    // FormlyMaterialModule,\r\n    FormlyModule.forRoot({\r\n      validationMessages: [\r\n        { name: 'required', message: 'This field is required' },\r\n        { name: 'minlength', message: minlengthValidationMessage },\r\n      ],\r\n    }),\r\n\r\n  ],\r\n  exports: [\r\n    AccountFormComponent,\r\n    AccountLoginFormComponent\r\n  ],\r\n  providers: [\r\n    // ValidationService,\r\n    {provide: NG_VALIDATORS, useValue: PasswordStrength, multi: true}\r\n  ]\r\n})\r\nexport class UsersModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport {omit} from 'lodash-es';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nconst BLOOMEN_URL = 'https://bloomen.herokuapp.com'; // no trailing slash\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BloomenApiService {\r\n\r\n  keys = {\r\n    Publisher: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.' +\r\n      'eyJ1c2VyIjp7InJvbGUiOiJwdWJsaXNoZXIiLCJyZXB1dGF0aW9uIjp7InBvc2l0aXZlI' +\r\n      'jowLCJuZWdhdGl2ZSI6MH0sInNldHRpbmdzIjp7ImF0dHJpYnV0aW9uIjp0cnVlfSwia3l' +\r\n      'jIjp7ImFkZHJlc3MiOiIiLCJwaG9uZSI6IiIsImZpcnN0bmFtZSI6IiIsImxhc3RuYW1lIj' +\r\n      'oiIiwiaWQxIjoiIiwiaWQyIjoiIiwic3RhdHVzIjowLCJyZXZpZXdlZEJ5IjoiIn0sIl9pZC' +\r\n      'I6IjViYjQ5MDI5NGRkN2ExMmNhYzQxYTU3NSIsInVzZXJuYW1lIjoicHVibGlzaGVyIiwiaGF' +\r\n      'zaCI6IjUyYWRlZDE2NTM2MDM1MmEwZjU4NTc1NzFkOTZkNjhmIiwiZW1haWwiOiJwdWJsaXNoZ' +\r\n      'XJAYXRjLmdyIiwib3JnYW5pc2F0aW9uIjoiQVRDIiwiY3JlYXRlZEF0VVRDIjoiMjAxOC0xMC0w' +\r\n      'M1QwOTo0NzoyMS4zMDlaIiwiX192IjowLCJvcmciOm51bGwsImlkIjoiNWJiNDkwMjk0ZGQ3YTEy' +\r\n      'Y2FjNDFhNTc1In0sImlhdCI6MTU1MDU4MTk0Nn0.jxCWK2avRtvmuh0rdeg8z0iu1sG4JaBfkI_gZDNx1Co',\r\n    Photographer: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.' +\r\n      'eyJ1c2VyIjp7InJvbGUiOiJwaG90b2dyYXBoZXIiLCJyZXB1dGF0aW9uIjp7InBvc2l0aX' +\r\n      'ZlIjo3LCJuZWdhdGl2ZSI6MH0sInNldHRpbmdzIjp7ImF0dHJpYnV0aW9uIjp0cnVlfSwia' +\r\n      '3ljIjp7ImFkZHJlc3MiOiIiLCJwaG9uZSI6IiIsImZpcnN0bmFtZSI6IiIsImxhc3RuYW1lI' +\r\n      'joiIiwiaWQxIjoiIiwiaWQyIjoiIiwic3RhdHVzIjowLCJyZXZpZXdlZEJ5IjoiIn0sIl9pZC' +\r\n      'I6IjViYjM1ZmE2ZWIwNDMxMWE1YzYwNjA0MCIsInVzZXJuYW1lIjoicGhvdG9ncmFwaGVyIiwi' +\r\n      'aGFzaCI6ImFiNWIwMzgxN2NhYTAxYzRhMmEwZWFkY2ZlNjQ4NjljIiwiZW1haWwiOiJwaG90b2d' +\r\n      'yYXBoZXJAdGVzdC5jb20iLCJvcmdhbmlzYXRpb24iOiJwaG90b2dyYXBoZXIiLCJjcmVhdGVkQXR' +\r\n      'VVEMiOiIyMDE4LTEwLTAyVDEyOjA4OjA2LjEyMloiLCJfX3YiOjB9LCJpYXQiOjE1NTA1MDM2NTR9' +\r\n      '.LThaEsPkrDkvlvKMw276PHlEsl430yNDAPATFi9sNw8'\r\n  };\r\n  activeUser = 'Publisher';\r\n\r\n  constructor(\r\n    private readonly http: HttpClient\r\n  ) { }\r\n\r\n  getUsers() {\r\n    return this.http.get(`${BLOOMEN_URL}/users/kyc`, {\r\n      headers: { Authorization: `Bearer ${this.keys[this.activeUser]}` }\r\n    }).pipe(\r\n      tap(console.log),\r\n      map(users => users.map(user => omit(user, ['__v', '_id'])))\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}